using System;
using System.Collections.Generic;

namespace EMVCardReader.Database
{
    public static class ATRList
    {
        public static List<List<string>> List = new List<List<string>>()
        {
            new List<string> () { "3B .. .. .. .. .. .. .. 00 31 B8 64 00 00 00 00 73 .. .. .. 82 90 00", $"MultiApp ID IAS ECC 72K CC (with IAS XL / IAS ECC Applet) IAS ECC Type 3" },
            new List<string> () { "3B .. .. .. .. .. .. .. 00 31 B8 64 00 00 00 00 73 .. .. .. 82 90 00 ..", $"MultiApp ID IAS ECC 72K CC (with IAS XL / IAS ECC Applet) IAS ECC Type 4" },
            new List<string> () { "3B .. .. .. .. 00 31 B8 64 .. .. .. .. 73 .. .. .. 82 90 00", $"IDClassic IAS (old name: IAS TPC) IAS ECC Type 1{Environment.NewLine}MultiApp ID IAS ECC 72K CC (with IAS XL / IAS ECC Applet) IAS ECC Type 1" },
            new List<string> () { "3B .. .. .. .. 81 31 80 43 00 31 B8 64 .. .. .. .. 73 .. .. .. 82 90 00", $"IDClassic IAS (old name: IAS TPC) IAS ECC Type 1, T=1{Environment.NewLine}MultiApp ID IAS ECC 72K CC (with IAS XL / IAS ECC Applet) IAS ECC Type 2" },
            new List<string> () { "3B .. .. .. 00 31 B8 64 .. .. .. .. 73 .. .. .. 82 90 00 A3", $"IDClassic IAS (old name: IAS TPC){Environment.NewLine}IAS ECC Type 1 Contactless Prox-DU" },
            new List<string> () { "3B .. .. 41 73 74 72 69 64", $"Axalto Cryptoflex .NET" },
            new List<string> () { "3B 00 3B 28 00 34 41 45 41 30 32 30 30", $"Cryptoguard card used for pay tv Plustelka (DVB-T2 - Slovak) (Pay TV)" },
            new List<string> () { "3B 02 10 50", $"Visa (Bank)" },
            new List<string> () { "3B 02 14 1C", $"UAE (United Arab Emirates) (eID)" },
            new List<string> () { "3B 02 14 50", $"Schlumberger Multiflex 3k" },
            new List<string> () { "3B 02 14 50 11", $"Maste visa card (Bank)" },
            new List<string> () { "3B 02 14 51", $"8A (Bank)" },
            new List<string> () { "3B 02 15 40", $"MasterCard (Bank)" },
            new List<string> () { "3B 02 30 92 01 24 00 16 07 00 00", $"Credit (Bank)" },
            new List<string> () { "3B 02 36 02", $"EMTG56 0.2" },
            new List<string> () { "3B 02 52 01", $"EMTCG256-3G 0.1" },
            new List<string> () { "3B 02 53 01", $"Gemplus GemClub Memo{Environment.NewLine}SuperShop clubcard" },
            new List<string> () { "3B 02 6F 33", $"Polish national PKI equivalent to national id card issued by Eurocert - 1 of 2 Polish authorized issuers (PKI)" },
            new List<string> () { "3B 04 00 00 00 00", $"Laundromat payment card{Environment.NewLine}Spanish ID (\"DNIe: Documento Nacional de Identidad electrónico)." },
            new List<string> () { "3B 04 00 00 00 73", $"ASE M2 Card (I2C) (Other)" },
            new List<string> () { "3B 04 00 04 00 00", $"Italian healthcare card (TS) National Service Card (CNS) - Regione Lazio - (HealthCare)" },
            new List<string> () { "3B 04 01 02 03 04", $"SLE4442 - memory card (256) with write protection PIN. (Other)" },
            new List<string> () { "3B 04 05 D4 86 C8", $"Telstra (Telecom Australia) Pay Phone Phonecard (Telecommunication)" },
            new List<string> () { "3B 04 07 3C 85 92", $"OLD Spanish Prepaid phone cards (pesetas) provided by Telefonica" },
            new List<string> () { "3B 04 07 3C 85 9A", $"OLD Spanish Prepaid phone cards (pesetas) provided by Telefonica" },
            new List<string> () { "3B 04 07 3C 89 10", $"OLD Spanish Prepaid phone cards (pesetas) provided by Telefonica" },
            new List<string> () { "3B 04 07 3C 89 18", $"OLD Spanish Prepaid phone cards (pesetas) provided by Telefonica" },
            new List<string> () { "3B 04 07 3C 89 92", $"OLD Spanish Prepaid phone cards (pesetas) provided by Telefonica" },
            new List<string> () { "3B 04 07 3C 89 9A", $"OLD Spanish Prepaid phone cards (pesetas) provided by Telefonica" },
            new List<string> () { "3B 04 07 3C 8C 10", $"OLD Spanish Prepaid phone cards (pesetas) provided by Telefonica" },
            new List<string> () { "3B 04 09 9C 2B 83", $"T.P.G. - CART@BONUS 20CHF (Transport)" },
            new List<string> () { "3B 04 0A 1C D1 C4", $"Lift (Transport)" },
            new List<string> () { "3B 04 17 3C CC E0", $"prepaid payphone card, issued by Telefónica Comunicaciones Públicas" },
            new List<string> () { "3B 04 17 D4 30 00", $"Gemalto BONZA game smart-card. (Other)" },
            new List<string> () { "3B 04 17 D4 66 08", $"Prepaid public telephone card from Antel, Uruguay. (Telecommunication)" },
            new List<string> () { "3B 04 17 D4 C8 82", $"prepaid payphone card, issued by Lietuvos Telekomas (now Teo LT)" },
            new List<string> () { "3B 04 1B F4 3F 54", $"German TelefonKarte 50DM. Memory card with Solaic chip (Other)" },
            new List<string> () { "3B 04 2A FF 32 00", $"Mac Gray Intelligent Laundry Systems laundry card" },
            new List<string> () { "3B 04 41 11 77 81", $"Sample Mifare DESFire contactless smartcard from Phillips" },
            new List<string> () { "3B 04 41 11 77 B1", $"IBM JCOP 30 contactless" },
            new List<string> () { "3B 04 49 32 43 2E", $"German Health Insurance Card{Environment.NewLine}\"LogCard\" from concept2.com (a indoor rower manufacturer){Environment.NewLine}I2C card" },
            new List<string> () { "3B 04 50 D7 F3 0E", $"Ukranian memory card for public phones. Manufacturer: \"Kvazar\" (Other)" },
            new List<string> () { "3B 04 60 89", $"Smartcard 3.1 (JavaCard)" },
            new List<string> () { "3B 04 69 6C 20 65", $"ASE M2 Card 2Kbit (Other)" },
            new List<string> () { "3B 04 7F 01 00 00", $"Russian memory card for payphones. Manufacturer: \"Exiton\" (Other)" },
            new List<string> () { "3B 04 82 23 10 91", $"VISA DEBIT (Bank)" },
            new List<string> () { "3B 04 92 23 10 91", $"Siemens SLE 4432/42 card" },
            new List<string> () { "3B 04 98 94 00 C4", $"Windsor and Maidenhead Advantage Card" },
            new List<string> () { "3B 04 99 FF FF 90", $"Madrid prepaid parkimeters parking card" },
            new List<string> () { "3B 04 9C FF 21 43", $"Hercules laundry stored value card" },
            new List<string> () { "3B 04 A2 01 00 00", $"Hospital's expenditure (HealthCare)" },
            new List<string> () { "3B 04 A2 13 10 91", $"PM2P Chipkarte SLE 4442, Code FFFFFF{Environment.NewLine}Bahn BKK (Deutsche Bahn AG - Insurance Company){Environment.NewLine}NH Hotels World fidelization card{Environment.NewLine}Miele Professional card for paying washing machine{Environment.NewLine}SLE5542 Memory Card (Other)" },
            new List<string> () { "3B 04 C9 D0 F1 40", $"Cuban prepaid phone card provided by ETECSA" },
            new List<string> () { "3B 04 C9 D5 FD 20", $"Bell Canada LaPuce card - prepaid phone card (Telecommunication)" },
            new List<string> () { "3B 04 F0 F0 36 96", $"Mooltipass Smartcard (Other)" },
            new List<string> () { "3B 04 FE FE FE FE", $"Lawyers identity card (eID)" },
            new List<string> () { "3B 04 FF 1F 00 00", $"master card (Bank)" },
            new List<string> () { "3B 04 FF FF FF FF", $"Identity card Universidad del Pais Vasco / Euskal Herriko Unibertsitatea www.ehu.es" },
            new List<string> () { "3B 05 00 03 36 66 AE", $"HID (eID)" },
            new List<string> () { "3B 05 68 01 01 02 05", $"Certinomis card (electronic certificates){Environment.NewLine}Schlumberger Cryptoflex ActivCard" },
            new List<string> () { "3B 05 80 73 F7 01 C0", $"(Shenzhen, China) Mingwah Aohan eKey, eID" },
            new List<string> () { "3B 06 00 00 04 2E CF 4C", $"HID 1346 ProxKey III" },
            new List<string> () { "3B 06 00 05 64 03 2B 2B", $"HID 0009 P (eID)" },
            new List<string> () { "3B 06 00 10 01 D6 C5 46", $"HID ProxKey II FOB" },
            new List<string> () { "3B 06 01 .. .. .. ..", $"HID Prox H10301 Format{Environment.NewLine}26 bit (FAC+CN)" },
            new List<string> () { "3B 06 01 00 02 00 96 06", $"EM4200 (eID)" },
            new List<string> () { "3B 06 01 00 10 00 06 60", $"Access card for parking garage in South Boston (Other)" },
            new List<string> () { "3B 06 01 00 22 01 82 27", $"HID ProxCard II (Other)" },
            new List<string> () { "3B 06 01 01 00 00 10 73", $"HID Prox 26-bit (eID)" },
            new List<string> () { "3B 06 01 01 02 00 00 01", $"HID0009P (eID)" },
            new List<string> () { "3B 06 01 01 18 03 82 09", $"HID ProxKey III (125kHz) (eID)" },
            new List<string> () { "3B 06 01 02 10 .. .. ..", $"ISOProx II Card:" },
            new List<string> () { "3B 06 02 .. .. .. .. ..", $"HID Prox H10302 Format{Environment.NewLine}37 bit (CN)" },
            new List<string> () { "3B 06 04 .. .. .. .. ..", $"HID Prox H10304 Format{Environment.NewLine}37 bit (FAC+CN)" },
            new List<string> () { "3B 06 14 .. .. .. ..", $"HID Prox H10302 Format{Environment.NewLine}32 bit clock/data card" },
            new List<string> () { "3B 06 14 .. .. .. .. ..", $"HID Prox Corp 1000 Format{Environment.NewLine}35 bit (CIC+CN)" },
            new List<string> () { "3B 06 2A 01 01 01 00 05", $"Driving Licence (Transport)" },
            new List<string> () { "3B 06 81 24 80 80 90 00", $"10€ credit card for TV & telephone in Jerez de la Frontera hospital's rooms" },
            new List<string> () { "3B 06 A2 13 10 91 90 00", $"C3P2K SAMPLE CARD (C3PO, S.L)" },
            new List<string> () { "3B 06 A2 16 10 91 90 00", $"Rectangular (Other)" },
            new List<string> () { "3B 07 55 4E 4B 4E 4F 57 4E", $"US DOD Smart Card" },
            new List<string> () { "3B 07 64 .. .. .. .. .. ..", $"HID Corporate 1000 Format" },
            new List<string> () { "3B 07 64 08 10 .. .. .. ..", $"UC Berkeley student card" },
            new List<string> () { "3B 09 41 04 11 DD 82 2F 00 00 88", $"1k Contactless Mifare" },
            new List<string> () { "3B 0A 20 62 0C 01 4F 53 45 99 14 AA", $"GSM-SIM BEN (1800MHz)" },
            new List<string> () { "3B 0A 21 00 26 07 4F 53 45 98 08 F8", $"ORGA test systems GSM phase 2+ test SIM." },
            new List<string> () { "3B 0E BC E1 CA AF C2 DF BC AD BC D3 C3 DC BF A8", $"German \"Versichertenkarte\" Healthcare card" },
            new List<string> () { "3B 0F 00 65 46 53 05 16 05 71 DF 00 00 00 45 50 53", $"Feitian ePass3000, Feitian formatted" },
            new List<string> () { "3B 0F 00 65 46 53 05 16 05 71 DF 00 00 00 80 6A 82", $"Feitian ePass3000, OpenSC formatted" },
            new List<string> () { "3B 0F 00 65 46 53 05 30 05 71 DF 00 00 00 80 6A 82", $"Fetian epass3000" },
            new List<string> () { "3B 0F 52 4E 42 4F 24 56 23 2E 00 00 00 12 00 58 76", $"iKey1000 (PKI)" },
            new List<string> () { "3B 0F 80 22 15 E1 5A 00 20 00 30 21 03 31 21 03 00", $"RSA SecurID SID800 token" },
            new List<string> () { "3B 0F 80 22 15 E1 5A 00 20 00 31 21 03 31 21 03 00", $"RSA SecurID SID800 token" },
            new List<string> () { "3B 0F 80 31 E0 6B 05 07 05 02 82 55 55 55 55 55 55", $"Secure Worker Access Consortium Identification (eID)" },
            new List<string> () { "3B 0F 80 6A 16 32 46 49 53 45 53 8C E0 FF 07 90 00", $"GSM-SIM Sonera (from 1998)" },
            new List<string> () { "3B 0F 80 91 E1 31 80 65 B0 83 11 11 AC 83 00 90 00", $"TOP DM GX4 Cards [TOP DM GX4 on SmartLogon Pro]" },
            new List<string> () { "3B 0F FF C1 B5 CC 72 CA 00 00 ..", $"Mifare Std 1K" },
            new List<string> () { "3B 0F FF FF FF FF FF FF FF FF FF FF FF FF FF FF 80", $"CAC (Contractor Access Card) / Oberthur ID One 128 v5.5a D (PKI)" },
            new List<string> () { "3B 10 14 50", $"HSID6000 (PKI)" },
            new List<string> () { "3B 11 95 80", $"NXP J3H145 (JavaCard)" },
            new List<string> () { "3B 12 95 36 06", $"EMTG56 0.6 (sub-version 0.1)" },
            new List<string> () { "3B 12 95 36 08", $"EMTG56 0.8 (sub-version 0.1)" },
            new List<string> () { "3B 12 95 36 09", $"EMTG56 0.9 (sub-version 0.1)" },
            new List<string> () { "3B 13 96 13 09 17", $"Teacher Card (Other)" },
            new List<string> () { "3B 15 11 12 CA 07 00 DB", $"Tricolor TV center card (Pay TV)" },
            new List<string> () { "3B 15 11 12 CA 07 11 CA", $"DRE Crypt (Pay TV)" },
            new List<string> () { "3B 15 11 12 CA 07 14 CF", $"PlatformaHD (Russia) DRE Crypt 4AE1:14" },
            new List<string> () { "3B 15 13 80 53 41 52 03", $"Eutron CryptoIdentity (ATMEL AT903232C - 6464C Cryptographic{Environment.NewLine}processors, 64KB EEPROM, RSA 2048)" },
            new List<string> () { "3B 15 18 2E 00 5C 00 01", $"China Unicom 64k OTA" },
            new List<string> () { "3B 15 18 80 53 41 52 05", $"Israel Defence Force ID Card (eID)" },
            new List<string> () { "3B 15 94 C3 02 08 16 01", $"GSM-SIM EMT (Estonia)" },
            new List<string> () { "3B 16 11 72 04 01 3F 02 00", $"Vodafone Romania SIM card (Telecommunication)" },
            new List<string> () { "3B 16 18 AF 01 02 02 02 00", $"SIM Virgin Mobile (Australia)" },
            new List<string> () { "3B 16 18 D0 00 0B 01 03 00", $"Cellular SIM (Telecommunication)" },
            new List<string> () { "3B 16 94 20 02 01 20 01 0D", $"Rogers SIM Card (phone / cable provider in Canada)" },
            new List<string> () { "3B 16 94 20 06 01 0C 01 00", $"Vodafone Romania (Telecommunication)" },
            new List<string> () { "3B 16 94 61 80 00 01 06 03", $"Thales PayShield9000 Local Master Key (hardware key) card (Other)" },
            new List<string> () { "3B 16 94 71 01 01 00 27 00", $"Cingular GSM SIM Card" },
            new List<string> () { "3B 16 94 71 01 01 01 02 00", $"Iridium SIM Card (Telecommunication)" },
            new List<string> () { "3B 16 94 71 01 01 05 02 00", $"GSM SIM Bouygues Telecom" },
            new List<string> () { "3B 16 94 71 01 01 06 02 00", $"SFR GSM SIM Card" },
            new List<string> () { "3B 16 94 71 01 01 0A 01 00", $"TIM Brazil SIM card (Telecommunication)" },
            new List<string> () { "3B 16 94 72 04 01 00 00 00", $"MTS SIM card, Russia (Telecommunication)" },
            new List<string> () { "3B 16 94 81 10 06 01 .. ..", $"Schlumberger Cyberflex Access 16K" },
            new List<string> () { "3B 16 94 81 10 06 01 81 2F", $"Schlumberger Cyberflex Access Augmented Crypto" },
            new List<string> () { "3B 16 94 81 10 06 01 81 3F", $"Schlumberger Cyberflex Access Crypto" },
            new List<string> () { "3B 16 94 D0 00 13 00 00 00", $"OPLUZ OPM610 EU Multifunction Smartcard Reader (Telecommunication)" },
            new List<string> () { "3B 16 94 D0 01 6E 66 0D 00", $"Vodafone Romania (Telecommunication)" },
            new List<string> () { "3B 16 94 D0 01 76 0D 2A 00", $"Peruvian GSM SIM" },
            new List<string> () { "3B 16 94 D0 01 7B 2C 0E 00", $"SIM tunisiana" },
            new List<string> () { "3B 16 95 9B 00 07 01 18 03", $"Thai GSM UICC (Telecommunication)" },
            new List<string> () { "3B 16 95 D0 00 45 F7 01 00", $"Telefónica O2 Czech Republic, a.s. - O2 sim card - 173285 / SIM64ND.GO0" },
            new List<string> () { "3B 16 95 D0 01 6C FD 0D 00", $"Virgin Mobile SIM card (SIM)" },
            new List<string> () { "3B 16 95 D0 01 7B DA 0D 00", $"Verizon GSM SIM (Telecommunication)" },
            new List<string> () { "3B 16 96 41 73 74 72 69 64", $"Gemalto IDPrime v2+ .NET" },
            new List<string> () { "3B 16 96 77 00 06 01 04 03", $"AIS One-2-Call GSM UICC (Telecommunication)" },
            new List<string> () { "3B 16 96 BA 00 0E 01 06 03", $"Vinaphone Vietnam SIM" },
            new List<string> () { "3B 16 96 BA 00 0E 02 0A 03", $"Vietel (Telecommunication)" },
            new List<string> () { "3B 16 96 D0 00 D4 07 2C 00", $"Vodafone India Postpaid / Local Operator 3G" },
            new List<string> () { "3B 16 96 D0 01 6C A7 0D 00", $"Ukrainian Telecommunications Operator MTS (old simcard, now rebranded to Vodafone UA) (Telecommunication)" },
            new List<string> () { "3B 17 11 80 65 AF 03 42 00 D8", $"TELE2 SPB SIM Russia" },
            new List<string> () { "3B 17 13 9C 12 02 01 01 07 40", $"Schlumberger Cyberflex Access Developer 32k" },
            new List<string> () { "3B 17 94 18 01 01 01 01 41 93", $"T-Mobile SIM card" },
            new List<string> () { "3B 17 94 18 01 01 02 01 41 49", $"white SFR SIM card" },
            new List<string> () { "3B 17 94 18 01 01 02 02 41 49", $"Sim card from SFR (Telecommunication)" },
            new List<string> () { "3B 17 94 18 01 01 09 01 41 53", $"Old Spanish Telefónica Movistar GSM SIM card" },
            new List<string> () { "3B 17 94 18 02 01 25 01 41 93", $"AT&T Wireless GSM SIM Card" },
            new List<string> () { "3B 17 94 20 01 01 0A 02 41 43", $"KPN SIM card" },
            new List<string> () { "3B 17 94 20 05 01 10 01 41 FF", $"CLARO SIM card (ex CTI Movil)" },
            new List<string> () { "3B 17 94 21 03 01 0A 02 41 FF", $"Eurotel Praha, spol. s r. o. - O2 SIM card (Telecommunication)" },
            new List<string> () { "3B 17 94 21 04 01 07 04 03 0B", $"vodafone romania (Telecommunication)" },
            new List<string> () { "3B 17 94 7C 01 01 0D 01 41 5B", $"Plus (PL) SIM card (2001) (Telecommunication)" },
            new List<string> () { "3B 17 94 80 65 D0 01 6C F2 BE", $"CMCC sim cards with TD-SCDMA support" },
            new List<string> () { "3B 17 94 80 65 D0 01 8B F2 08", $"China SIM card" },
            new List<string> () { "3B 17 94 80 65 D0 01 A4 10 09", $"China Telecom UIM Card (128K 2014) (Telecommunication)" },
            new List<string> () { "3B 17 94 83 A1 00 09 01 41 0B", $"Telfor SIM card (Telecommunication)" },
            new List<string> () { "3B 17 94 89 01 02 01 02 41 87", $"Vodafone/Omnitel 16K GSM SIM" },
            new List<string> () { "3B 17 95 80 65 D0 01 7E 0D F0", $"Si.Mobil Slovenia GSM SIM card (Telecommunication)" },
            new List<string> () { "3B 17 95 80 65 D0 01 7E 0E 05", $"Finnish DNA Prepaid SIM-card (Telecommunication)" },
            new List<string> () { "3B 17 95 80 65 D0 02 0C 10 3E", $"Airtel Tanzania (Telecommunication)" },
            new List<string> () { "3B 18 11 E8 43 01 10 09 05 07 77", $"Sim Card GSM for provider 3 telecommunication Indonesia (Telecommunication)" },
            new List<string> () { "3B 18 94 45 15 37 00 01 00 FF 02", $"Micro SIM Life (Telecommunication)" },
            new List<string> () { "3B 18 94 45 15 43 DA 01 00 FF 02", $"Airtel Tanzania Prepaid SIM Card (Telecommunication)" },
            new List<string> () { "3B 18 94 53 0D 06 77 24 07 FF 02", $"GSM SIM Tele2 Estonia, prepaid (Telecommunication)" },
            new List<string> () { "3B 18 94 53 20 07 AD 0A 05 FF 02", $"GSM SIM Beeline Kazakhstan (Telecommunication)" },
            new List<string> () { "3B 19 14 55 90 01 01 01 00 05 08 B0", $"Schlumberger Multiflex 8k" },
            new List<string> () { "3B 19 14 55 90 01 02 01 00 05 04 B0", $"Schlumberger Multiflex 4k" },
            new List<string> () { "3B 19 14 59 01 01 0F 01 00 05 08 B0", $"Schlumberger Multiflex 8k" },
            new List<string> () { "3B 19 94 31 02 05 10 45 98 01 02 4E", $"GSM-SIM EMT (Estonia)" },
            new List<string> () { "3B 19 94 33 03 01 31 45 41 06 02 B6", $"BASE Twin simcard (Telecommunication)" },
            new List<string> () { "3B 19 94 80 67 94 08 01 25 01 01 01", $"Mobiphone (Telecommunication)" },
            new List<string> () { "3B 19 96 80 67 93 27 01 02 02 04 01", $"Orange SIM card (Telecommunication)" },
            new List<string> () { "3B 19 96 80 67 94 09 01 01 04 01 04", $"Morpho EIRENE GSM-R Card (Telecommunication)" },
            new List<string> () { "3B 19 96 80 67 94 16 02 03 01 01 01", $"Movistar Argentina Usim Card (Telecommunication){Environment.NewLine}www.movistar.com.ar" },
            new List<string> () { "3B 19 96 80 67 98 04 01 01 01 01 01", $"PLUS gsm (Telecommunication)" },
            new List<string> () { "3B 1A 96 92 01 54 93 32 01 03 02 25 01", $"BEELINE (Telecommunication)" },
            new List<string> () { "3B 1B 94 80 69 06 02 22 11 00 80 08 00 00", $"eID" },
            new List<string> () { "3B 1B 94 80 69 07 05 21 11 00 80 00 00 00", $"Aircel SIM (Telecommunication)" },
            new List<string> () { "3B 1B 96 05 43 43 32 52 53 05 12 10 90 00", $"ChipCity CC32RS512 factory boot loader{Environment.NewLine}(this is a flash based CPU card with a factory-default bootloader)" },
            new List<string> () { "3B 1C 94 43 48 49 50 44 52 49 56 45 30 30 31", $"SCM Chipdrive MyKey MasterKey 24k" },
            new List<string> () { "3B 1D 11 00 32 04 00 00 00 FF 00 00 00 00 90 00", $"chip ST32F32A (Telecommunication)" },
            new List<string> () { "3B 1D 11 06 02 7F 3F 13 03 17 01 00 11 35 10 00", $"XL (Telecommunication)" },
            new List<string> () { "3B 1D 11 43 4C 5F 53 41 4D 00 14 38 00 00 90 00", $"Planeta Informatica CL-SAM (Transport)" },
            new List<string> () { "3B 1D 96 00 23 07 00 00 00 00 00 00 00 00 90 00", $"emulator card prototype from ST" },
            new List<string> () { "3B 1D 97 43 4C 5F 53 41 4D 00 14 38 00 00 90 00", $"CLSAM (Transport)" },
            new List<string> () { "3B 1E 13 00 69 45 4D 43 45 66 32 28 F8 6B 00 90 00", $"ECHS (Ex-servicemen Contributory Health Scheme) Card (HealthCare)" },
            new List<string> () { "3B 1E 95 80 67 21 54 4D 4D 04 12 0E 71 32 82 9F 00", $"SIM card of old Ukrainian Telecommunications Operator Ace&Base (deriving from Kyivstar) (Telecommunication)" },
            new List<string> () { "3B 1F 11 00 67 42 41 46 49 53 45 53 52 66 FF 81 90 00", $"Finnish student id card" },
            new List<string> () { "3B 1F 11 00 67 80 42 46 49 53 45 10 52 66 FF 81 90 00", $"Nokia branded SC (Setec)" },
            new List<string> () { "3B 1F 11 00 6A 01 38 46 49 53 45 10 8C 02 FF 07 90 00", $"GSM-SIM Saunalahti (from 2004){Environment.NewLine}Finnish cell phone operator \"Sonera\" SIM card (from 2002)" },
            new List<string> () { "3B 1F 11 00 6A 31 36 46 49 53 45 13 8C 02 FF 07 90 00", $"GSM-SIM card - Telenor Mobil" },
            new List<string> () { "3B 1F 11 00 6A 31 38 46 49 53 45 13 8C 02 FF 07 90 00", $"Latvian GSM operator TELE2 (SIM)" },
            new List<string> () { "3B 1F 11 80 6A 16 32 46 49 53 45 15 8C E6 FF 07 90 00", $"GSM SIM card - Tele2 Estonia" },
            new List<string> () { "3B 1F 11 80 6A 32 37 46 49 53 45 12 8C 00 FF 07 90 00", $"Setec Test card, SetCOS 3.7.2, rel 1.3" },
            new List<string> () { "3B 1F 11 80 6A 32 37 46 49 53 45 12 8C 02 FF 07 90 00", $"GSM-SIM DNA Finland (from 2001)" },
            new List<string> () { "3B 1F 11 80 6A 80 34 46 49 53 45 53 94 00 FF 07 .. ..", $"Setec SetCos 3.4" },
            new List<string> () { "3B 1F 11 80 6A 80 34 46 49 53 45 53 94 36 FF 07 90 00", $"SetCOS 3.4.0c{Environment.NewLine}RSA SecurID 3100" },
            new List<string> () { "3B 1F 94 00 6A 01 38 46 49 53 45 10 8C 02 FF 07 90 00", $"GSM-SIM Saunalahti (from 2004)" },
            new List<string> () { "3B 1F 94 80 31 00 73 12 21 13 57 4A 33 05 2B 32 34 00", $"Metfone Cambodia SIM card" },
            new List<string> () { "3B 1F 94 80 31 00 73 12 21 13 57 4A 33 05 30 32 34 00", $"Tron - MVNO Malaysia SIM Card (Giesecke & Devrient SIM)" },
            new List<string> () { "3B 1F 94 80 6A 16 32 46 49 53 45 15 8C E6 FF 07 90 00", $"GSM-SIM Sonera (from 2002)" },
            new List<string> () { "3B 1F 95 80 31 00 73 12 21 13 57 4A 33 0E 19 32 33 00", $"Latvian GSM Operator BITE" },
            new List<string> () { "3B 1F 95 80 31 00 73 12 21 13 57 4A 33 0E 1A 32 36 00", $"Telcel Mexico SIM Card (Telecommunication)" },
            new List<string> () { "3B 1F 96 38 05 03 20 06 17 02 04 40 10 00 07 08 90 00", $"THC20F17BD blank smartcard (Pay TV)" },
            new List<string> () { "3B 23 00 00 36 41 81", $"Schlumberger Payflex 4k SAM" },
            new List<string> () { "3B 23 00 35 11 80", $"Schlumberger Payflex 1k User" },
            new List<string> () { "3B 23 00 35 11 81", $"Schlumberger Payflex 1k SAM" },
            new List<string> () { "3B 23 00 35 13 80", $"Schlumberger Cyberflex Access Campus" },
            new List<string> () { "3B 23 00 35 13 FF", $"Schlumberger MicroPayflex" },
            new List<string> () { "3B 23 00 35 41 80", $"PayflexHID (idenfitied by Sun Ray Services)" },
            new List<string> () { "3B 24 00 .. .. .. 45", $"Conax" },
            new List<string> () { "3B 24 00 00 00 00 00", $"MultiChoice satelite TV Card Eutelsat 36B at 35.9°E" },
            new List<string> () { "3B 24 00 00 E2 92 67", $"Health care (HealthCare)" },
            new List<string> () { "3B 24 00 30 42 30 30", $"ComHem Digital-TV smartcard (Sweden){Environment.NewLine}TNK Telewizja Na Kartę (Poland) - Conditional access system : Conax (Norway)" },
            new List<string> () { "3B 24 00 80 72 94 43", $"MPCOS-3DES 64K or EMV Filter (Gemplus)" },
            new List<string> () { "3B 24 00 FF FC FC FC", $"Carta Nazionale dei Servizi - Camerica di Commercio di Torino (eID)" },
            new List<string> () { "3B 24 00 FF FF FF FF", $"ATMEL AT24C64SC (Other)" },
            new List<string> () { "3B 26 00 00 26 40 00 90 00", $"Schlumberger, purse?" },
            new List<string> () { "3B 26 00 11 01 6D 03", $"OLD CajaMadrid Visa Cash, ID card for Universidad Autónoma de Madrid, Madrid (about 1998)" },
            new List<string> () { "3B 26 00 11 04 5C 03 90 00", $"Caixa Abierta (Barcelona, Spain) Cash/Visa Electron" },
            new List<string> () { "3B 26 00 11 06 23 03 90 00", $"Tarjeta de la Seguridad Social (Spanish Social Insurance Card)" },
            new List<string> () { "3B 26 00 21 18 26 03 90 00", $"Smart card used in transport (spain) (Transport)" },
            new List<string> () { "3B 26 00 24 06 01 00 00 80", $"old KPN NetBox card" },
            new List<string> () { "3B 26 00 31 08 6C 03 90 00", $"VISA ELECTRON from Caixa Catalunya bank card (www.caixacatalunya.es) for students in UPC university of Barcelona (Spain) (www.upc.es)" },
            new List<string> () { "3B 26 00 31 09 C2 03 90 00", $"Old version of spanish Social Security card for its employees (eID)" },
            new List<string> () { "3B 26 00 31 0B D2 03 90 00", $"Former Universidad de León (Spain) Identification Card (partnership with Caja España bank - Visa Cash) (Bank)" },
            new List<string> () { "3B 26 00 31 1A 45 03 90 00", $"Tajeta Sanitaria Individual (Spanish Insurance Card){Environment.NewLine}from the \"Junta de Andalucia(Consejeria de Salud)\"" },
            new List<string> () { "3B 26 00 31 1A 51 03 90 00", $"Andalusian Health Service identification card (HealthCare)" },
            new List<string> () { "3B 27 00 11 14 00 03 02 90 00", $"ITTAS CNA Smart Card Reader (PKI)" },
            new List<string> () { "3B 27 00 2A 2A 43 52 59 50 54", $"PAY TV (Pay TV)" },
            new List<string> () { "3B 27 00 80 65 A2 .. 01 01 37", $"Gemplus GemSAFE Smart Card (4K)" },
            new List<string> () { "3B 27 00 80 65 A2 00 01 01 37", $"Gemplus GemSAFE Card CSP v1.0" },
            new List<string> () { "3B 27 00 80 65 A2 02 02 82 37", $"Gemplus GPK2000s" },
            new List<string> () { "3B 27 00 80 65 A2 02 03 82 37", $"Gemplus GPK2000sp" },
            new List<string> () { "3B 27 00 80 65 A2 04 01 01 37", $"Gemplus GPK4000s" },
            new List<string> () { "3B 27 00 80 65 A2 05 01 01 37", $"Gemplus GPK4000sp" },
            new List<string> () { "3B 27 00 80 65 A2 06 01 01 37", $"GPK 4000, RSA 512 bits Sign, Unwrap 40 bits" },
            new List<string> () { "3B 27 00 80 65 A2 0C 01 01 37", $"Gemplus GPK4000" },
            new List<string> () { "3B 27 00 80 65 A2 8C 3B 27 00", $"GPK 4000, RSA 1024 bits Sign, Unwrap 256 bits" },
            new List<string> () { "3B 28 00 34 41 45 41 30 32 30 30", $"Cryptoguard AB (Other)" },
            new List<string> () { "3B 29 00 24 93 01 00 00 00 00 01 A9", $"Telephone chipcard for the Vienna University of Technology" },
            new List<string> () { "3B 29 00 80 72 A4 45 64 .. .. .. ..", $"MPCOS-3DES 8K (Gemplus)" },
            new List<string> () { "3B 29 00 80 72 A4 45 64 00 00 D0 15", $"Moeda Electronica Bradesco (Brasilia)" },
            new List<string> () { "3B 29 00 80 72 A4 45 64 00 FF 00 10", $"MBNA Europe Platinum Plus Mastercard{Environment.NewLine}MasterCard Card - Worldcard - Yapıkredi / Turkey{Environment.NewLine}Portugal BPI Visa Electron{Environment.NewLine}UCFIN (Italy) \"UniCreditCard Free\" or \"Plus\" (VISA or MasterCard) credit card" },
            new List<string> () { "3B 2A 00 80 65 A0 58 04 01 62 72 D6 43", $"Gemplus GemCombiXplore MPCOS Pro" },
            new List<string> () { "3B 2A 00 80 65 A2 01 .. .. .. 72 D6 41", $"Gemplus MPCOS EMV 1 Byte sectors" },
            new List<string> () { "3B 2A 00 80 65 A2 01 .. .. .. 72 D6 43", $"Gemplus MPCOS EMV 4 Byte sectors" },
            new List<string> () { "3B 2A 00 80 65 A2 01 00 00 00 72 D6 41", $"MPCOS_EMV_1B" },
            new List<string> () { "3B 2A 00 80 65 A2 01 00 00 00 72 D6 43", $"MPCOS_EMV_4B" },
            new List<string> () { "3B 2A 00 80 65 A2 01 01 01 3C 72 D6 43", $"Estonian bank \"SEB\" (VISA Electron)" },
            new List<string> () { "3B 2A 00 80 65 A2 01 01 01 3D 72 D6 43", $"GEMPLUS Logico Secure SmartCard for Citrix Metaframe{Environment.NewLine}PTTPost Easy Stamp{Environment.NewLine}Hungarian student card" },
            new List<string> () { "3B 2A 00 80 65 A2 01 02 01 31 72 D6 43", $"MPCOS-EMV 64K Functional Sample{Environment.NewLine}THALES nShield Security World{Environment.NewLine}THALES NCIPHER product line" },
            new List<string> () { "3B 2B 00 00 64 05 3E 02 0F 31 80 0E 90 00", $"Health Insurance Institute of Slovenia personal card (HealthCare)" },
            new List<string> () { "3B 2B 00 00 64 0E 3E 02 F0 31 80 0E 90 00", $"HPC card" },
            new List<string> () { "3B 2F 00 80 69 10 80 00 01 A1 0A 01 01 59 83 0E 90 00", $"Belgium Dexia (Axion) Bank Card{Environment.NewLine}Proton/Bancontact Mister Cash/Maestro" },
            new List<string> () { "3B 2F 00 80 69 AF 03 07 06 68 00 00 0A 0E 83 06", $"GSM SIM MobilCom (Gemplus)" },
            new List<string> () { "3B 2F 00 80 69 AF 03 07 06 68 00 00 0A 0E 83 06 9F 16", $"MobilCom-Karte" },
            new List<string> () { "3B 2F 00 80 69 AF 03 07 06 68 00 01 0A 0E 83 3E 9F 16", $"Virgin Mobile UK SIM, early 2000s (Telecommunication)" },
            new List<string> () { "3B 2F 00 80 69 AF 03 07 06 68 00 05 0A 0E 83 3E 9F 16", $"KPN @ Mobile SIM card" },
            new List<string> () { "3B 32 15 00 06 80", $"Schlumberger Multiflex 8k" },
            new List<string> () { "3B 32 15 00 06 95", $"Schlumberger Multiflex 8k DES" },
            new List<string> () { "3B 34 00 00 30 42 30 30", $"Conax card: T-Home Hungary" },
            new List<string> () { "3B 34 13 00 34 41 46 44", $"Demo card Enigo CAS (Pay TV)" },
            new List<string> () { "3B 34 94 00 30 42 30 30", $"Conax card: ComHem sweden" },
            new List<string> () { "3B 35 11 00 59 4C 59 52 31", $"Student catering card, ADISURC (Other)" },
            new List<string> () { "3B 37 11 00 46 4C 4F 4D 41 90 00", $"SLE 4428" },
            new List<string> () { "3B 37 11 00 4B 49 41 54 07 90 00", $"Rome ATAC Metrebus card (Transport)" },
            new List<string> () { "3B 37 13 00 80 62 11 04 82 90 00", $"Swiss UBS Maestro/CASH Bank Card" },
            new List<string> () { "3B 37 13 00 80 62 21 13 82 90 00", $"Swiss UBS Maestro/CASH Bank Card" },
            new List<string> () { "3B 39 11 00 26 BF 00 F0 00 00 83 90 00", $"MAGIS Club Access card (Other)" },
            new List<string> () { "3B 39 13 00 80 64 16 04 01 86 82 90 00", $"The cantonal bank of Baselland (Bank)" },
            new List<string> () { "3B 39 13 00 80 64 16 04 02 82 82 90 00", $"Swiss cantonal bank (Bank)" },
            new List<string> () { "3B 39 19 00 53 4F 4D 41 44 53 33 30 3[1,3", $"Identity card of the Republic of Kazakhstan (passport)" },
            new List<string> () { "3B 3B .. 00 80 6. A[FE] 03 0[CD] .. .. 83 .. 90 00", $"GemXplore Xpresso V3" },
            new List<string> () { "3B 3B 02 6F 33 3B DB 96 00 80 1F 03 00 31 C0", $"US Government CAC (PKI)" },
            new List<string> () { "3B 3B 11 00 2F AF 21 FA 10 00 02 81 83 90 00", $"alo (Telecommunication)" },
            new List<string> () { "3B 3B 11 00 2F AF 21 FA 10 00 02 83 83 90 00", $"romanian telecommunication operator obsolete sim (Telecommunication)" },
            new List<string> () { "3B 3B 11 00 67 AF 10 30 07 00 C0 33 33 90 00", $"Mobicarte Orange" },
            new List<string> () { "3B 3B 11 00 6A 38 20 00 00 27 A0 33 33 90 00", $"Spanish C*******r Móvil SIM card" },
            new List<string> () { "3B 3B 11 00 80 65 AF 03 0C 01 6F 83 0F 90 00", $"Gemplus GemXplore\\GemXplorepresso V3-B1" },
            new List<string> () { "3B 3B 11 00 80 69 AF 03 0C 01 6F 83 0[01] 90 00", $"GemXplore'Xpresso V3 64K" },
            new List<string> () { "3B 3B 11 00 91 41 10 10 10 5B A0 00 33 90 00", $"Pannon SIM card (Hungary)" },
            new List<string> () { "3B 3B 13 00 80 66 12 03 01 03 00 04 82 90 00", $"UBS Maestro (Bank)" },
            new List<string> () { "3B 3B 13 00 80 66 12 03 01 03 00 08 82 90 00", $"UBS Switzerland Maestro Debit Card (Bank)" },
            new List<string> () { "3B 3B 13 00 80 66 12 04 01 04 00 4[4,9] 82 90 00", $"Neue Aargauer Bank Maestro card (Bank)" },
            new List<string> () { "3B 3B 13 00 80 66 12 04 01 04 00 61 82 90 00", $"Maestro debit card, Banque Cantonal du Valais, Switzerland (Bank)" },
            new List<string> () { "3B 3B 13 00 80 66 12 04 01 04 01 58 82 90 00", $"Schaffhauser Kantonalbank Switzerland (Bank)" },
            new List<string> () { "3B 3B 7F 38 00 00 00 6A 44 4E 49 65 10 02 4C", $"dnie (eID)" },
            new List<string> () { "3B 3B 7F 38 00 00 00 6A 44 4E 49 65 20 02 4C", $"DNI (eID)" },
            new List<string> () { "3B 3B 8E 80 01 80 31 80 66 B1 84 0C 01 6E 01 83 00 90 00 1C 02 14 50", $"all transport travel pass (Transport)" },
            new List<string> () { "3B 3B 94 00 00 64 05 3E 03 0F 31 80 0E 90 00", $"Slovenian national health insurance card" },
            new List<string> () { "3B 3B 94 00 00 64 0E 3E 02 F0 31 80 0E 90 00", $"HPC card 2{Environment.NewLine}ZZZS Health care professional card- Slovenia (Healthcard) (HealthCare)" },
            new List<string> () { "3B 3B 94 00 00 64 0E 3E 03 0F 31 80 0E 90 00", $"HIC card{Environment.NewLine}ZZZS Health care card- Slovenia (HealthCare)" },
            new List<string> () { "3B 3B 94 00 4F 34 10 20 01 0. .0 33 33 90 00", $"Wind (Italy) GSM SIM card" },
            new List<string> () { "3B 3B 94 00 67 37 10 00 00 39 60 33 33 90 00", $"Avea GSM / Turkey" },
            new List<string> () { "3B 3B 94 00 69 3C 10 30 01 3E 40 33 00 90 00", $"UK Vodafone GSM SIM" },
            new List<string> () { "3B 3B 94 00 6A 38 20 00 00 00 A0 33 33 90 00", $"Croatia VIPNet Mobile Operator (Telecommunication)" },
            new List<string> () { "3B 3B 94 00 6A 38 20 00 00 09 E0 33 33 90 00", $"virgin mobile (french) SIM card" },
            new List<string> () { "3B 3B 94 00 6A 38 20 00 00 0A 20 33 33 90 00", $"SIM Card for cellular (Orange) (Telecommunication)" },
            new List<string> () { "3B 3B 94 00 80 65 32 13 04 03 30 83 81 90 00", $"SIM cards by the austrian cell phone provider A1" },
            new List<string> () { "3B 3B 94 00 80 65 AF 03 0D 01 74 83 0F 90 00", $"Gemplus GemXplore Xpresso V3 B1P{Environment.NewLine}Mobistar SIM - Belgium (Gemplus)" },
            new List<string> () { "3B 3B 94 00 91 38 11 50 46 97 40 33 33 90 00", $"Leclerc Mobile (French MVNO) SIM card" },
            new List<string> () { "3B 3B 94 00 92 38 10 10 49 1B 40 AA 6A 90 00", $"T-Mobile (USA) OCS_2.3 (Telecommunication)" },
            new List<string> () { "3B 3B 94 00 92 38 10 20 01 04 80 33 13 90 00", $"TELE2 Sim Card (Telecommunication)" },
            new List<string> () { "3B 3B 94 00 9B 44 20 10 4D 04 20 00 33 90 00", $"SIM card for 063 network of Telekom Srbije, the Serbian state-owned telephone company." },
            new List<string> () { "3B 3B 94 00 9B 44 20 10 4D 05 00 00 33 90 00", $"SIM card for 066 network Telekom Srbije, the Serbian state-owned telephone company." },
            new List<string> () { "3B 3B 94 00 A6 39 90 00 00 00 21 83 83 90 00", $"meteor ireland" },
            new List<string> () { "3B 3B 95 00 91 38 11 20 01 00 80 33 33 90 00", $"GSM SIM of WIND Italian mobile company" },
            new List<string> () { "3B 3B 96 00 07 52 51 00 00 A8 FD 33 33 90 00", $"Movistar Costa Rica SIM card" },
            new List<string> () { "3B 3B 96 00 40 22 51 00 00 42 00 33 33 90 00", $"Wind (Italy) 128K GSM SIM card" },
            new List<string> () { "3B 3B 96 00 40 53 01 00 00 41 C0 33 33 90 00", $"Wind (Italy) 128K SIM card (Telecommunication)" },
            new List<string> () { "3B 3B 96 00 40 54 01 00 00 0A C0 33 33 90 00", $"Wind (Italy) 64K prepaid GSM SIM card" },
            new List<string> () { "3B 3B 96 00 40 88 91 00 00 08 EA 33 33 90 00", $"iraqmanager (eID)" },
            new List<string> () { "3B 3B 96 00 91 41 10 20 57 09 A0 00 33 90 00", $"old vodafone romania sim (Telecommunication)" },
            new List<string> () { "3B 3B 96 00 92 42 10 10 5A 02 E0 00 33 90 00", $"Roaming Test SIM (Telecommunication)" },
            new List<string> () { "3B 3B 96 00 A7 4C 90 00 00 90 AC 33 33 90 00", $"Brazilian TIM GSM SIM" },
            new List<string> () { "3B 3B F7 18 00 00 80 31 FE 45 73 66 74 65 2D", $"Serasa Experian (PKI)" },
            new List<string> () { "3B 3B FF 18 00 FF 81 31 FE 55 00 6B 02 09 03", $"Smart card commercial chamber - Tuscan region - Aruba (eID)" },
            new List<string> () { "3B 3C 11 00 40 AF 13 F3 12 00 06 87 83 80 90 00", $"SIM GSM Orange Fr" },
            new List<string> () { "3B 3C 11 00 42 AF 20 A3 20 07 00 22 83 80 90 00", $"SIM Card for cellular (Orange) (Telecommunication)" },
            new List<string> () { "3B 3C 11 00 42 AF 20 A3 20 07 00 22 83 82 90 00", $"Orange Mobicarte (SIM card old generation)" },
            new List<string> () { "3B 3C 11 00 44 AF 11 F7 20 05 04 FB 83 81 90 00", $"itineris (Old French Mobile Operator SIM card) (Telecommunication)" },
            new List<string> () { "3B 3C 94 00 42 31 11 A2 12 02 09 51 83 80 90 00", $"Omnitel IT 16K GSM SIM card" },
            new List<string> () { "3B 3C 94 00 4B 31 25 A2 10 13 14 47 83 83 90 00", $"GSM SFR" },
            new List<string> () { "3B 3C 94 00 4C 31 25 A7 20 1B 00 15 83 83 90 00", $"GSM-SIM (900MHz) card of the carrier vodafone for their cellular{Environment.NewLine}network (phase 2+ with 3V)" },
            new List<string> () { "3B 3C 94 00 63 31 12 F0 00 00 46 40 83 83 90 00", $"Old russian \"beeline\" sim" },
            new List<string> () { "3B 3D 94 00 01 0F 00 36 00 00 86 60 18 04 00 01 07", $"Vodafone GSM / Turkey" },
            new List<string> () { "3B 3D 94 00 23 18 02 56 00 00 86 60 5B 1B 00 00 0F", $"GSM SIM, TMN (Moche prepaid, Portugal)" },
            new List<string> () { "3B 3D 94 00 24 0E 00 96 00 00 86 60 31 B5 00 06 07", $"GSM SIM Tele2 Estonia; 2008" },
            new List<string> () { "3B 3D 94 00 24 0E 00 96 00 00 86 60 31 E0 80 00 07", $"Operator CMCC SIM card. old 2G SIM. (Telecommunication)" },
            new List<string> () { "3B 3D 94 00 2E 0E 02 56 00 00 86 60 C0 A4 00 00 0F", $"Globe Telecom (Telecommunication)" },
            new List<string> () { "3B 3D 94 00 35 06 01 44 00 03 86 60 8D 58 8A E2 07", $"OAUSim (Telecommunication)" },
            new List<string> () { "3B 3D 94 00 44 4D 54 11 00 06 06 17 62 11 00 30 00", $"China Unicom SIM card" },
            new List<string> () { "3B 3D 94 00 80 67 AF 03 0F 01 7C 06 0E 83 3E 9F 16", $"A1 Telekom Austria (Austrian mobile provider) SIM card (Telecommunication)" },
            new List<string> () { "3B 3D 95 00 80 67 AF 03 0F 01 7C 06 0E 83 3E 9F 16", $"(Sprint) Nextel USA iDEN SIM card" },
            new List<string> () { "3B 3E 94 00 80 31 00 73 FE 21 13 62 00 31 83 81 90 00", $"Vodafone (Italy) 64kB GSM SIM card" },
            new List<string> () { "3B 3E 95 00 53 4F 4D 41 2D 63 30 30 37 2D 44 53 31 61", $"Kazakhstan Identity Card (eID)" },
            new List<string> () { "3B 3E 95 00 53 4F 4D 41 2D 63 30 30 37 2D 44 53 31 62", $"Kazakhstan Identity Card (eID)" },
            new List<string> () { "3B 3E 95 00 80 31 00 73 FE 21 13 62 00 34 83 81 90 00", $"STMicroelectronics GSM File system sample CARD for ST microcontrollers" },
            new List<string> () { "3B 3F 11 00 6F AF 65 03 12 01 80 73 32 21 1B 83 0F 90 00", $"GSM SIM card Orange J2RE postpaid" },
            new List<string> () { "3B 3F 11 00 79 AF 65 03 12 01 80 73 32 21 1B 83 0F 90 00", $"GSM SIM card from Orange (labeled J2RE)" },
            new List<string> () { "3B 3F 11 00 80 12 00 91 31 C0 64 0E 01 13 12 72 F7 41 05", $"SCOSTA Smart Card Operating System for Transport Application (transport)" },
            new List<string> () { "3B 3F 11 00 80 12 00 91 31 C0 64 0E 01 28 AA 72 F7 41 05", $"SCOSTA Smart Card Operating System for Transport Application (transport)" },
            new List<string> () { "3B 3F 11 00 80 12 00 91 31 C0 64 0E 01 46 AC 72 F7 41 05", $"scosta (Other)" },
            new List<string> () { "3B 3F 11 00 80 69 AF 03 1B 02 AB 00 00 06 0E 83 3E 9F 16", $"PEOPLES (China Mobile HK) sim (Telecommunication)" },
            new List<string> () { "3B 3F 11 00 80 69 AF 03 37 00 12 00 00 00 0E 83 18 9F 16", $"Reliance SIM (Prepaid), Telecommunication" },
            new List<string> () { "3B 3F 11 00 80 69 AF 03 3D 00 C6 00 00 00 0E 83 1E 9F 16", $"Cosmote Romania prepaid sim (Telecommunication)" },
            new List<string> () { "3B 3F 94 00 80 65 AF 03 12 01 6F 73 32 21 1B 83 0F 90 00", $"GSM SIM Card (GEMPLUS), issued by Orange Switzerland (Prepaid){Environment.NewLine}Italian Vodafone 64k SIM{Environment.NewLine}GSM SIM T-Mobile NL" },
            new List<string> () { "3B 3F 94 00 80 65 AF 03 12 01 79 73 32 21 00 83 0F 90 00", $"O2 (UK) SIM" },
            new List<string> () { "3B 3F 94 00 80 65 AF 03 12 01 79 73 32 21 1B 83 0F 90 00", $"UK O2 GSM SIM (2G Online Prepay Maldives){Environment.NewLine}Tesco Mobile (UK) SIM" },
            new List<string> () { "3B 3F 94 00 80 69 AF 03 07 06 67 00 00 0A 0E 83 3E 9F 16", $"SFR SIM card (red Gemplus Répertoire)" },
            new List<string> () { "3B 3F 94 00 80 69 AF 03 07 06 67 09 97 0A 0E 83 3E 9F 16", $"BASE SIM - Belgium (Gemplus)" },
            new List<string> () { "3B 3F 94 00 80 69 AF 03 07 06 68 00 75 0A 0E 83 3E 9F 16", $"O2 Mobile Ireland SIM, late 2000s (Telecommunication)" },
            new List<string> () { "3B 3F 94 00 80 69 AF 03 07 06 68 00 7F 0A 0E 83 3E 9F 16", $"Debitel Vodafone, de (Telecommunication)" },
            new List<string> () { "3B 3F 94 00 80 69 AF 03 07 06 68 00 85 0A 0E 83 3E 9F 16", $"O2 (UK) SIM" },
            new List<string> () { "3B 3F 94 00 80 69 AF 03 0F 02 80 FF FF 06 0E 83 3E 9F 16", $"GSM-SIM Telefonica Movistar, prepaid (Spain)" },
            new List<string> () { "3B 3F 94 00 80 69 AF 03 0F 07 A4 00 00 06 0E 83 3E 9F 16", $"SIM Card PRO from the austrian telecom \"A1\"" },
            new List<string> () { "3B 3F 95 00 80 65 AF 03 12 01 6F 73 32 21 1B 83 00 90 00", $"Gemplus GemXpresso PRO 64 PK SIM" },
            new List<string> () { "3B 3F 95 00 80 65 AF 03 12 01 6F 73 32 21 1B 83 0F 90 00", $"Vodafone Italia SIM 64K" },
            new List<string> () { "3B 3F 95 00 80 65 AF 03 12 01 79 73 32 21 00 83 0F 90 00", $"GSM SIM Orange NL" },
            new List<string> () { "3B 3F 95 00 80 65 AF 03 14 01 8A 73 32 21 1B 83 0F 90 00", $"SIM Vodafone 64k" },
            new List<string> () { "3B 3F 95 00 80 69 AF 03 0F 02 80 FF FF 06 0E 83 3E 9F 16", $"AT&T Wireless GSM SIM Card{Environment.NewLine}UK Virgin Mobile GSM SIM" },
            new List<string> () { "3B 3F 95 00 80 69 AF 03 0F 06 A3 FF FF 06 0E 83 3E 9F 16", $"\"SIMYO\" SIM card (KPN)" },
            new List<string> () { "3B 3F 95 00 80 69 AF 03 1B 03 B8 FF FF 06 0E 83 3E 9F 16", $"USIM of Elisa Oyj, Finland (Telecommunication)" },
            new List<string> () { "3B 3F 96 00 80 12 00 91 31 C0 64 0E 47 44 FA 72 F7 41 05 2F", $"MEmbership card (Loyalty)" },
            new List<string> () { "3B 3F 96 00 80 5A 23 80 E1 08 31 08 AE 01 36 DD 82 90 00", $"Spirtech SAM-S5 v2" },
            new List<string> () { "3B 3F 96 00 80 5A 23 80 F1 08 31 02 AE 01 3A F2 82 90 00", $"Spirtech SAM-S1 F1 with Desfire support" },
            new List<string> () { "3B 3F 96 00 80 69 AF 03 3D 00 C6 00 00 00 0E 83 1E 9F 16", $"GSM SIM card of the Austrian provider A1" },
            new List<string> () { "3B 4F 00 41 54 38 38 53 43 31 30 32 20 20 20 20 FF FF", $"siral smartcard (JavaCard)" },
            new List<string> () { "3B 4F 00 49 32 43 5F 43 61 72 64 3D 4E 6F 5F 51 54 52", $"AT24C (Bank)" },
            new List<string> () { "3B 4F 00 53 6C 65 34 34 32 2D 34 34 3D A2 13 10 91", $"Debit card (Bank)" },
            new List<string> () { "3B 4F 00 53 6C 65 34 34 33 32 2D 34 32 3D A2 13 10 91", $"VISA (Bank)" },
            new List<string> () { "3B 57 18 02 93 02 01 01 01 90 00", $"Easyflex FastOS 2.0 / Schlumberger" },
            new List<string> () { "3B 5B 96 00 00 31 C0 64 BA FC 10 00 0F 90 00", $"SERGAS - Galician Healthcare Service (Spain) (HealthCare)" },
            new List<string> () { "3B 5B 96 00 00 31 C0 64 C6 FC 10 00 01 90 00", $"Banking card (Oberthur C.S. 06 18710-04-10)" },
            new List<string> () { "3B 5B 96 00 00 31 C0 64 C7 FC 10 00 01 90 00", $"EBanking card (Oberthur C.S. 03 1146821)" },
            new List<string> () { "3B 5E 11 FF 45 73 74 45 49 44 20 76 65 72 20 31 2E 30", $"Estonian Identity Card (EstEID v1.0 2006 warm)" },
            new List<string> () { "3B 5F 11 00 80 73 00 01 00 59 43 4C 5A 1B 03 11 40 90 00", $"Player Plus Cash Card issue of French Partouche Casino (Other)" },
            new List<string> () { "3B 5F 95 00 80 73 00 01 00 59 43 4C 5A 1B 00 11 40 90 00", $"SCM Chipdrive MyKey SC" },
            new List<string> () { "3B 5F 95 00 80 73 00 01 00 59 43 4C 5A 1C 00 11 40 90 00", $"\"CardLogic\" CLXSU256KF5" },
            new List<string> () { "3B 5F 95 00 80 73 00 01 00 59 43 4C 5A C5 06 11 7C 90 00", $"Smart Card C5 68K CardLogix Corp (Other)" },
            new List<string> () { "3B 5F 95 00 80 73 00 01 00 59 43 4C 5A C5 06 12 C0 90 00", $"Republic of Liberia Civil Service Identification Card (eID)" },
            new List<string> () { "3B 5F 96 00 80 5A 2C 11 00 10 10 00 FF FF FF FF 82 90 00", $"Calypso (Transport)" },
            new List<string> () { "3B 60 00 00", $"Meano (Bank)" },
            new List<string> () { "3B 61 00 00 80", $"blank A40CR card (JavaCard)" },
            new List<string> () { "3B 63 00 00 36 41 80", $"Schlumberger Payflex 4k User" },
            new List<string> () { "3B 64 .. FF 80 62 .. A2", $"JCOP20" },
            new List<string> () { "3B 64 00 00 80 62 0. 51", $"Setec SetCOS 5.1.0 EMV" },
            new List<string> () { "3B 64 00 FF 80 62 02 A2", $"VISA credit card (Nordea bank)" },
            new List<string> () { "3B 65 00 00 20 63 CB 30 20", $"CB / VISA La Banque Postale (IDEMIA) (Bank)" },
            new List<string> () { "3B 65 00 00 20 63 CB 47 00", $"Orga SmartyPlus DATA STORE issued by MORPHO CARDS PERU" },
            new List<string> () { "3B 65 00 00 20 63 CB 63 00", $"Bank card from Societe Générale (Oberthur)" },
            new List<string> () { "3B 65 00 00 20 63 CB 64 00", $"Bank card Caisse d'Epargne" },
            new List<string> () { "3B 65 00 00 20 63 CB 64 80", $"MasterCard from La Banque Postale" },
            new List<string> () { "3B 65 00 00 20 63 CB 66 00", $"Boursorama banque VISA (bank)" },
            new List<string> () { "3B 65 00 00 20 63 CB 66 80", $"Crédit Agricole (french bank) MasterCard" },
            new List<string> () { "3B 65 00 00 20 63 CB 68 00", $"VISA credit card (Skandiabanken){Environment.NewLine}VISA credit card (Banque Populaire){Environment.NewLine}Banque Postale card (bank){Environment.NewLine}Société Générale (visa / jazz){Environment.NewLine}HSBC Business VISA" },
            new List<string> () { "3B 65 00 00 20 63 CB 68 00 26", $"VISA Société Générale - Oberthur CS" },
            new List<string> () { "3B 65 00 00 20 63 CB 68 80", $"Capital One MasterCard Platinum" },
            new List<string> () { "3B 65 00 00 20 63 CB 6A 00", $"CB Visa La Banque Postale (Gemalto){Environment.NewLine}CB Visa BNP Paribas (France){Environment.NewLine}CB Visa du Crédit Coopératif{Environment.NewLine}CB Visa from Banque Calédonienne d'Investissement (BCI)" },
            new List<string> () { "3B 65 00 00 20 63 CB 6A 80", $"Mastercard EMV Debit Card{Environment.NewLine}Crédit Agricole (french bank) Gold Mastercard" },
            new List<string> () { "3B 65 00 00 20 63 CB 6B 00", $"EMV VISA (France)" },
            new List<string> () { "3B 65 00 00 20 63 CB 6B 80", $"Crédit Agricole (french bank) Mastercard" },
            new List<string> () { "3B 65 00 00 20 63 CB 6C 80", $"Crédit Agricole Bank Card (Bank)" },
            new List<string> () { "3B 65 00 00 20 63 CB A0 00", $"CB Visa Banque Populaire (France)" },
            new List<string> () { "3B 65 00 00 20 63 CB A0 80", $"C*******r, MasterCard credit card, Pass Banque, Oberthur" },
            new List<string> () { "3B 65 00 00 20 63 CB A1 00", $"AIB Visa Debit Card, manufactured by Oberthur" },
            new List<string> () { "3B 65 00 00 20 63 CB A1 80", $"bpaid: bpost prepaid Mastercard" },
            new List<string> () { "3B 65 00 00 20 63 CB A3 00", $"BNP VISA CARD" },
            new List<string> () { "3B 65 00 00 20 63 CB A3 20", $"MasterCard Crédit Agricole Anjou-Maine (type Sociétaire)" },
            new List<string> () { "3B 65 00 00 20 63 CB A3 A0", $"VISA card from Banque Populaire" },
            new List<string> () { "3B 65 00 00 20 63 CB A5 20", $"Mastercard international credit card, with Moneo extension" },
            new List<string> () { "3B 65 00 00 20 63 CB A5 A0", $"French banking card \"Banque Populaire\"{Environment.NewLine}Visa Card distributed by BNP PARIBAS (French Bank)" },
            new List<string> () { "3B 65 00 00 20 63 CB A6 20", $"Mastercard Credit Agricole (French Bank)" },
            new List<string> () { "3B 65 00 00 20 63 CB A6 A0", $"Visa Premier Boursorama (French bank)" },
            new List<string> () { "3B 65 00 00 20 63 CB A7 20", $"ING Direct (French Bank) Gold MasterCard" },
            new List<string> () { "3B 65 00 00 20 63 CB A8 00", $"Novo Banco Debit Card (Bank)" },
            new List<string> () { "3B 65 00 00 20 63 CB A8 20", $"Belgazprombank (Belarus) MasterCard (Bank)" },
            new List<string> () { "3B 65 00 00 20 63 CB A8 A0", $"HSBC VISA Card" },
            new List<string> () { "3B 65 00 00 20 63 CB A9 A0", $"VISA PREMIER CREDIT CARD (Bank)" },
            new List<string> () { "3B 65 00 00 20 63 CB AA 20", $"Cumulus Mastercard (Cembra Money Bank AG, Switzerland) (Bank)" },
            new List<string> () { "3B 65 00 00 20 63 CB AB 20", $"bank card (Bank)" },
            new List<string> () { "3B 65 00 00 20 63 CB AB 80", $"Portugal Caixa Geral de Depósitos Mastercard \"Caixa Classic\"" },
            new List<string> () { "3B 65 00 00 20 63 CB AB A0", $"Visa card (a blue one) edited by Banque Calédonienne d'Investissement (BCI){Environment.NewLine}Visa Card distributed by La Banque Postale" },
            new List<string> () { "3B 65 00 00 20 63 CB AD 00", $"MasterCard Debit (Bank)" },
            new List<string> () { "3B 65 00 00 20 63 CB AD 20", $"bpost bpaid (Bank){Environment.NewLine}KBC Ireland Mastercard Debit (Bank){Environment.NewLine}ING Direct MasterCard (Bank){Environment.NewLine}bancopopular-e (Spain) (Mastercard) credit card (Bank)" },
            new List<string> () { "3B 65 00 00 20 63 CB AD 80", $"Santander Debit Card (Bank)" },
            new List<string> () { "3B 65 00 00 20 63 CB AD A0", $"VISA Card, issued by Czech bank \"Komercni banka\" (Bank)" },
            new List<string> () { "3B 65 00 00 20 63 CB AE 20", $"MasterCard payment card for French Crédit Agricole bank (Bank)" },
            new List<string> () { "3B 65 00 00 20 63 CB AE 80", $"Visa Premier (HelloBank), Gemalto SGP U1074311B 1214 (Bank)" },
            new List<string> () { "3B 65 00 00 20 63 CB AF 20", $"@ccess MasterCard (Bank)" },
            new List<string> () { "3B 65 00 00 20 63 CB B0 20", $"Crédit Mutuel Arkea paycard (Bank)" },
            new List<string> () { "3B 65 00 00 20 63 CB B1 20", $"Bank card \"Credit Agricole\" (Bank)" },
            new List<string> () { "3B 65 00 00 20 63 CB B2 80", $"Visa card distributed by \"Societe Generale\" (French Bank) (Bank){Environment.NewLine}Visa card distributed by \"Boursorama Banque\" (French Bank) (Bank)" },
            new List<string> () { "3B 65 00 00 20 63 CB B6 20", $"MasterCard credit card, issued by Swedbank LT (Bank)" },
            new List<string> () { "3B 65 00 00 20 63 CB B6 80", $"Visa bank card (Bank)" },
            new List<string> () { "3B 65 00 00 20 63 CB B7 00", $"Lloyds Bank (UK) \"Avios Duo\" Mastercard credit card (Bank)" },
            new List<string> () { "3B 65 00 00 20 63 CB B7 20", $"Lloyds Bank Platinum Mastercard Credit (Bank)" },
            new List<string> () { "3B 65 00 00 20 63 CB B7 80", $"VISA Credit Card (Bank)" },
            new List<string> () { "3B 65 00 00 20 63 CB B9 00", $"Mastercard (Bank)" },
            new List<string> () { "3B 65 00 00 20 63 CB BC 00", $"Credit Agricole MasterCard Societaire (France) (Bank)" },
            new List<string> () { "3B 65 00 00 20 63 CB BC 10", $"French \"Ticket Restaurant\" Edenred payment card (Other)" },
            new List<string> () { "3B 65 00 00 20 63 CB BC 80", $"CB / Visa La Banque Postale (Gemalto SP)" },
            new List<string> () { "3B 65 00 00 20 63 CB BD 00", $"Crédit Mutuel Arkea (Bank)" },
            new List<string> () { "3B 65 00 00 20 63 CB BD 80", $"CARD ONEY BANQUE VISA CREDIT (Bank)" },
            new List<string> () { "3B 65 00 00 20 63 CB C0 00", $"Nickel Credit Card (Bank)" },
            new List<string> () { "3B 65 00 00 20 63 CB C0 80", $"VISA debit card (Bank)" },
            new List<string> () { "3B 65 00 00 20 63 CB C1 00", $"CIC (Bank)" },
            new List<string> () { "3B 65 00 00 20 63 CB C3 00", $"CIC Credit Card (Bank)" },
            new List<string> () { "3B 65 00 00 20 63 CB C3 10", $"Pass Restaurant Sodexo Pass France (Bank)" },
            new List<string> () { "3B 65 00 00 20 63 CB C3 80", $"Apetiz restaurant card (French luncheon vouchers) (Bank)" },
            new List<string> () { "3B 65 00 00 20 63 CB C6 00", $"AuMax / Credit Mutuel (Bank)" },
            new List<string> () { "3B 65 00 00 20 63 CB FF 00", $"Crédit Agricole business mastercard (Bank)" },
            new List<string> () { "3B 65 00 00 26 40 00 90 00", $"Alacard Petroltech (Transport)" },
            new List<string> () { "3B 65 00 00 29 05 01 02 01", $"ActivCard (Schlumberger) CyberFlex 64K V1 SM 2.1" },
            new List<string> () { "3B 65 00 00 41 56 49 4F 4E", $"RBC (Royal Bank of Canada) Avion Visa" },
            new List<string> () { "3B 65 00 00 43 04 6C 90 00", $"Carte Bancaire (French banking card) (hot reset)" },
            new List<string> () { "3B 65 00 00 58 01 01 00 80", $"RBS Advanta Platinum Reserve Master Card{Environment.NewLine}UK Lloyds TSB Visa Debit (issued 2003, Gemplus)" },
            new List<string> () { "3B 65 00 00 80 31 E0 6B 04 52 05 02 BF 55 55 55 55 55 55", $"mifare (Transport)" },
            new List<string> () { "3B 65 00 00 80 73 C6 01 00", $"NX by Abanca free Mastercard debit card (Bank)" },
            new List<string> () { "3B 65 00 00 9C 02 02 01 02", $"Dectel CI692" },
            new List<string> () { "3B 65 00 00 9C 02 02 07 02", $"US Department of Defense, TEST Common Access Card (CAC){Environment.NewLine}Schlumberger Cyberflex Access #2{Environment.NewLine}Axalto Cyberflex Access 32K V2{Environment.NewLine}Sun Microsystems employee card" },
            new List<string> () { "3B 65 00 00 9C 1[01] 01 01 03", $"Schlumberger Cyberflex Palmera" },
            new List<string> () { "3B 65 00 00 D0 00 37 00 80", $"Visa Debit card issued by National Bank of Dubai" },
            new List<string> () { "3B 66 00 00 00 9C 11 01 01 03", $"Axalto Cyberflex Access 32K V4 SM 1.3" },
            new List<string> () { "3B 66 00 00 00 9C 11 01 03 01", $"Axalto Cyberflex Access 64K V1 Bio SM 3.1" },
            new List<string> () { "3B 66 00 00 05 12 01 01 01 B1", $"Lyon1 student card (Moneo compatible)" },
            new List<string> () { "3B 66 00 00 11 22 33 44 55 66", $"Sodexo Restaurant Pass Card (Turkey) (Loyalty)" },
            new List<string> () { "3B 66 00 00 31 4B 01 01 00 80", $"VISA credit card (Skandiabanken)" },
            new List<string> () { "3B 66 00 00 32 D0 00 30 02 01", $"Kazakhstan Kazkom Onlinebank (Homebank) PKI client key-card" },
            new List<string> () { "3B 66 00 00 62 C9 01 01 00 00", $"safeview (Pay TV)" },
            new List<string> () { "3B 66 00 00 66 44 01 01 03 B1", $"Carte etudiant Paris 1 moneo BNP Paribas france (Oberthur){Environment.NewLine}Carte Monéo Caise d'épargne Crouse de Lyon" },
            new List<string> () { "3B 66 00 00 90 D1 02 01 10 B1", $"Moneo card (e-purse){Environment.NewLine}Card \"Bordeaux Ma Ville\" (yellow)" },
            new List<string> () { "3B 66 00 00 90 D1 02 01 20 B1", $"Moneo card (e-purse)" },
            new List<string> () { "3B 66 00 00 90 D1 02 01 40 B1", $"Student card from Paris Diderot University (with Moneo)" },
            new List<string> () { "3B 66 00 00 90 D1 02 01 52 B1", $"Pass Campus Alsace, a mix of a student card, a transport card (Badgeo) and a Moneo" },
            new List<string> () { "3B 66 00 00 D0 00 47 44 00 80", $"VISA credit card (RBC Royal Bank)" },
            new List<string> () { "3B 66 00 FF 4A 43 4F 50 30 33", $"IBM JCOP 30" },
            new List<string> () { "3B 66 00 FF 4A 43 4F 50 31 30", $"debit card (Visa Electron) issued by Nordea bank (2008-2015) (Bank)" },
            new List<string> () { "3B 66 00 FF 4A 43 4F 50 32 30", $"UOB Preferred Platinum Visa Card (Bank)" },
            new List<string> () { "3B 66 00 FF 4A 43 4F 50 32 31", $"JCOP 21" },
            new List<string> () { "3B 66 00 FF 4A 43 4F 50 33 30", $"JCOP30 \"OP-DI 16k VISA v2 (JCOP30) ORGA\"" },
            new List<string> () { "3B 67 00 00 00 00 00 00 00 90 00", $"Axa Bank (Belgium) Mastercard Gold / Axa Bank Belgium{Environment.NewLine}MisterCash & Proton card{Environment.NewLine}VISA Card (emitted by Bank Card Company - Belgium){Environment.NewLine}Hellobank/BNP Paribas Fortis Belgium Bancontact Visa debit card (Bank)" },
            new List<string> () { "3B 67 00 00 00 00 00 00 41 86 84", $"ezpu100 (Bank)" },
            new List<string> () { "3B 67 00 00 00 00 20 00 00 90 00", $"BankID card from Sparebank1" },
            new List<string> () { "3B 67 00 00 00 31 80 71 86 90 00", $"Swiss ZKB-Bancomat-Card" },
            new List<string> () { "3B 67 00 00 04 12 45 01 60 01 11", $"Bank ATM card (Bank)" },
            new List<string> () { "3B 67 00 00 04 12 45 01 60 01 12", $"I & M BANK KENYA (Bank)" },
            new List<string> () { "3B 67 00 00 04 13 46 01 60 01 11", $"Equity (Bank)" },
            new List<string> () { "3B 67 00 00 29 20 00 6F 78 90 00", $"ING (previously Postbank Chippas) (chipknip) Netherlands{Environment.NewLine}Rabobank bankcard (dutch){Environment.NewLine}ASN Bank debit card{Environment.NewLine}SNS Bank debit card{Environment.NewLine}ABN-AMRO Maestro" },
            new List<string> () { "3B 67 00 00 29 20 00 6F 78 9A 00", $"ABN AMRO wereldpas" },
            new List<string> () { "3B 67 00 00 29 20 00 6F 78 9F 00", $"SNS Bank debit card (Bank)" },
            new List<string> () { "3B 67 00 00 2A 20 00 41 78 90 00", $"Prepaid Chipknip Netherlands" },
            new List<string> () { "3B 67 00 00 2D 20 16 01 78 90 00", $"CNAMTS and CPAM SSO card (French Health Insurance)" },
            new List<string> () { "3B 67 00 00 2D 20 36 00 78 90 00", $"Swedish cashcard{Environment.NewLine}Bank Card (ING - Belgium){Environment.NewLine}Schiphol Group Privium biometric card (Amsterdam Airport entry system)" },
            new List<string> () { "3B 67 00 00 2E 30 00 32 68 9F 22", $"Stralfors fingerprint card (Other)" },
            new List<string> () { "3B 67 00 00 44 04 01 00 00 FF 07", $"Visa Electron card, \"Bank St. Petersburg\", Russia (Bank)" },
            new List<string> () { "3B 67 00 00 73 20 00 6B 68 90 00", $"MyKad (eID)" },
            new List<string> () { "3B 67 00 00 73 20 00 6C .. 90 00", $"Malaysia Citizen Identity Card (MyKad)" },
            new List<string> () { "3B 67 00 00 73 20 00 6C 68 31 32", $"Malaysian multipurpose identity card (MyKad) that is also an electronic passport, banking card (MEPS - Malaysian Electronic Payment System) and drivers license. (eID)" },
            new List<string> () { "3B 67 00 00 7C 20 40 34 2B 90 00", $"Swedbank Visa card" },
            new List<string> () { "3B 67 00 00 7D 20 40 34 3B 90 00", $"Nordea Visa Sweden" },
            new List<string> () { "3B 67 00 00 80 20 3A 30 78 90 00", $"CIMB Bank Malaysia, ATM, MEPS/Maestro/Cirrus (Bank)" },
            new List<string> () { "3B 67 00 00 80 62 21 13 82 90 00", $"UBS MAESTRO CARD (Bank)" },
            new List<string> () { "3B 67 00 00 85 20 36 30 78 90 00", $"Belgium Fortis Bank{Environment.NewLine}Belgium Keytrade Bank{Environment.NewLine}Belgium Post Bank" },
            new List<string> () { "3B 67 00 00 85 22 16 31 78 90 00", $"Swiss UBS Ebanking Chipcard" },
            new List<string> () { "3B 67 00 00 85 22 16 31 78 9F 00", $"UBS Token Card (bank)" },
            new List<string> () { "3B 67 00 00 86 60 22 22 27 80 01", $"ICBC Debit Card (Bank)" },
            new List<string> () { "3B 67 00 00 86 88 47 48 F5 FF 08", $"Industrial and Commercial Bank of China Savings Card (Bank)" },
            new List<string> () { "3B 67 00 00 9C 10 01 01 03 FF 07", $"Schlumberger Cyberflex Palmera Protect" },
            new List<string> () { "3B 67 00 00 A4 20 79 41 78 90 00", $"UBS Switzerland Debitcard (Bank)" },
            new List<string> () { "3B 67 00 00 A5 20 40 10 1F 90 00", $"Swedish eLegitimation (eID) from Nordea Bank" },
            new List<string> () { "3B 67 00 00 A6 40 40 00 09 90 00", $"Visa card issued by Norway bank DNBNor" },
            new List<string> () { "3B 67 00 00 A8 10 42 20 1F 90 00", $"MyKad- Identification Card for Malaysians" },
            new List<string> () { "3B 67 00 00 AB 40 40 26 09 90 00", $"Swedish VISA credit card (Volvofinans)" },
            new List<string> () { "3B 67 00 00 AB 40 40 27 0B 90 00", $"Sparebanken Vest, Norway (spv.no). Visa credit card and national{Environment.NewLine}debit card [BankAxept] + Gemalto Todos authentication" },
            new List<string> () { "3B 67 00 00 B1 40 40 32 0B 90 00", $"Gjensidige Bank Visa debit card (Bank)" },
            new List<string> () { "3B 67 00 00 B1 40 40 33 0B 90 00", $"Sparebank1 VISA card, Norway{Environment.NewLine}www.sparebank1.no" },
            new List<string> () { "3B 67 00 00 B2 40 40 20 0B 90 00", $"Sodexo BASF Antwerpen company card for Belgian \"meal cheques\"" },
            new List<string> () { "3B 67 00 00 B3 40 40 00 3B 90 00", $"Handelsbanken BankID card (Swedish bank authentication issued 2011)" },
            new List<string> () { "3B 67 00 00 B4 40 40 25 0B 90 00", $"Electronic meal check" },
            new List<string> () { "3B 67 00 00 B4 40 40 26 0B 90 00", $"MasterCard Debit MC Student ctls (Bank)" },
            new List<string> () { "3B 67 00 00 B5 40 40 52 0B 90 00", $"Sodexo card (Other)" },
            new List<string> () { "3B 67 00 00 B7 40 40 41 9B 90 00", $"ČSOB Master Card (Bank)" },
            new List<string> () { "3B 67 00 00 B7 40 40 43 9B 90 00", $"MasterCard (Bank)" },
            new List<string> () { "3B 67 00 00 B7 40 40 44 9B 90 00", $"Handelsbanken frikort maestro (Bank)" },
            new List<string> () { "3B 67 00 00 B8 40 40 72 9B 90 00", $"Handelsbanken SE Mastercard (Bank)" },
            new List<string> () { "3B 67 00 00 C1 30 40 01 0B 90 00", $"MC/Maestro card issued by Czech's \"Ceskoslovenska obchodni banka\"" },
            new List<string> () { "3B 67 00 00 C4 30 40 01 0B 90 00", $"MasterCard issued by Czech's \"Ceskoslovenska obchodni banka\"{Environment.NewLine}Swedish Maestro bank card (Handelsbanken)" },
            new List<string> () { "3B 67 00 00 C5 30 40 01 0B 90 00", $"Banking card (Oberthur C.S. 03 1027069)" },
            new List<string> () { "3B 67 00 FF C5 00 00 FF FF FF FF 5D", $"Alice Tv italia (Pay TV)" },
            new List<string> () { "3B 67 25 00 29 20 00 6F 78 90 00", $"Albert Heijn klantenkaart (loyalty card){Environment.NewLine}Rabopas (Rabobank)" },
            new List<string> () { "3B 67 25 00 2A 20 00 4[05] 68 90 00", $"Swedish cashcard (proton)" },
            new List<string> () { "3B 67 25 00 62 24 33 03 ..", $"Bull TB1000 (SAM for ATM in Luxemburg)" },
            new List<string> () { "3B 68 00 00 00 00 00 00 90 02 81 84", $"Intesa Sanpaolo Bancomat & Maestro Card (Bank)" },
            new List<string> () { "3B 68 00 00 00 02 62 C9 01 45 90 00", $"Politecnico di Milano's PoliCard (issued by Banca Popolare di Sondrio, Mastercard prepaid card) (Bank)" },
            new List<string> () { "3B 68 00 00 00 53 43 06 60 01 0F 90", $"Capital one master card (Bank)" },
            new List<string> () { "3B 68 00 00 00 73 C8 40 00 00 90 00", $"Barclaycard Visa Wave & Pay - Chip I/F{Environment.NewLine}VISA Card (Skandinaviska Enskilda Banken) with Swedish BankID{Environment.NewLine}PayPal UK MasterCard Chip I/F{Environment.NewLine}Prepaid Platinum MasterCard for QANTAS Cash, Australia{Environment.NewLine}Monzo Bank (UK) Debit Mastercard{Environment.NewLine}bunq (NL) Debit Mastercard{Environment.NewLine}Wescom Credit Union Visa Credit Card (Bank)" },
            new List<string> () { "3B 68 00 00 00 73 C8 40 10 00 90 00", $"Icelandic Banking scheme Issued by the Ministry of Treasure in Iceland" },
            new List<string> () { "3B 68 00 00 00 73 C8 40 11 00 90 00", $"Woolworths Everyday Money prepaid Mastercard{Environment.NewLine}Nordea Bank Norway Visa + national debet card [BankAxept]{Environment.NewLine}VISA Classic - Nordlandsbanken (Norway){Environment.NewLine}Citi Double Cash MasterCard{Environment.NewLine}Wescom Credit Union Visa Debit Card (Bank)" },
            new List<string> () { "3B 68 00 00 00 73 C8 40 12 00 90 00", $"Brazilian \"e-CPF\" card" },
            new List<string> () { "3B 68 00 00 00 73 C8 40 13 00 90 00", $"MASTERCARD issued by MLP (Marschollek, Lautenschläger and Partner){Environment.NewLine}G&D 12696-GDM-10/11 DEBIT CARD issued by BANCO DE CREDITO DEL PERU{Environment.NewLine}Visa from Caisse populaire Desjardins (Canada) (Bank){Environment.NewLine}MasterCard issued by President's Choice Bank (Canada){Environment.NewLine}MasterCard issued by CIBC (Canada){Environment.NewLine}MasterCard issued by The Bank of Nova Scotia (Canada){Environment.NewLine}MasterCard issued by JPMorgan Chase Bank, N.A.{Environment.NewLine}CaixaBank Visa Electron (Bank){Environment.NewLine}American Express Canada Credit Card (Bank)" },
            new List<string> () { "3B 68 00 00 00 73 C8 40 13 00 90 7D", $"NextCard - Mastercard Debit card - Intesa Sanpaolo Bank (Italy) (Bank)" },
            new List<string> () { "3B 68 00 00 00 DE 51 10 01 01 90 00", $"Itaú Bank Mastercard Debit Card (Brazil) (Bank)" },
            new List<string> () { "3B 68 00 00 01 01 30 96 00 00 90 00", $"Edenred - French Restauration e-Ticket card (2013) (Other)" },
            new List<string> () { "3B 68 00 00 01 01 31 00 00 00 90 00", $"VISA ELECTRON Sberbank card (Bank){Environment.NewLine}Submarino MasterCard credit card (Brazil) (Bank)" },
            new List<string> () { "3B 68 00 00 01 02 10 96 00 00 90 00", $"Italian BancoPostaClick Postamat Card (Poste Italiane) -{Environment.NewLine}MasterCard debit card{Environment.NewLine}mbna PLATINUM MasterCard{Environment.NewLine}Flash (Banca Fideuram) Italy prepaid Mastercard" },
            new List<string> () { "3B 68 00 00 01 05 20 00 00 00 90 00", $"Air Bank a.s. MasterCard debit card with PayPass (Bank)" },
            new List<string> () { "3B 68 00 00 01 05 21 96 00 00 90 00", $"PayPal Access (Bank)" },
            new List<string> () { "3B 68 00 00 01 05 30 96 00 00 90 00", $"MasterCard issued by mbna (Bank)" },
            new List<string> () { "3B 68 00 00 4D 43 43 43 4C 32 2E 31", $"Mastercard debit card from FIO bank, CZ (Bank)" },
            new List<string> () { "3B 68 00 00 53 43 06 60 01 0F 90 00", $"Credit Card Credicard (Bank)" },
            new List<string> () { "3B 68 00 00 53 43 06 60 01 0F 90 90", $"Discount (Bank)" },
            new List<string> () { "3B 68 00 00 53 43 2D 30 31 32 4A 53", $"Blue (Bank)" },
            new List<string> () { "3B 68 00 00 54 48 20 4E 49 44 20 36", $"Thai id card (Other)" },
            new List<string> () { "3B 68 00 00 56 53 44 43 4C 43 31 30", $"VISA (Estonian), made by www.trueb.ch{Environment.NewLine}Latvian bank \"Latvijas Krajbanka\" (VISA Electron)" },
            new List<string> () { "3B 68 00 00 80 62 00 3C 83 00 90 00", $"Italian PostePay prepaid VISA-Electron{Environment.NewLine}PagoBancomat (Debtcard) Maestro - Intesa Sanpaolo Bank / Italy" },
            new List<string> () { "3B 68 00 00 80 62 00 45 83 00 90 00", $"MasterCard - Intesa Sanpaolo Bank / Italy{Environment.NewLine}Paypal italia (mastercard)" },
            new List<string> () { "3B 68 00 00 80 66 45 46 01 38 18 03", $"FNMT WG108k" },
            new List<string> () { "3B 68 00 00 80 66 57 59 01 00 02 03", $"Junta de Extremadura (Spain) (PKI)" },
            new List<string> () { "3B 68 00 00 80 66 57 59 01 00 08 03", $"Spanish ULPGC student id card{Environment.NewLine}E-Money capability{Environment.NewLine}Alliance With La Caja de Canarias Bank{Environment.NewLine}Manufactured by GyD IBÉRICA" },
            new List<string> () { "3B 68 00 00 80 66 A2 03 08 01 31 07", $"University ID Card for University of Seville (Other)" },
            new List<string> () { "3B 68 00 00 80 66 A2 06 01 01 64 00", $"Visa card issued by Czech's \"Komercni banka\" (Gemplus brand on chip)" },
            new List<string> () { "3B 68 00 00 80 66 A2 06 02 01 32 0E", $"Gemplus GemClub 1K" },
            new List<string> () { "3B 68 00 00 80 66 B0 07 01 01 07 07", $"Java Gemalto R7 (Bank){Environment.NewLine}Gemalto Santander Optelio TUI R7 with WG10 using Contact interface" },
            new List<string> () { "3B 68 00 00 80 66 B0 07 01 01 77 07", $"Técnico Lisboa Student Card (Bank){Environment.NewLine}Other Optelio Card (Santander){Environment.NewLine}Santander Totta Student Card - Portugal (Bank)" },
            new List<string> () { "3B 68 00 00 81 00 03 50 01 0F 90 00", $"Holvi Payment Master Card (Bank)" },
            new List<string> () { "3B 68 00 00 99 02 00 D1 03 04 22 01", $"N26 business debit card (Bank)" },
            new List<string> () { "3B 68 00 00 9D 03 02 01 01 56 49 53", $"Visa Card - SberBank / Russia" },
            new List<string> () { "3B 68 00 00 9D 08 01 02 01 56 49 53", $"Visa Card - bonus - DenizBank / Turkey" },
            new List<string> () { "3B 68 00 00 9D 08 01 03 01 4F 54 53", $"MasterCard Card - bonus - Garanti Bank / Turkey" },
            new List<string> () { "3B 68 00 00 9D 08 01 03 01 56 49 53", $"MasterCard Card - bonus - Garanti Bank / Turkey{Environment.NewLine}MasterCard Card - bonus plus (paypass) - Garanti Bank / Turkey" },
            new List<string> () { "3B 68 00 00 9D 08 01 05 01 56 49 53", $"MasterCard Card - CartaSi (Italian Credit Card)" },
            new List<string> () { "3B 68 00 00 A1 02 02 01 01 56 49 53", $"UK NatWest Business MasterCard{Environment.NewLine}UK Barclaycard VISA{Environment.NewLine}UK NatWest Platinum MasterCard{Environment.NewLine}Visa Card - DenizBank / Turkey" },
            new List<string> () { "3B 68 00 00 FF 29 23 00 07 68 90 00", $"Politecnico di Milano student card{Environment.NewLine}\"Le Chiavi della Città\" SienaCard MINIpay Card" },
            new List<string> () { "3B 68 00 FF 00 73 C8 40 00 00 90 00", $"Visa credit card for Bank of Taiwan{Environment.NewLine}CommSec Debit MasterCard (Australia){Environment.NewLine}VISA Debit card for Bank of Sydney, Australia" },
            new List<string> () { "3B 68 00 FF 38 2B 41 52 44 6E 73 73", $"Dummy smart card from vsmartcard project. (Other)" },
            new List<string> () { "3B 68 00 FF 4A 43 4F 50 76 32 34 31", $"Alfa-bank VISA Classic card (Bank)" },
            new List<string> () { "3B 68 00 FF 56 43 41 52 44 6E 73 73", $"NSSVirtual Smart Card for qemu" },
            new List<string> () { "3B 69 00 00 24 0C 16 0A 00 00 00 00 00", $"LUNCH COUPON (Other)" },
            new List<string> () { "3B 69 00 00 24 94 01 00 00 00 00 01 A9", $"Kazakhstan Helios gas station debit card" },
            new List<string> () { "3B 69 00 00 24 94 01 02 01 00 01 01 A9", $"Chipcard from SUN to be used in SunRay's{Environment.NewLine}370-4328-01 (31091)" },
            new List<string> () { "3B 69 00 00 24 94 01 03 01 00 01 00 A9", $"Schlumberger MicroPayflex S card" },
            new List<string> () { "3B 69 00 00 49 44 35 30 56 31 2E .. ..", $"eID Card to user authenticate and save paswords in the Card. Product ID50 Password manager from IDENTOS GmbH (eID)" },
            new List<string> () { "3B 69 00 00 49 44 36 30 56 31 2E .. ..", $"token appidkey ID60-USB (Other)" },
            new List<string> () { "3B 69 00 00 4A 43 4F 50 33 31 56 32 32", $"Visa Europe Sample Card / Axalto" },
            new List<string> () { "3B 69 00 00 50 01 01 04 01 00 01 01 A9", $"Sample card given to all attendees of the CTST 2004 SmartCard Conference" },
            new List<string> () { "3B 69 00 00 55 4B 54 20 56 31 2E 30 00", $"PostFinance Card Direct (Swiss Post)" },
            new List<string> () { "3B 69 00 00 56 49 53 5F 49 4E 46 20 06", $"VISA credit card (Ceska Sporitelna){Environment.NewLine}Maestro credit card (Ceska Sporitelna)" },
            new List<string> () { "3B 69 00 00 57 92 02 00 00 00 00 00 A9", $"SURGUTNEFTEGAZ Fuel station network loyalty card, Russia (Loyalty)" },
            new List<string> () { "3B 69 00 00 57 92 02 01 01 00 01 00 A9", $"Sun Microsystems Sun Ray 1G thin client access card (Other)" },
            new List<string> () { "3B 69 00 00 5A 45 4E 20 54 4F 4B 45 4E", $"Ezio Flex BLE OATH Token (other)" },
            new List<string> () { "3B 69 00 00 80 31 E0 55 42 45 52 47 53", $"Banrisul Bank" },
            new List<string> () { "3B 69 00 00 80 65 A2 .. .. .. .. 72 D6", $"Other Optelio Card (Santander MPCOS)" },
            new List<string> () { "3B 69 00 00 80 72 A4 45 64 00 FF 00 10", $"Visa Credit Card Denizbank Afilli Bonus -Turkey (Bank)" },
            new List<string> () { "3B 69 00 00 AC 04 00 00 04 B1 8C 61 21", $"Student card for Université numérique Paris Île-de-France" },
            new List<string> () { "3B 69 00 00 C5 02 02 01 04 6B 01 01 A9", $"Payflex 1K from Schlumberger" },
            new List<string> () { "3B 69 00 00 EB 03 01 03 01 70 01 08 A9", $"Gasprom card (JavaCard)" },
            new List<string> () { "3B 69 00 00 EB 03 01 06 01 70 01 02 A9", $"Azeriqaz-SOCAR(Azerbaijan) (Other)" },
            new List<string> () { "3B 69 00 00 F7 04 01 06 01 80 01 02 A9", $"Azeriqaz Smart Payment (eID)" },
            new List<string> () { "3B 69 00 00 F7 04 01 08 01 80 01 02 A9", $"Multinet (Other)" },
            new List<string> () { "3B 69 00 02 41 43 4F 53 4A 76 31 30 31", $"ACOSJ 40K Dual Interface (JavaCard)" },
            new List<string> () { "3B 69 00 02 41 43 4F 53 4A 76 32 30 33", $"ACS ACOSJ Java Card (JavaCard)" },
            new List<string> () { "3B 69 00 FF 00 64 4A 10 04 32 05 90 00", $"NXP JCOP 20 V2.1 16K" },
            new List<string> () { "3B 69 00 FF 31 31 31 30 54 43 4F 53 50", $"Seven-Eleven Value Card / Smart Purse - Thailand (Other)" },
            new List<string> () { "3B 69 00 FF 32 33 32 43 53 43 53 33 36", $"CSCS smart card. Must be read using CSCS go smart software." },
            new List<string> () { "3B 69 00 FF 4A 43 4F 50 32 34 32 52 32", $"MCD 20 (Other)" },
            new List<string> () { "3B 69 00 FF 4A 43 4F 50 33 31 56 32 32", $"JCOP 31 v22 72K - S/C I/F" },
            new List<string> () { "3B 69 00 FF 53 6D 40 72 74 43 61 66 65", $"G&D (Giesecke&Devrient) Sm@rtCafé" },
            new List<string> () { "3B 6A 00 00 0. 44 31 31 43 52 02 00 25 C3", $"Feitian Java Card D11CR (JavaCard)" },
            new List<string> () { "3B 6A 00 00 00 31 C1 73 C8 40 00 00 90 00", $"Java NXP J2L040 JCOP3 (JavaCard)" },
            new List<string> () { "3B 6A 00 00 30 30 30 30 33 30 44 33 35 44", $"Building access card (eID)" },
            new List<string> () { "3B 6A 00 00 30 30 30 30 33 30 44 45 42 41", $"HID Global DuoProx II Low Frequency 125 KHz (HealthCare)" },
            new List<string> () { "3B 6A 00 00 4A 43 4F 50 31 30 56 32 33 31", $"Dongle Smart Card (MxKey) (Other)" },
            new List<string> () { "3B 6A 00 00 80 31 C0 A1 02 03 01 32 81 16", $"Lloyds TSB Visa Credit/Debit Card" },
            new List<string> () { "3B 6A 00 00 80 65 A2 .. .. .. .. 72 D6 ..", $"IDClassic 3XX Cards (with MPCOS Applet)" },
            new List<string> () { "3B 6A 00 00 80 65 A2 01 01 01 3D 72 D6 43", $"GemSafe Xpresso 16k" },
            new List<string> () { "3B 6A 00 00 80 65 A2 01 02 01 31 72 D6 43", $"UNISINOS University Student's card (Other)" },
            new List<string> () { "3B 6A 00 00 80 65 A2 01 03 01 8D 72 D6 43", $"American Express Blue Card" },
            new List<string> () { "3B 6A 00 00 80 65 A2 01 31 01 3D 72 D6 41", $"Emirates ID (eID)" },
            new List<string> () { "3B 6A 00 00 80 65 A2 01 45 01 3D 72 D6 43", $"STATE OF KUWAIT CIVIL ID CARD (eID)" },
            new List<string> () { "3B 6A 00 00 80 66 A1 09 02 01 63 0E 90 00", $"Danish Visa/Dankort{Environment.NewLine}UK MBNA MasterCard{Environment.NewLine}Visa Card - Worldcard - YapıKredi / Turkey{Environment.NewLine}VISA - Lloyds TSB DEBIT{Environment.NewLine}UK Halifax Visa Debit" },
            new List<string> () { "3B 6A 00 00 80 66 A2 0A 01 01 8B 0E 90 00", $"CAP-EMV demo card" },
            new List<string> () { "3B 6A 00 00 81 3F 01 75 11 01 02 81 01 0A", $"Huada CIU9872B (Java Card 2.2.2) (JavaCard)" },
            new List<string> () { "3B 6A 00 00 86 65 00 A7 58 C0 46 00 90 00", $"China Merchants Bank card (Bank)" },
            new List<string> () { "3B 6A 00 00 86 65 00 A7 58 C0 55 00 90 00", $"Credit card (Bank)" },
            new List<string> () { "3B 6A 00 FF 00 31 C1 73 C8 40 00 00 90 00", $"Paypal EMV debit card (Bank){Environment.NewLine}American Express Canada Credit Card (Bank)" },
            new List<string> () { "3B 6A 00 FF 41 42 43 44 32 45 46 47 48 49", $"Austria card - JCOP 31/36K" },
            new List<string> () { "3B 6A 00 FF 4A 43 4F 50 32 31 56 32 33 31", $"JCOP21 v2.3 Standard" },
            new List<string> () { "3B 6A 00 FF 4A 43 4F 50 34 31 56 32 32 31", $"JCOP41 Cards (not supported, but recognized by Classic Client){Environment.NewLine}NHS hospital smartcard login key (HealthCare)" },
            new List<string> () { "3B 6B .. FF 80 62 .. A2 56 46 69 6E 45 49 44", $"JCOP20 v2.x" },
            new List<string> () { "3B 6B 00 00 00 00 31 C0 64 3F 68 01 00 07 90 00", $"EMV (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 80 64 2D A0 02 0C 8C 61 27", $"SmartEMV prototype" },
            new List<string> () { "3B 6B 00 00 00 31 80 64 43 B0 02 00 8C 61 27", $"Bull Odyssey 1.2 (Javacard 2.0)" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 00 27 34 00 07 90 00", $"American Express Gold Air France - KLM (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 00 27 34 00 0F 90 00", $"American Express Chip and Signature Card (Contact) ()" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 08 04 61 05 07 90 00", $"TBC Bank Mastercard (Georgia) (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 08 04 61 12 07 90 00", $"Visa Electron. BSB Bank. Belarus (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 08 04 61 12 0F 90 00", $"Portuguese National Identity Card (eID)" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 08 04 61 20 07 90 00", $"AMEX Bank DI Card (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 08 04 61 76 07 90 00", $"Alliance Bank Debit Card (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 08 04 61 77 0F 90 00", $"\"Strelka\" Russian Federation Travelcard (Transport)" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 08 04 61 84 07 90 00", $"American Express credit card (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 08 04 61 84 0F 90 00", $"Lloyds Bank (UK) \"Avios Duo\" American Express credit card (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 08 04 61 F4 0F 90 00", $"N26 Maestro Card (Bank){Environment.NewLine}N26 MasterCard (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 08 10 31 04 0F 90 00", $"Visa - Wells Fargo Debit Card (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 08 10 41 08 07 90 00", $"Bank of America Travel Rewards Visa Signature Credit Card (Issued 2018) (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 08 10 41 10 0F 90 00", $"Nationwide Building Society regular savings account ATM card (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 08 10 51 10 0F 90 00", $"Skrill MasterCard (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 08 17 71 00 07 90 00", $"MasterCard Debit Card for Macquarie Bank, Australia (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 08 39 81 04 0F 90 00", $"Visa Debit (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 08 39 91 08 0F 90 00", $"MasterCard Bank Card (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 08 44 03 04 0F 90 00", $"VISA debit card (ActivoBank, Portugal) (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 08 44 03 05 0F 90 00", $"Visa (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 08 44 03 12 07 90 00", $"VISA (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 08 44 03 12 0F 90 00", $"Debit Card/MasterCard shipped by electronic Bank N26 (Number26) (Bank){Environment.NewLine}BBVA (Spain) (MasterCard) debit card (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 08 44 03 13 07 90 00", $"MasterCard, Alfa Bank (Russia) (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 08 44 03 68 0F 90 00", $"Credit card emitted by KBC Brussels, Belgium (Bank){Environment.NewLine}Advanzia Credit Card (Master Card gold), Germany (IDK if there is a difference between the german one and the other ones) (Bank){Environment.NewLine}Italian Intesa Sanpaolo Superflash Prepaid Mastercard (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 08 44 03 76 07 90 00", $"Blu American Express Credit Card (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 08 44 03 76 0F 90 00", $"Maestro debit card, issued by Caixa Geral de Depósitos (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 08 48 41 08 0F 90 00", $"Monizze card. Card use to pay only meal. (Other)" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 13 14 02 00 0F 90 00", $"UBA Card PREPAID (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 1F 18 01 00 0F 90 00", $"Portuguese Medical Association eID card (Cédula Profissional, Ordem dos Médicos, Portugal) (eID)" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 1F 27 01 00 07 90 00", $"SOCCARDRT (HealthCare)" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 1F 27 01 15 0F 90 00", $"VISA Debit card for HSBC, Australia" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 1F 27 01 1C 07 90 00", $"Raiffeizen Bank, Russia, MasterCard paypass card (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 1F 27 01 35 0F 90 00", $"V PAY (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 3F 68 01 00 07 90 00", $"JCOP empty card (JavaCard)" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 3F 68 01 02 0F 90 00", $"dinacard (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 3F 68 01 03 07 90 00", $"American Express Blue Cash (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 3F 68 01 03 0F 90 00", $"HSBC Credit Gold Card from VISA (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 3F 68 01 04 0F 90 00", $"VISA credit card (ActivoBank, Portugal) (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 3F 68 01 0B 0F 90 00", $"MasterCard credit card (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 A9 EC 01 00 82 90 00", $"Entropia Universe Gold card" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 BC 02 01 00 82 90 00", $"Flazz BCA Indonesia (Other)" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 BE 1B 01 00 07 90 00", $"MTS Bank MasterCard paypass card (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 BE 1B 01 00 0F 90 00", $"An old version of the Politecnico di Milano student ID. It doubles as a VISA debit card for Banca Popolare di Sondrio. (Other)" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 BE 1B 01 03 0F 90 00", $"dsafas (Telecommunication)" },
            new List<string> () { "3B 6B 00 00 00 31 C0 64 D0 10 01 00 07 90 00", $"Alfa-Bank (Russia) Master Card (Aeroflot bonus) (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C1 64 08 60 32 06 07 90 00", $"HSBC (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C1 64 08 60 32 06 0F 90", $"VISA (National Bank) (eID)" },
            new List<string> () { "3B 6B 00 00 00 31 C1 64 08 60 32 06 0F 90 00", $"Nationwide Building Society VISA Debit card (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C1 64 08 60 32 09 0F 90 00", $"Swedbank Estonia ISIC debit card (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C1 64 08 60 32 10 0F 90 00", $"ICA Bank, Mastercard (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C1 64 08 60 32 1F 07 90 00", $"NMRC Card (Transport)" },
            new List<string> () { "3B 6B 00 00 00 31 C1 64 08 60 32 1F 0F 90 00", $"Fio bank, Mastercard, credit (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C1 64 08 60 32 20 0F 90 00", $"Twisto (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C1 64 08 60 32 21 07 90 00", $"DSK Bank Debit Mastercard (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C1 64 08 77 71 30 0F 90 00", $"Apple Card (from launch) (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C1 64 08 77 71 56 07 90 00", $"American Express UK Euro ICC charge card (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C1 64 08 98 62 01 0F 90 00", $"Sodexo Czech Gastro/Multipass (Other)" },
            new List<string> () { "3B 6B 00 00 00 31 C1 64 09 29 62 25 0F 90 00", $"SANTANDER BASIC CASH CARD (Bank)" },
            new List<string> () { "3B 6B 00 00 00 31 C1 64 09 64 41 36 0F 90 00", $"VISA Business Folio AS /Norway (Sparebanken Vest) [IDEMIA] (Bank)" },
            new List<string> () { "3B 6B 00 00 20 90 00 00 00 00 00 B0 A2 BD 69", $"Fudan FM1280 (JavaCard)" },
            new List<string> () { "3B 6B 00 00 42 6C 75 63 61 72 64 20 34 4B 42", $"Blutronics Blucard 4K (Loyalty)" },
            new List<string> () { "3B 6B 00 00 43 48 49 50 31 34 20 56 31 2E 30", $"Swiss PostFinance Card (Bank)" },
            new List<string> () { "3B 6B 00 00 47 50 00 3A 06 01 41 20 0F 90 00", $"SBI Debit Card (Bank)" },
            new List<string> () { "3B 6B 00 00 47 50 00 63 0A 00 40 00 0F 90 00", $"cash app visa prepaid debit (Bank)" },
            new List<string> () { "3B 6B 00 00 53 43 00 15 02 02 50 01 0F 90 00", $"Visa (Bank)" },
            new List<string> () { "3B 6B 00 00 53 43 00 15 08 02 50 01 0F 90 00", $"ALELO-BENEFICIOS (Other)" },
            new List<string> () { "3B 6B 00 00 80 31 C0 63 48 10 7F 83 E0 90 00", $"ABL card (Bank){Environment.NewLine}asdasd (Bank)" },
            new List<string> () { "3B 6B 00 00 80 5A 44 58 54 4F 4B 45 4E 30 31", $"DXToken - Dexon Cryptography Token (Other)" },
            new List<string> () { "3B 6B 00 00 80 65 A1 09 03 01 97 83 0E 90 00", $"Visa Card - Worldcard - YapıKredi / Turkey" },
            new List<string> () { "3B 6B 00 00 80 65 B0 83 .. .. .. 83 00 90 00", $"IDClassic 3XX Cards (without MPCOS Applet - FIPS)" },
            new List<string> () { "3B 6B 00 00 80 65 B0 83 01 01 74 83 00 90 00", $"GemXpresso Pro R3 with 64K EEPROM" },
            new List<string> () { "3B 6B 00 00 80 65 B0 83 01 03 74 83 00 90 00", $"Gemplus GemXpresso PRO 64K R3 v1" },
            new List<string> () { "3B 6B 00 00 80 65 B0 83 01 04 74 83 00 90 00", $"Gemplus GXP3 64V2N{Environment.NewLine}U.S. Department of Defense Common Access Card (DoD CAC)" },
            new List<string> () { "3B 6B 00 00 81 00 72 26 01 00 10 00 0F 90 00", $"Debit card issued by Falabella Bank of Peru from IDEMIA (Bank)" },
            new List<string> () { "3B 6B 00 00 81 00 72 26 02 00 40 00 0F 90 00", $"Yuna To Go prepaid MasterCard (PaySafeCard) (Bank){Environment.NewLine}Paygoo Reload Mastercard" },
            new List<string> () { "3B 6B 00 00 81 00 72 26 02 00 41 00 0F 90 00", $"Wave Crest Holding (Bank)" },
            new List<string> () { "3B 6B 00 00 81 00 78 43 04 02 41 01 0F 90 00", $"Max Mastercard (Bank)" },
            new List<string> () { "3B 6B 00 FF 33 00 00 09 FA 10 00 80 01 FF FF", $"Atmel 6464C PRO 64K" },
            new List<string> () { "3B 6B 00 FF 56 43 41 52 44 5F 4E 53 53", $"NSSVirtual smart card for qemu" },
            new List<string> () { "3B 6C 00 00 0A 0B 0C 0A 0B 0C 0A 0B 0C 0A 0B 0C", $"Estonian Residence Permit (eID)" },
            new List<string> () { "3B 6C 00 00 0F 31 C0 71 D6 64 13 6A 01 00 5D 84", $"MasterCard debit card: skrill.com card issued by Newcastle Building Society (Bank){Environment.NewLine}Nationwide InvestDirect (UK){Environment.NewLine}MasterCard debit card issued by Santander Brasil (Bank)" },
            new List<string> () { "3B 6C 00 00 0F 31 C0 71 D6 64 3E 67 01 00 5D 84", $"Banca Transilvania VISA CARD (Bank)" },
            new List<string> () { "3B 6C 00 00 0F 31 C0 71 D6 64 3E 67 01 01 5D 84", $"VISA GOLD or Maestro, issued by Swedbank Lithuania (Bank){Environment.NewLine}VISA credit card, issued by HSBC Commercial Card UK (Bank){Environment.NewLine}HSBC Commercial Card (UK) VISA{Environment.NewLine}Capital One UK Platinum MasterCard" },
            new List<string> () { "3B 6C 00 00 10 10 10 30 00 00 00 00 00 00 00 00", $"Datacard Group Aptura Development Card V1.1b" },
            new List<string> () { "3B 6C 00 00 42 6C 75 6C 6F 67 6F 6E 20 34 4B 42", $"eID Blutronics Blulogon 4K" },
            new List<string> () { "3B 6C 00 00 4E 54 49 43 31 90 56 0A 4A 03 00 00", $"Tsinghua Tongfang Company (Pay TV)" },
            new List<string> () { "3B 6C 00 00 4E 54 49 43 33 90 51 02 4A 03 00 00", $"Topas TV (Pay TV)" },
            new List<string> () { "3B 6C 00 00 80 64 11 34 01 48 73 F7 41 C0 81 07", $"Universal Electronic Card (UEC Russia) (eID)" },
            new List<string> () { "3B 6C 00 00 80 64 11 65 01 90 73 00 00 00 81 07", $"Universal Electronic Card (UEC Russia) (eID)" },
            new List<string> () { "3B 6C 00 02 36 61 86 38 4B 8C 13 04 62 03 59 8A", $"Nagravision, Swiss mode" },
            new List<string> () { "3B 6C 00 FF 50 56 4A 43 4F 50 32 31 56 32 33 31", $"Al Etihad (Bank)" },
            new List<string> () { "3B 6C 00 FF 80 73 C8 21 13 66 01 06 11 59 00 01", $"Visa Crypto Business Electron by neyvabank.ru (Bank)" },
            new List<string> () { "3B 6D 00 00", $"PVT (Bank)" },
            new List<string> () { "3B 6D 00 00 00 31 80 64 2D A0 04 0C 71 96 8C 61 29", $"UK Co-operative Bank Visa Debit (produced 2002)" },
            new List<string> () { "3B 6D 00 00 00 31 80 71 96 64 33 D1 01 00 82 90 00", $"DeLaRue GalactIC JavaCard" },
            new List<string> () { "3B 6D 00 00 00 31 C0 71 D6 64 11 22 33 01 83 90 00", $"Egg (bank) VISA{Environment.NewLine}First Direct (bank) Maestro card{Environment.NewLine}First Direct Gold VISA{Environment.NewLine}UK Barclaycard Platinum VISA{Environment.NewLine}UK Barclaycard VISA{Environment.NewLine}UK Halifax Platinum VISA{Environment.NewLine}UK HSBC MasterCard{Environment.NewLine}UCFIN (Italy) \"UniCreditCard Free\" or \"Plus\" (VISA or MasterCard) credit card" },
            new List<string> () { "3B 6D 00 00 00 31 C0 71 D6 64 19 16 01 00 84 90 00", $"Eurocard Corporate MasterCard issued by Eurocard AB Sweden{Environment.NewLine}Capital One (UK) MasterCard{Environment.NewLine}VISA card, issued by Swedbank Latvia{Environment.NewLine}VISA issued by Citibank International plc (manufacturer Oberthur){Environment.NewLine}VISA/Maestro/MasterCard, issued by Swedbank LT/EE (manufacturer: Oberthur){Environment.NewLine}MasterCard issued by Swedbank Estonia (manufacturer Oberthur){Environment.NewLine}Santander Business Visa Debit" },
            new List<string> () { "3B 6D 00 00 00 31 C0 71 D6 64 19 16 01 02 84 90 00", $"VISA (JavaCard)" },
            new List<string> () { "3B 6D 00 00 00 31 C0 71 D6 64 34 C7 01 00 84 90 00", $"DeLaRue ProlifIC" },
            new List<string> () { "3B 6D 00 00 00 31 C0 71 D6 64 34 C7 02 00 84 90 00", $"Cybelys card (Thalys fidelity card)" },
            new List<string> () { "3B 6D 00 00 00 31 C0 71 D6 64 38 D0 02 00 84 90 00", $"EMV Visa Electron (Oberthur)" },
            new List<string> () { "3B 6D 00 00 00 31 C0 71 D6 64 38 D0 03 00 84 90 00", $"HSBC Visa/MasterCard credit card{Environment.NewLine}Barclay Card MasterCard" },
            new List<string> () { "3B 6D 00 00 00 31 C0 71 D6 64 4E D8 01 01 84 90 00", $"UK Capital One Platinum MasterCard" },
            new List<string> () { "3B 6D 00 00 00 31 C0 71 D6 64 58 D7 01 00 84 90 00", $"UK Nationwide Bank Visa Delta{Environment.NewLine}UK First Direct Maestro{Environment.NewLine}UK Halifax Platinum Visa{Environment.NewLine}UK Co-operative Bank Visa Debit (produced 2003-2004){Environment.NewLine}UK HSBC LiveCash Solo Debit card" },
            new List<string> () { "3B 6D 00 00 00 31 C0 71 D6 64 A0 01 04 00 84 90 00", $"Swiss Mastercard M-Budget (Bank)" },
            new List<string> () { "3B 6D 00 00 00 31 C0 71 D6 65 11 22 33 01 83 90 00", $"UK Co-operative Bank Visa Debit (produced 2006)" },
            new List<string> () { "3B 6D 00 00 00 66 4D 45 31 53 05 06 53 03 61 04 F0", $"FutureCard Ind. LLC / Feb-18 | Blank card for programming (JavaCard)" },
            new List<string> () { "3B 6D 00 00 00 73 C8 00 13 64 47 37 45 32 00 90 00", $"Canada TD Bank Visa Debit/Interac Debit Card (Bank)" },
            new List<string> () { "3B 6D 00 00 00 73 C8 00 13 64 4A 37 42 37 00 90 00", $"Sberbank Visa card (Bank)" },
            new List<string> () { "3B 6D 00 00 00 73 C8 00 13 64 54 33 44 33 00 90 00", $"FirstBankcard issued for overstock.com (Bank)" },
            new List<string> () { "3B 6D 00 00 00 73 C8 00 13 64 54 34 42 33 00 90 00", $"chase (Bank)" },
            new List<string> () { "3B 6D 00 00 00 73 C8 00 13 64 54 34 44 32 00 90 00", $"Metrobank debit (Bank)" },
            new List<string> () { "3B 6D 00 00 00 73 C8 00 13 64 54 34 46 31 00 90 00", $"Discover (Bank)" },
            new List<string> () { "3B 6D 00 00 00 73 C8 00 13 64 54 37 41 38 00 90 00", $"German comdirect bank - Visa Credit, prepaid (Bank){Environment.NewLine}imaginBank (Spain) (VISA Electron) debit card (Bank)" },
            new List<string> () { "3B 6D 00 00 00 73 C8 00 13 64 54 37 42 34 00 90 00", $"Visa Electron Debit Card (Bank)" },
            new List<string> () { "3B 6D 00 00 00 73 C8 00 13 64 54 37 42 37 00 90 00", $"VISA GOLD WITH CHIP (Bank){Environment.NewLine}NatWest (UK) Current account VISA Debit" },
            new List<string> () { "3B 6D 00 00 00 73 C8 00 13 64 54 37 43 33 00 90 00", $"SEB Debit mastercard (Skandinaviska Enskilda Banken) (Bank)" },
            new List<string> () { "3B 6D 00 00 00 73 C8 00 13 64 54 37 43 35 00 90 00", $"ABANCA Mastercard Credit Card (Bank)" },
            new List<string> () { "3B 6D 00 00 00 73 C8 00 13 64 54 37 44 33 00 90 00", $"Deutsche Bank MasterCard Credit Card (Bank)" },
            new List<string> () { "3B 6D 00 00 00 73 C8 00 13 64 54 37 4B 33 00 90 00", $"Fineco (Italy) Bancomat (Visa) (Bank)" },
            new List<string> () { "3B 6D 00 00 00 73 C8 00 13 64 54 37 4B 34 00 90 00", $"BNL (Banca Nazionale Del Lavoro, BNP Paribas Group) Debit Card (Bank)" },
            new List<string> () { "3B 6D 00 00 00 80 31 80 65 B0 89 35 01 F1 83 00 90 00", $"MasterCard (Bank)" },
            new List<string> () { "3B 6D 00 00 00 81 4D 22 08 86 60 22 22 28 40 00 01", $"Unipay Credit Card Issued by CITIC (Bank)" },
            new List<string> () { "3B 6D 00 00 00 90 08 20 90 00 90 00 00 FF FF FF FF", $"Student college card" },
            new List<string> () { "3B 6D 00 00 49 46 58 2D 6A 63 33 30 31 67 70 32 32", $"MasterCard Debit card of N26 bank (Bank)" },
            new List<string> () { "3B 6D 00 00 57 44 28 57 46 03 50 62 13 65 68 54 1F", $"Card for decrypt encrypted tv channels made in china (Pay TV)" },
            new List<string> () { "3B 6D 00 00 57 44 29 6C 80 86 93 D1 27 1F 13 32 3D", $"SCSTA (Transport)" },
            new List<string> () { "3B 6D 00 00 57 44 29 6C 80 86 93 D6 03 EE 08 2A 3D", $"SCSTA (Transport)" },
            new List<string> () { "3B 6D 00 00 57 44 36 41 01 86 93 .. .. .. .. .. ..", $"WatchData Proxkey (PKI)" },
            new List<string> () { "3B 6D 00 00 80 31 80 65 49 53 01 00 01 83 07 90 00", $"Yandex money world card (Bank)" },
            new List<string> () { "3B 6D 00 00 80 31 80 65 49 53 01 03 01 83 07 90 00", $"MTS Money Bank Card (Bank)" },
            new List<string> () { "3B 6D 00 00 80 31 80 65 49 53 02 02 01 83 07 90 00", $"MasterCard SMP BANK (Bank)" },
            new List<string> () { "3B 6D 00 00 80 31 80 65 49 53 04 03 01 83 07 90 00", $"Mastercard Tinkoff.ru platinum (black) (Bank)" },
            new List<string> () { "3B 6D 00 00 80 31 80 65 49 53 06 05 FF 83 07 90 00", $"MIR Debit Card (Russia), Bank of Saint Petersburg (Bank)" },
            new List<string> () { "3B 6D 00 00 80 31 80 65 B0 06 01 01 77 83 00 90 00", $"GemXpresso Lite: with EMV application" },
            new List<string> () { "3B 6D 00 00 80 31 80 65 B0 07 02 02 89 83 00 90 00", $"JCOP30 contact interface" },
            new List<string> () { "3B 6D 00 00 80 31 80 65 B0 43 01 00 77 83 00 90 00", $"Gemplus GemXpresso Lite" },
            new List<string> () { "3B 6D 00 00 80 31 80 65 B0 83 .. .. .. 83 00 90 00", $"IDClassic 3XX / Classic TPC (IXS, IS, IS V2, IS CC, IM, IM CC, IM CC V3) / MultiApp ID Cards" },
            new List<string> () { "3B 6D 00 00 80 31 80 65 B0 83 01 02 90 83 00 90 00", $"DeutscheBank Identification card" },
            new List<string> () { "3B 6D 00 00 80 31 80 65 B0 83 02 04 7E 83 00 90 00", $"LuxTrust card" },
            new List<string> () { "3B 6D 00 00 80 31 80 65 B0 83 11 40 C8 83 00 90 00", $"Gemalto TOP IM{Environment.NewLine}(Old name GemSafeXpresso 64)" },
            new List<string> () { "3B 6D 00 00 80 31 80 65 B0 84 01 00 C8 83 00 90 00", $"Optelio Cards (D38-D72 R6) T=0 Normal Speed" },
            new List<string> () { "3B 6D 00 00 80 31 80 65 B0 86 26 01 08 83 08 90 00", $"RBC Royal Bank VISA (Bank)" },
            new List<string> () { "3B 6D 00 00 80 31 80 65 B0 87 27 01 BC 83 08 90 00", $"Kazcommertsbank{Environment.NewLine}one of the biggest banks in Republic of Kazakhstan{Environment.NewLine}Nordea (Finland) + Finnair MasterCard (credit){Environment.NewLine}GXP7 T=0" },
            new List<string> () { "3B 6D 00 00 80 31 80 65 B0 87 34 01 D7 83 00 90 00", $"Fidelity Investment Rewards (AMEX) (Bank)" },
            new List<string> () { "3B 6D 00 00 80 31 80 65 B0 89 35 01 F1 83 00 90 00", $"Bank of America BankAmericard Travel Visa Chip Card (Gemalto){Environment.NewLine}Credito Trevigiano - Banca di Credito Cooperativo - Carta BCC{Environment.NewLine}VISA Signature issued by RBC Bank (Georgia), N.A.{Environment.NewLine}Banca Popolare di Novara - (Bancomat Maestro)" },
            new List<string> () { "3B 6D 00 00 80 31 80 65 B0 89 40 01 F2 83 00 90 00", $"PSAM Card" },
            new List<string> () { "3B 6D 00 00 80 67 A1 11 01 01 64 08 55 83 0E 90 00", $"Italian Intesa SanPaolo Maestro" },
            new List<string> () { "3B 6D 00 FF 00 31 80 71 8E 64 48 D5 02 00 82 90 00", $"Blue for Business, American Express@Business" },
            new List<string> () { "3B 6D 00 FF 80 65 53 43 01 0D 06 73 94 21 1B 81 0[15]", $"Giesecke & Devrient CardToken 350 (ICCD)" },
            new List<string> () { "3B 6D 00 FF 80 73 00 21 13 57 4A 54 48 61 31 47 00", $"ActiveKey SIM" },
            new List<string> () { "3B 6D 00 FF 80 73 00 21 13 57 4A 54 48 61 31 48 00", $"Spanish Medical College Card" },
            new List<string> () { "3B 6E 00 00 00 31 80 71 86 65 01 64 02 22 32 80 90 00", $"MasterCard Card - bonus plus (paypass) - Garanti Bank / Turkey" },
            new List<string> () { "3B 6E 00 00 00 31 80 71 86 65 01 64 02 22 32 83 90 00", $"MasterCard Card - bonus YKM - Garanti Bank / Turkey" },
            new List<string> () { "3B 6E 00 00 00 31 80 71 86 65 01 67 02 A0 0A 83 90 00", $"Australian ANZ First Visa Card from the ANZ{Environment.NewLine}(Australia and New Zealand) Bank" },
            new List<string> () { "3B 6E 00 00 00 31 80 71 86 65 47 44 23 01 02 83 90 00", $"Nat West Master Card" },
            new List<string> () { "3B 6E 00 00 00 31 80 71 86 65 47 44 24 01 81 83 90 00", $"MasterCard Card - Maximum - IS Bank / Turkey{Environment.NewLine}Visa Card - Axess - Akbank / Turkey" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 0A D7 02 00 82 71 D6 8C 61 33", $"Lloyds (Bank)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 0A D7 02 00 82 71 D6 8C 61 37", $"MasterCard credit card issued by Citadele bank (Latvia) including e-Talons (public transportation system) (Bank)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 0A D7 02 00 82 71 D6 8C 61 39", $"Desjardins Interac Debit Card (Bank)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 0A D7 02 00 82 71 D6 8C 61 5A", $"mastercard (Bank)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 54 B6 01 00 84 71 D6 8C 61 2C", $"Kazakhstan Centrcredit bank VISA electron card" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 54 B6 01 00 84 71 D6 8C 61 31", $"UK BARCLAYS VISA Connect Debit card.{Environment.NewLine}The chip is used for the Chip&PIN application common for all UK-issued cards" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 54 B6 01 00 84 71 D6 8C 61 35", $"VISA Electron of Commerzbank AG (Bank)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 76 B4 01 01 60 71 D6 8C 61 1F", $"MasterCard Silver from Viseca Card Services SA" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 77 B2 01 01 47 71 D6 8C 61 33", $"VISA Credit Card (National Bank of Greece)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 77 B2 01 03 47 71 D6 8C 61 31", $"UK Barclaycard Business VISA{Environment.NewLine}Nationwide Building Society (UK) Visa Debit and Credit Cards" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 77 B2 01 03 47 71 D6 8C 61 37", $"Italian Soldintasca Sanpaolo prepaid VISA-Electron" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 77 B3 01 00 70 71 D6 8C 61 ..", $"Italian Bancomat (debit card)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 7C B5 01 00 80 71 D6 8C 61 2C", $"Kazakhstan Kazkom bank VISA electron card" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 7C B5 01 00 80 71 D6 8C 61 35", $"MasterCard Classic, issued by Avangard Bank (Russia)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 7C B5 01 00 80 71 D6 8C 61 37", $"Swedbank MasterCard card" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 7C B5 01 01 80 71 D6 8C 61 21", $"MUFG CARD (AMEX .jp) (Bank)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 BC D0 02 01 06 71 D6 8C 61 2E", $"Lloyds TSB Mastercard Credit Card" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 BC D0 02 01 06 71 D6 8C 61 33", $"Lloyds TSB Visa Debit{Environment.NewLine}Barclays Visa DEBIT" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 BC D0 02 01 06 71 D6 8C 61 43", $"S-pankki (Finland) Visa Debit" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 BC D1 02 01 01 71 D6 8C 61 33", $"Travelex Cash Passport - Prepaid MasterCard Currency Card" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 BC D1 02 01 01 71 D6 8C 61 35", $"MasterCard Card, issues by Rabobank in the Netherlands" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 D3 C1 02 01 28 71 D6 8C 61 22", $"Visa debit card" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 D3 C1 02 01 28 71 D6 8C 61 25", $"BBK (Spain) (VISA, Euro 6000) credit card (Bank)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 D3 C1 02 01 28 71 D6 8C 61 33", $"SberBank Silver Debit Card" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 D3 C1 02 01 28 71 D6 8C 61 39", $"Paypal Italy prepaid Mastercard" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 D3 C2 02 00 05 71 D6 8C 61 35", $"Italian Intesa SanPaolo VISA{Environment.NewLine}Intesa Sanpaolo Bancomat & Maestro Card (Bank)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 D3 C2 02 00 05 71 D6 8C 61 39", $"Italian Bancomat (Cassa di Risparmio di Rimini) (bank card)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 D3 C3 02 03 01 71 D6 8C 61 3B", $"American Express Platinum from Banco do Brasil" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 E2 C4 02 01 01 71 D6 8C 61 22", $"mastercard (Bank)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 E2 C4 02 02 01 71 D6 8C 61 25", $"Spanish \"Santander\" bank - Maestro debit card - Made by gemalto sp SA" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 E7 D2 02 01 10 71 D6 8C 61 23", $"Visa debit card: mBank - BRE Bank SA" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 E7 D2 02 01 10 71 D6 8C 61 27", $"ATEbank VISA (Bank)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 E7 D2 02 01 10 71 D6 8C 61 33", $"Clydesdal Bank Maestro Card" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 E7 D2 02 01 10 71 D6 8C 61 35", $"Knab Bank debit card (Bank)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 E7 D2 02 01 10 71 D6 8C 61 37", $"UCFIN (Italy) \"UniCreditCard Free\" or \"Plus\" (VISA or MasterCard) credit card" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 E7 D2 02 01 10 71 D6 8C 61 39", $"Yandex Money MasterCard (Bank)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 E7 D2 02 01 10 71 D6 8C 61 3D", $"VISA credit card (Nordea DK) (Bank)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 E7 D2 02 01 10 71 D6 8C 61 41", $"VISA by CAL ( Israeli Credit Card Company ) (Bank)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 E7 D2 02 01 10 71 D6 8C 61 47", $"Hellenic Bank Visa Electron (Gemalto)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 EC D4 02 00 08 71 D6 8C 61 33", $"Victoria Bank (Republic of Moldova) - Visa Electron" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 EE C5 02 01 0B 71 D6 8C 61 39", $"Desjardins Bank Acces (Bank)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 F1 D5 02 01 09 71 D6 8C 61 33", $"HALIFAX (Bank)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 F7 C6 02 00 06 71 D6 8C 61 33", $"Visa Card - SberBank / Russia (Bank)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 F7 C6 02 00 06 71 D6 8C 61 37", $"Finnish Ticket lunch card (Edenred) (Bank)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 F7 C6 02 00 06 71 D6 8C 61 39", $"\"Ticket Restaurant\" Edenred España S.A. (Bank)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 F8 D6 02 01 07 71 D6 8C 61 23", $"Visa debit card: mBank S.A. (Bank)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 F8 D6 02 01 07 71 D6 8C 61 27", $"VISA Credit Card issued by Santander Bank (Bank)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 F8 D6 02 01 07 71 D6 8C 61 2E", $"Sainsbury's Bank MasterCard (Bank)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 F8 D6 02 01 07 71 D6 8C 61 33", $"Tesco Bank Credit Card (VISA) (Bank){Environment.NewLine}Tesco Bank UK MasterCard ClubCard Credit Card" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 F8 D6 02 01 07 71 D6 8C 61 35", $"Bank Of Ireland Visa Debit (Bank)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 F8 D6 02 01 07 71 D6 8C 61 37", $"UCFIN (Italy) \"UniCreditCard Free\" or \"Plus\" (VISA or MasterCard) credit card" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 F8 D6 02 01 07 71 D6 8C 61 39", $"CartaBcc Classic VISA (Bank)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 F8 D6 02 01 07 71 D6 8C 61 41", $"Estonian bank \"SEB\" (MasterCard warm) (Bank)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 65 F8 D6 02 01 07 71 D6 8C 61 5A", $"Compte-Nickel bank card (Bank)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 71 86 65 01 64 02 22 33 83 90 00", $"UK NatWest ServiceCard 100 Maestro{Environment.NewLine}Visa Card - bonus - Garanti Bank / Turkey{Environment.NewLine}UK Royal Bank of Scotland Highline Maestro Debit" },
            new List<string> () { "3B 6E 00 00 00 31 C0 71 86 65 01 78 01 27 34 83 90 00", $"UK NatWest ServiceCard 100 Maestro{Environment.NewLine}Visa Card - Gold - CARDFINANS / Turkey" },
            new List<string> () { "3B 6E 00 00 00 31 C0 71 86 65 01 BB 01 13 3B 83 90 00", $"NatWest Servicecard 100 - Maestro ATM{Environment.NewLine}NatWest Visa Debit" },
            new List<string> () { "3B 6E 00 00 00 31 C0 71 86 65 02 02 04 04 41 83 90 00", $"CIBC (Canada) \"Platinum\" (VISA) credit card{Environment.NewLine}ING Direct (Italy) \"Gold\" (VISA) credit card{Environment.NewLine}ING Direct (Italy) \"Bancomat\" (V PAY) debit card{Environment.NewLine}HSBC (Canada) (Interac/Cirrus/The Exchange) debit card{Environment.NewLine}UniCredit (Italy) \"Bancomat\" (Maestro) debit card" },
            new List<string> () { "3B 6E 00 00 00 31 C0 71 86 65 02 02 04 04 41 83 90 F0", $"Italian Hellobank Maestro (Bank)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 71 C6 65 01 B0 01 03 37 83 90 00", $"NatWest (UK) \"Business\" (MasterCard) credit card{Environment.NewLine}NatWest (UK) (Maestro) debit card{Environment.NewLine}Santander Totta (Portugal) \"JÁ KÁ KONTA\" (VISA Electron) debit card{Environment.NewLine}ANZ (Australia) (VISA) credit card{Environment.NewLine}Millennium BCP (Portugal) (VISA Electron) debit card{Environment.NewLine}OpenBank (Spain) (VISA) credit card{Environment.NewLine}CIBC (Canada) debit card{Environment.NewLine}UniCredit (Italy) \"Genius Card\" (MasterCard) debit card{Environment.NewLine}UniCredit (Italy) \"UniCreditCard Click\" (MasterCard) debit card{Environment.NewLine}VISA Electron debit card from the Spanish branch of ING Direct (bank)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 71 C6 65 01 B0 01 03 3A 83 90 00", $"MasterCard hostet by Deutsche Bank, Germany{Environment.NewLine}Maestro card by Caja de Burgos, Spain{Environment.NewLine}MasterCard Debit Card issued by Spain Openbank (www.openbank.es)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 71 C6 65 01 B0 01 31 37 83 90 00", $"Electron VISA Credit Card (BANK OF Cyprus)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 71 C6 65 17 0B 04 36 2D 0F 90 00", $"Capitec Bank Card (Bank)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 71 C6 65 19 02 04 06 2F 0F 90 00", $"UniCredit (Italy) \"Bancomat\" (Maestro) debit card (Bank)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 71 C6 65 19 02 04 06 32 0F 90 00", $"Visa Electron card (Bank)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 71 C6 65 23 7B 02 75 39 83 90 00", $"MASTERCARD (CARTASI') (Bank)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 71 C6 65 42 2C 01 35 35 83 90 00", $"UniCredit (Italy) \"UniCreditCard Classic\" (VISA) credit card" },
            new List<string> () { "3B 6E 00 00 00 31 C0 71 C6 65 71 0C 04 35 36 83 90 00", $"NatWest VISA Business Debit{Environment.NewLine}VISA Debit Card (NatWest / ING DiBa){Environment.NewLine}Komercni Banka, A.S., Visa Debit, Czech Republic" },
            new List<string> () { "3B 6E 00 00 00 31 C0 71 C6 65 73 04 04 25 38 83 90 00", $"Itau Debit Card (mastercard) (Bank)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 71 C6 65 74 0B 04 16 31 0F 90 00", $"Creditcard Deutsche Bank{Environment.NewLine}NatWest (UK) Savings account PLUS card" },
            new List<string> () { "3B 6E 00 00 00 31 C0 71 D6 64 38 D0 03 00 84 90", $"visadebit (Bank)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 71 D6 65 12 0D 01 81 00 83 90 00", $"VISA Gold (VISA ORO) from the Spanish branch of ING Direct (bank){Environment.NewLine}Visa Credit Card issued by Spain Cetelem for PayPal (www.paypal.es/cetelem){Environment.NewLine}MasterCard debit card: moneybookers.com card issued by Newcastle Building Society{Environment.NewLine}MasterCard debit card (Maestro) issued by Caixa" },
            new List<string> () { "3B 6E 00 00 00 31 C0 71 D6 65 13 0D 01 81 00 83 90 00", $"Mastercard Black issued by Banco do Brasil (www.bb.com.br){Environment.NewLine}Manufactured by Oberthur (www.oberthur.com)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 71 D6 65 7D E4 01 10 A0 83 90 00", $"VISA card, issued by the ANWB, the Dutch national Automobile club{Environment.NewLine}VISA Card - Maximum - Oyak Bank / Turkey{Environment.NewLine}VISA - Barclays Premier" },
            new List<string> () { "3B 6E 00 00 00 31 C0 71 D6 65 7D E4 01 11 A0 83 90 00", $"UK CapitalOne Platinum Mastercard" },
            new List<string> () { "3B 6E 00 00 00 31 C0 71 D6 65 94 E8 03 40 00 83 90 00", $"First Direct UK VISA Debit{Environment.NewLine}Italian Cariparma Maestro{Environment.NewLine}\"Net+ Mastercard card\" from netpluscards.com, Neteller{Environment.NewLine}UCFIN (Italy) \"UniCreditCard Free\" (VISA) credit card{Environment.NewLine}Cirrus ATM Card issued by Permanent TSB in Ireland" },
            new List<string> () { "3B 6E 00 00 00 31 C0 71 D6 65 A3 03 01 80 00 83 90 00", $"UK First Direct (HSBC) Maestro / Cirrus{Environment.NewLine}UK Capital One Platinum MasterCard{Environment.NewLine}HSBC Commercial Card Visa{Environment.NewLine}VISA issued by Czech's \"Komercni banka\" (member of Societe General group){Environment.NewLine}Portugal Caixa Geral de Depositos debit card{Environment.NewLine}The co-operative bank VISA Debit{Environment.NewLine}SberBank Silver Debit Card (VISA){Environment.NewLine}Maestro/Cirrus/Laser Card issued by Bank of Ireland in Ireland" },
            new List<string> () { "3B 6E 00 00 00 31 C0 71 D6 65 CE 0B 01 40 00 83 90 00", $"Nationwide InvestDirect (bank){Environment.NewLine}SberBank Gold Credit Card (VISA)" },
            new List<string> () { "3B 6E 00 00 00 31 C0 71 D6 65 CE 0B 01 41 00 83 90 00", $"Intesa Sanpaolo Bancomat & Maestro Card (Bank)" },
            new List<string> () { "3B 6E 00 00 00 3B 6B 00 00 00 31 C0 64 08 10 41 08 07", $"Bank Of America Signature Visa (Bank)" },
            new List<string> () { "3B 6E 00 00 00 3B 6F 00 00 80 31 E0 6B 04 54 6B 02 01", $"Visa Prepaid Debit Card (Bank)" },
            new List<string> () { "3B 6E 00 00 00 62 .. 43 57 41 56 41 4E 54 10 81 90 00", $"Setec SetCOS 4.3.0" },
            new List<string> () { "3B 6E 00 00 00 62 00 00 57 41 56 41 4E 54 10 81 90 00", $"Setec SetCOS 5.1.0 EMV + AVANT" },
            new List<string> () { "3B 6E 00 00 00 62 16 43 .. 41 56 41 4E 54 10 81 .. ..", $"Setec SetCos 4.3.0" },
            new List<string> () { "3B 6E 00 00 00 62 80 42 57 41 56 41 4E 54 10 81 90 00", $"Sampo Pankki (Finland) (now known as Danske Bank) ATM card (Bank)" },
            new List<string> () { "3B 6E 00 00 00 73 C8 00 13 64 54 30 33 45 20 00 90 00", $"Day Tronic Flex electronic meal vouchers (Other)" },
            new List<string> () { "3B 6E 00 00 00 73 C8 00 13 64 57 44 30 33 20 00 90 00", $"Up Day Tronic electronic meal voucher card (Italy) (Other)" },
            new List<string> () { "3B 6E 00 00 33 30 4A 30 33 86 88 76 70 36 76 33 2E 30", $"Agricultural Bank of China (Bank)" },
            new List<string> () { "3B 6E 00 00 45 73 74 45 49 44 20 76 65 72 20 31 2E 30", $"Estonian Identity Card (EstEID v1.1 \"MULTOS\" cold)" },
            new List<string> () { "3B 6E 00 00 4B 41 44 4E 49 4B 41 48 76 31 2E 30 90 00", $"Nikah, Cerai, Rujuk (NCR) - The marriage information with identity of Husband and Wife registered at Jabatan Agama Islam Selangor, Malaysia (eID)" },
            new List<string> () { "3B 6E 00 00 57 44 36 13 69 86 93 02 22 19 36 28 12 11", $"bb token bank Banco do Brasil (Bank)" },
            new List<string> () { "3B 6E 00 00 57 44 36 13 69 86 93 02 32 12 56 28 25 32", $"Watchdata Brazil CSP v1.0 (Banco do Brasil)" },
            new List<string> () { "3B 6E 00 00 57 44 36 19 69 86 93 02 21 18 15 50 0E 2B", $"Usb Token from watchdata from Brazil (PKI)" },
            new List<string> () { "3B 6E 00 00 57 44 36 19 69 86 93 02 21 18 15 50 20 27", $"Watchdata USB Key (PKI)" },
            new List<string> () { "3B 6E 00 00 57 44 36 19 69 86 93 02 23 18 15 50 20 08", $"Card used by SERPRO at Brazil (PKI)" },
            new List<string> () { "3B 6E 00 00 57 44 36 19 69 86 93 02 24 11 75 42 1D 0E", $"Watchdata USB Key (eID)" },
            new List<string> () { "3B 6E 00 00 57 44 36 19 69 86 93 02 25 11 75 42 32 2B", $"Watchdata USB Key (PKI)" },
            new List<string> () { "3B 6E 00 00 57 44 36 19 69 86 93 02 31 18 15 50 06 15", $"WatchData USB Key (Other)" },
            new List<string> () { "3B 6E 00 00 57 44 36 19 69 86 93 02 33 11 75 42 33 1E", $"Watchdata USB token (white, Serpro Brasil) (Other)" },
            new List<string> () { "3B 6E 00 00 57 44 36 19 69 86 93 02 35 11 75 42 16 30", $"WATCHDATA USB KEY (Other)" },
            new List<string> () { "3B 6E 00 00 62 6C 75 63 61 72 64 20 32 4B 42 2F 76 34", $"eID Blutronics Blucard 2K" },
            new List<string> () { "3B 6E 00 00 62 6C 75 63 61 72 64 20 34 4B 42 2F 76 34", $"eID Blutronics Blucard 4K" },
            new List<string> () { "3B 6E 00 00 62 6C 75 63 61 72 64 20 38 4B 42 2F 76 34", $"eID Blutronics Blucard 8K" },
            new List<string> () { "3B 6E 00 00 80 25 A0 00 00 00 28 56 80 10 24 00 01 11", $"Opencard, new card in Prague, Czech Republic (transport card)" },
            new List<string> () { "3B 6E 00 00 80 31 80 65 B0 03 01 01 5E 83 00 00 90 00", $"FirstUSA Visa" },
            new List<string> () { "3B 6E 00 00 80 31 80 65 B0 03 02 01 5E 83 00 00 90 00", $"Gemplus GemXpresso 211is" },
            new List<string> () { "3B 6E 00 00 80 31 80 66 B0 07 03 00 AC 01 83 00 90 00", $"e-payment card with topup system, propreteary by local bank" },
            new List<string> () { "3B 6E 00 00 80 31 80 66 B0 84 0C 01 6E 01 83 00 90 00", $"Optelio Cards (D72 R4 WR){Environment.NewLine}Nordea (a Skandinavian bank) eID card{Environment.NewLine}RBC Royal Bank Client Card (bank in Canada){Environment.NewLine}Banco Santander TUI/USC R7{Environment.NewLine}Gemalto Optelio/Desineo D72 (JavaCard) with WG10 and Maestro (JavaCard) (Bank){Environment.NewLine}Carte Ticket Restaurant with MasterCard{Environment.NewLine}Citigold VISA Debit for Citibank, Australia{Environment.NewLine}Platinum VISA card for Citibank, Australia{Environment.NewLine}VISA Infinite issued by RBC Royal Bank (Canada){Environment.NewLine}Postepay Evolution - Poste Italiane (mastercard){Environment.NewLine}\"la Caixa\" (Spain) (VISA Electron) debit card (Bank){Environment.NewLine}Italian Webank.it BPM Banca Popolare di Milano Bancomat & Maestro Card (Bank)" },
            new List<string> () { "3B 6E 00 00 80 31 80 66 B0 84 12 01 6E 01 83 00 90 00", $"Barclaycard Platinum VISA{Environment.NewLine}Inteligo debit card{Environment.NewLine}VISA issued by ING (Poland){Environment.NewLine}VISA Debit card for ING Direct, Australia{Environment.NewLine}VISA Gold issued by RBC Royal Bank (Canada){Environment.NewLine}Gas Natural Fenosa Visa (issued by CaixaBank) (Bank)" },
            new List<string> () { "3B 6E 00 00 80 31 80 66 B0 84 16 01 6E 01 83 00 90 00", $"UK \"Barclaycard Gold VISA\" with RFID" },
            new List<string> () { "3B 6E 00 00 80 31 80 66 B0 87 0C 01 6E 01 83 00 90 00", $"Banco Santander TUI/USC R7 - Gemalto Optelio/Desineo D72 (JavaCard)" },
            new List<string> () { "3B 6E 00 00 80 31 80 66 B1 A1 11 01 00 F6 83 00 90 00", $"Gemalto Desineo D72 FXR1 (PKI){Environment.NewLine}Gemalto TOP DL V2 (PKI)" },
            new List<string> () { "3B 6E 00 00 80 31 80 66 B1 A1 11 01 A0 F6 83 00 90 00", $"Optelio D72 FXR1 (MD) T=0" },
            new List<string> () { "3B 6E 00 00 80 31 80 66 B1 A3 01 01 21 0A 83 00 90 00", $"French \"Livret A\" issued by \"La banque postale\" (Bank)" },
            new List<string> () { "3B 6E 00 00 80 31 80 66 B1 A3 04 01 11 0B 83 00 90 00", $"Mastercard used in Spain to pay in Restaurants. Made by Edenred. Limited in payment and unable to get physical cash. (Bank)" },
            new List<string> () { "3B 6E 00 00 80 31 80 66 B1 A5 01 02 32 19 83 00 90 00", $"Meeza BDC (Bank)" },
            new List<string> () { "3B 6E 00 00 80 31 80 66 B1 A6 01 01 01 13 83 00 90 00", $"Finnish Smartum benefit card (Other)" },
            new List<string> () { "3B 6E 00 00 80 66 B1 A3 04 01 11 0B 83 00 90 00", $"Bank of America (Bank)" },
            new List<string> () { "3B 6E 00 FF 00 62 00 00 57 41 56 41 4E 54 10 81 90 00", $"debit card (Visa Electron) issued by Nordea bank" },
            new List<string> () { "3B 6E 00 FF 45 73 74 45 49 44 20 76 65 72 20 31 2E 30", $"Estonian Identity Card (EstEID v1.0 warm)" },
            new List<string> () { "3B 6E 00 FF 47 44 2D 47 50 2D 33 32 56 34 2D 44 45 53", $"Mastercard Ourocard Platinum from Banco do Brasil" },
            new List<string> () { "3B 6F 00 00 00 31 C0 68 43 53 50 45 4D 56 03 00 07 90 00", $"SOCCARDRT (HealthCare)" },
            new List<string> () { "3B 6F 00 00 00 31 C1 73 C8 21 10 64 41 44 32 31 00 90 00", $"Debit Card for Santander Universidades PT (Bank)" },
            new List<string> () { "3B 6F 00 00 00 31 C1 73 C8 21 10 64 41 4D 33 47", $"CHASE DEBIT VISA (JavaCard)" },
            new List<string> () { "3B 6F 00 00 00 31 C1 73 C8 21 10 64 47 4D 31 31 00 90 00", $"Beutsche Bank Business mastercard credit (Bank)" },
            new List<string> () { "3B 6F 00 00 00 31 C1 73 C8 21 10 64 47 4D 31 33 00 90 00", $"Bank card from the Commonwealth Bank of Australia (Bank)" },
            new List<string> () { "3B 6F 00 00 00 31 C1 73 C8 21 10 64 47 4D 31 34 00 90 00", $"bancomat Banca Popolare Milano + maestro debit card + rfid (Bank)" },
            new List<string> () { "3B 6F 00 00 00 31 C1 73 C8 21 10 64 47 4D 33 31 00 90 00", $"BBVA Antes Card (Spain) (VISA) prepaid card (Bank)" },
            new List<string> () { "3B 6F 00 00 00 31 C1 73 C8 21 10 64 47 4D 33 32 00 90 00", $"td debit visa card (Bank){Environment.NewLine}Scotiabank ScotiaCard Interac/Visa debit card (Bank)" },
            new List<string> () { "3B 6F 00 00 00 31 C1 73 C8 21 10 64 47 4D 33 38 00 90 00", $"ING Direct Debit Card (Bank)" },
            new List<string> () { "3B 6F 00 00 00 31 C1 73 C8 21 10 64 47 4D 33 41 00 90 00", $"Fineco debit card (Bancomat, Visa Debit) (Bank)" },
            new List<string> () { "3B 6F 00 00 00 31 C1 73 C8 21 10 64 47 4D 34 35 00 90 00", $"VISA card, issued by OP Financial Group, Finland (Bank)" },
            new List<string> () { "3B 6F 00 00 00 31 C1 73 C8 21 10 64 47 4D 34 37 00 90 00", $"Visa credit card, issued by Klarna (Bank) (Bank)" },
            new List<string> () { "3B 6F 00 00 00 31 C1 73 C8 21 10 64 57 49 30 35 00 90 00", $"Discover EMV Card (Bank)" },
            new List<string> () { "3B 6F 00 00 00 31 C1 73 C8 21 10 64 57 49 30 36 00 90 00", $"neat MasterCard (Bank)" },
            new List<string> () { "3B 6F 00 00 00 31 C1 73 C8 21 10 64 57 49 31 31 00 90 00", $"Banca Popolare Di Sondrio (IT) - Ateneo+ Card for University of Brescia (Bank)" },
            new List<string> () { "3B 6F 00 00 00 31 C1 73 C8 21 10 64 57 4B 30 37 00 90 00", $"NatWest VISA Debit card (Bank)" },
            new List<string> () { "3B 6F 00 00 00 31 C1 73 C8 21 10 64 57 4B 31 33 00 90 00", $"Carta HYPE MasterCard (Italy) (Bank){Environment.NewLine}RACC Master (Bank)" },
            new List<string> () { "3B 6F 00 00 00 31 C1 73 C8 21 10 64 57 53 34 30 00 90 00", $"PNC Debit (Bank)" },
            new List<string> () { "3B 6F 00 00 00 66 4D 45 31 61 03 01 53 08 61 04 F0 90 00", $"Spanish University of Murcia smart ID card - Old version (M.Mar OS) - Also used by many others spanish universities" },
            new List<string> () { "3B 6F 00 00 00 66 4D 45 31 B1 03 01 53 08 61 04 F0 90 00", $"Spanish UCAM University smart ID card - (M.Mar OS) - Also used by many others spanish universities" },
            new List<string> () { "3B 6F 00 00 00 66 4D 45 66 80 03 .. 53 06 61 03 F0 90 00", $"Millenium Card (www.coruna.es/millennium) municipal city card for A Coruña, Spain.{Environment.NewLine}electronic wallet for paying services like parking meter or public service (bus) transportation." },
            new List<string> () { "3B 6F 00 00 00 66 4D 45 66 80 03 0C 53 06 61 05 F0 90 00", $"Transporte Metropolitano de Galicia (Transport)" },
            new List<string> () { "3B 6F 00 00 00 66 4D 45 66 80 03 14 53 03 61 04 F0 90 00", $"Paypal Prepaid Card (YoUnique Money E.D.E.)" },
            new List<string> () { "3B 6F 00 00 00 66 4D 45 66 80 03 16 53 06 61 05 F0 90 00", $"Transport Metropolitano de Galicia (Transport)" },
            new List<string> () { "3B 6F 00 00 00 66 4D 45 66 84 03 09 53 03 61 04 F0 90 00", $"spanish MAESTRO debit card, from Unicaja bank" },
            new List<string> () { "3B 6F 00 00 00 67 2. 43 46 49 53 45 12 52 66 FF 81 90 00", $"Setec SetCOS 4.3.2" },
            new List<string> () { "3B 6F 00 00 00 68 2B 42 05 02 46 49 53 45 31 C8 07 90 00", $"MAESTRO card, issued by Swedbank Estonia" },
            new List<string> () { "3B 6F 00 00 00 68 2C 42 05 02 46 49 53 45 31 C8 07 90 00", $"VISA card, issued by Swedbank Latvia{Environment.NewLine}VISA card, issued by the Latvian bank \"Latvijas Krajbanka\"" },
            new List<string> () { "3B 6F 00 00 00 B8 54 21 10 04 90 00 00 00 00 00 00 00 00", $"VIABUY Credit card (Bank)" },
            new List<string> () { "3B 6F 00 00 00 B8 54 31 10 07 90 00 00 00 00 00 00 00 00", $"Revolut Premium Mastercard (Bank){Environment.NewLine}Monzo Bank (UK) Debit Mastercard{Environment.NewLine}Länsförsäkringar (SE) Debit Mastercard{Environment.NewLine}ING Direct MasterCard (Bank)" },
            new List<string> () { "3B 6F 00 00 02 31 B8 13 FF 00 00 00 00 00 00 00 0F 90 00", $"Coverflex | Flexible Benefits Platform (Other)" },
            new List<string> () { "3B 6F 00 00 31 01 F1 56 40 11 00 19 00 00 00 00 00 00 00", $"Postepay Evolution (Bank)" },
            new List<string> () { "3B 6F 00 00 62 6C 75 63 61 72 64 20 31 36 4B 42 2F 76 34", $"eID Blutronics Blucard 16K" },
            new List<string> () { "3B 6F 00 00 80 31 C0 52 00 83 64 02 19 08 32 83 83 90 00", $"Bancomer Mexican Bank" },
            new List<string> () { "3B 6F 00 00 80 31 C0 52 05 B5 64 02 00 64 71 83 83 90 00", $"Read Card in USB, used for application in Java. (JavaCard)" },
            new List<string> () { "3B 6F 00 00 80 31 C0 52 07 52 64 02 19 08 32 83 83 90 00", $"Santander (Bank)" },
            new List<string> () { "3B 6F 00 00 80 31 C0 52 07 6F 64 02 19 04 32 83 83 90 00", $"Credit Card IXE Banco, México" },
            new List<string> () { "3B 6F 00 00 80 31 C0 52 0A 47 64 02 B3 02 37 83 83 90 00", $"Visa debit card issued by the Spanish bank \"tubancaja\"" },
            new List<string> () { "3B 6F 00 00 80 31 C0 52 10 68 64 02 B3 02 70 83 83 90 00", $"Santander Brazil VISA Elite Platinum (Bank)" },
            new List<string> () { "3B 6F 00 00 80 31 C0 52 11 F4 64 02 B3 02 37 83 83 90 00", $"VISA (Bank)" },
            new List<string> () { "3B 6F 00 00 80 31 C0 52 13 2F 64 02 19 08 32 83 83 90 00", $"Cajamadrid-UCM (Madrid, Spain) Cash/Visa Electron" },
            new List<string> () { "3B 6F 00 00 80 31 C0 52 16 B9 64 05 66 80 32 83 83 90 00", $"Banorte Mexican Bank" },
            new List<string> () { "3B 6F 00 00 80 31 C0 52 20 E2 64 05 62 17 80 83 83 90 00", $"VISA MedicusMundi (VISA Classic Affinity credit card, issued by Laboral Kutxa) (Bank)" },
            new List<string> () { "3B 6F 00 00 80 31 E0 5B 45 55 52 00 00 00 00 00 07 02 00", $"Pre-loaded wallet card. \"Mondex is a smart card electronic cash system, implemented as a stored-value card\" (Bank)" },
            new List<string> () { "3B 6F 00 00 80 31 E0 5B 4E 4F 4B 00 00 00 00 00 00 02 00", $"Norsk-Tipping (Buypass) Monodex card" },
            new List<string> () { "3B 6F 00 00 80 31 E0 5B 54 57 44 00 00 00 00 00 00 02 00", $"MasterCard credit card for Far Eastern Bank, Taiwan" },
            new List<string> () { "3B 6F 00 00 80 31 E0 5B 59 54 4C 00 00 00 00 00 00 02 00", $"Turkish Armed Force - Daily Social Facility Usage Card" },
            new List<string> () { "3B 6F 00 00 80 31 E0 6B 01 03 05 02 E0 55 55 55 55 55 55", $"American Express Gold Credit Card" },
            new List<string> () { "3B 6F 00 00 80 31 E0 6B 02 01 02 07 01 55 55 55 55 55 55", $"Brazilian state bank: Caixa Econômica Federal debit card" },
            new List<string> () { "3B 6F 00 00 80 31 E0 6B 02 03 02 07 01 55 55 55 55 55 55", $"Banco de Brasília MasterCard Credit Card (Bank)" },
            new List<string> () { "3B 6F 00 00 80 31 E0 6B 04 03 03 04 05 55 55 55 55 55 55", $"Blue American Express Card" },
            new List<string> () { "3B 6F 00 00 80 31 E0 6B 04 06 03 04 13 55 55 55 55 55 55", $"Telstra MULTOS v4 Card (PKI)" },
            new List<string> () { "3B 6F 00 00 80 31 E0 6B 04 06 03 04 40 55 55 55 55 55 55", $"Blue American Express Card" },
            new List<string> () { "3B 6F 00 00 80 31 E0 6B 04 06 05 02 17 55 55 55 55 55 55", $"Marx Software Security - Cryptoken M2048, MULTOS, Infineon SLE66CX, 64kByte" },
            new List<string> () { "3B 6F 00 00 80 31 E0 6B 04 06 05 02 25 55 55 55 55 55 55", $"Hong Kong Permanent Identity Card (eID)" },
            new List<string> () { "3B 6F 00 00 80 31 E0 6B 04 20 05 02 30 55 55 55 55 55 55", $"Buypass card for Norsk Tipping" },
            new List<string> () { "3B 6F 00 00 80 31 E0 6B 04 20 05 02 47 55 55 55 55 55 55", $"\"Norsk-Tipping (Buypass) Monodex card\"" },
            new List<string> () { "3B 6F 00 00 80 31 E0 6B 04 20 05 02 58 55 55 55 55 55 55", $"Norsk Tipping online player card{Environment.NewLine}Norwegian government controlled betting company" },
            new List<string> () { "3B 6F 00 00 80 31 E0 6B 04 21 05 02 57 55 55 55 55 55 55", $"GE 28 Degrees MasterCard (Australia) (Bank)" },
            new List<string> () { "3B 6F 00 00 80 31 E0 6B 04 21 05 02 61 55 55 55 55 55 55", $"NORSK TIPPING NORWAY" },
            new List<string> () { "3B 6F 00 00 80 31 E0 6B 04 21 05 02 6C 55 55 55 55 55 55", $"Icelandic Electronic ID (eID)" },
            new List<string> () { "3B 6F 00 00 80 31 E0 6B 04 21 05 02 72 55 55 55 55 55 55", $"Card CAA Quebec (Mastercard) (Bank)" },
            new List<string> () { "3B 6F 00 00 80 31 E0 6B 04 31 05 02 A6 55 55 55 55 55 55", $"USAA EMV Mastercard Creditcard (Bank)" },
            new List<string> () { "3B 6F 00 00 80 31 E0 6B 04 31 05 02 AC 55 55 55 55 55 55", $"Diners Club Credit card (British Airways, Switzerland) (Bank)" },
            new List<string> () { "3B 6F 00 00 80 31 E0 6B 04 31 05 02 AF 55 55 55 55 55 55", $"debit card (Bank)" },
            new List<string> () { "3B 6F 00 00 80 31 E0 6B 04 31 05 02 D1 55 55 55 55 55 55", $"Pockit Pre-Paid Mastercard (Contact Chip). (Bank)" },
            new List<string> () { "3B 6F 00 00 80 31 E0 6B 04 31 05 02 D6 55 55 55 55 55 55", $"Bank IN - Slovenian bank (Bank)" },
            new List<string> () { "3B 6F 00 00 80 31 E0 6B 04 52 05 02 BB 55 55 55 55 55 55", $"AlfaBROU - Mastercard (prepaid card emitted by Banco Republica - Uruguay) (Bank)" },
            new List<string> () { "3B 6F 00 00 80 31 E0 6B 04 52 05 02 FD 55 55 55 55 55 55", $"C6 Bank Mastercard Global Account (Bank){Environment.NewLine}C6 Bank Mastercard Brazil Account (Bank)" },
            new List<string> () { "3B 6F 00 00 80 31 E0 6B 04 52 05 02 FE 55 55 55 55 55 55", $"CITIBanamex \"Perfiles\" debit card (Bank)" },
            new List<string> () { "3B 6F 00 00 80 31 E0 6B 05 05 05 02 80 55 55 55 55 55 55", $"Banamex cuenta perfiles (Bank)" },
            new List<string> () { "3B 6F 00 00 80 31 E0 6B 05 08 05 02 83 55 55 55 55 55 55", $"Bank of Montreal debit card" },
            new List<string> () { "3B 6F 00 00 80 31 E0 6B 05 12 05 02 87 55 55 55 55 55 55", $"American Express credit card" },
            new List<string> () { "3B 6F 00 00 80 31 E0 6B 06 16 05 02 8C 55 55 55 55 55 55", $"Air Miles American Express card (contact) (Bank)" },
            new List<string> () { "3B 6F 00 00 80 31 E0 6B 07 14 05 02 8A 55 55 55 55 55 55", $"SolutionsBanking Canada Interac debit card" },
            new List<string> () { "3B 6F 00 00 80 31 E0 6B 08 24 05 02 B5 55 55 55 55 55 55", $"Revolut MasterCard (UK)" },
            new List<string> () { "3B 6F 00 00 80 31 E0 6B 08 2A 05 02 DE 55 55 55 55 55 55", $"VISA Debit Card Issued by State Employees Credit Union of Maryland (Bank)" },
            new List<string> () { "3B 6F 00 00 80 31 E0 6B 08 2D 05 02 B8 55 55 55 55 55 55", $"pag seguro Brasil (Bank)" },
            new List<string> () { "3B 6F 00 00 80 31 E0 6B 08 2E 05 02 B9 55 55 55", $"CAIXA ECONOMICA (Bank)" },
            new List<string> () { "3B 6F 00 00 80 31 E0 6B 08 2E 05 02 B9 55 55 55 55 55 55", $"CAIXA (Bank)" },
            new List<string> () { "3B 6F 00 00 80 31 E0 6B 09 25 02 02 09 55 55 55 55 55 55", $"OCA Card - Master Card credit card (Bank)" },
            new List<string> () { "3B 6F 00 00 80 31 E0 6B 84 06 03 04 31 55 55 55 55 55 55", $"Multos Developer Sample" },
            new List<string> () { "3B 6F 00 00 80 31 E0 6B 84 06 0E 02 02 55 55 55 55 55 55", $"Multos Developer Sample" },
            new List<string> () { "3B 6F 00 00 80 31 E0 6B 84 20 05 02 39 55 55 55 55 55 55", $"Multos 14D (2-0-10) 64K Developer Card" },
            new List<string> () { "3B 6F 00 00 80 31 E0 6B 84 20 05 02 42 55 55 55 55 55 55", $"Multos 14Dc(6-0-13) 64K Dual-Interface Developer Card" },
            new List<string> () { "3B 6F 00 00 80 31 E0 6B 84 31 05 02 7A 55 55 55 55 55 55", $"36K MULTOS contact chip community developer card (Other)" },
            new List<string> () { "3B 6F 00 00 80 54 43 4F 4C 44 00 00 00 00 00 00 82 90 00", $"Valovis Bank Mastercard" },
            new List<string> () { "3B 6F 00 00 80 5A 08 03 03 00 00 00 01 56 64 F6 82 90 00", $"transport bus/tram \"atout.tag\" semitag grenoble" },
            new List<string> () { "3B 6F 00 00 80 5A 08 03 03 00 00 00 02 BB 26 7C 82 90 00", $"Twisto" },
            new List<string> () { "3B 6F 00 00 80 5A 08 03 03 00 00 00 02 BF 02 4A 82 92 00", $"ALSEO, the Alsacian Express Regional Train card (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 08 03 03 00 00 00 02 C8 83 CB 82 92 00", $"card for Bordeaux transport (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 08 03 03 00 00 00 C0 0F AF 04 82 92 00", $"Bordeaux Urban Transportation Card (NFC) (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 08 03 14 00 02 00 .. .. .. .. 82 90 00", $"Metro do Porto, public transport card of Oporto - Portugal (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 08 06 08 20 02 00 .. .. .. .. 82 90 00", $"Lisboa Viva, public transport card of Lisbon (Portugal)" },
            new List<string> () { "3B 6F 00 00 80 5A 08 06 08 20 02 00 10 00 3E DC 82 90 00", $"CTS (Compagnie des Transports Strasbourgeois) to hold transportation tickets" },
            new List<string> () { "3B 6F 00 00 80 5A 08 06 08 20 02 00 10 00 48 EA 82 90 00", $"french public transport card (www.cts-strasbourg.fr)" },
            new List<string> () { "3B 6F 00 00 80 5A 08 06 08 20 02 00 92 35 1E 52 82 90 00", $"Public transport card of Lisbon (www.carris.pt)" },
            new List<string> () { "3B 6F 00 00 80 5A 08 06 08 20 02 23 92 16 D1 BD 82 90 00", $"\"OPUS Card\" Montreal's transit system by oberthur cardsystems" },
            new List<string> () { "3B 6F 00 00 80 5A 08 06 08 20 02 23 92 1B 4B 59 82 90 00", $"\"OPUS Card\" Quebec's Bus system." },
            new List<string> () { "3B 6F 00 00 80 5A 08 06 08 20 02 2B 92 97 CF 7D 82 90 00", $"OPUS (Montreal transport card) (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 08 06 08 20 02 2B 92 98 A1 99 82 90 00", $"OPUS card for AMT - STM Montreal (subway - train and bus ticket) (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 08 06 08 20 02 2B 92 99 0F 84 82 90 00", $"OPUS (Montreal transport card) (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 08 06 08 20 02 2B 92 B1 AA DC 82 90 00", $"OPUS Card, Montreal, Quebec, Canada community transport (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 08 06 08 20 02 2B 92 B2 B6 4E 82 90 00", $"Small card reader from WatchData (model W1981-plus) to recharge public transport cards (metro or bus) from OPUS network in Quebec (Canada). (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 08 06 08 20 02 2B 92 B8 94 FC 82 90 00", $"Montreal OPUS card (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 08 06 08 20 02 2B 92 EF 41 EE 82 90 00", $"OPUS transit wallet (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 08 06 08 20 02 2B 92 F9 B6 7B 82 90 00", $"The OPUS card is a smart card on which you can charge all STM transit fares, with the exception of group fares, which are available on tickets only. OPUS cards are used by most transit authorities in the Greater Montréal area. (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 08 06 08 20 02 2B 93 12 98 45 82 90 00", $"OPUS card for Montreal, Quebec, Canada transit system, subscription-based, non-rechargeable (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 08 06 08 20 02 2B 93 19 C2 4F 82 90 00", $"OPUS, rechargeable contactless stored value smart card using the Calypso Standard and used by most of the public transit operators in the province of Quebec, Canada. (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 08 06 08 20 02 2B 93 34 D5 D3 82 90 00", $"Montreal Transport Board (STM) - Opus CARD (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 08 06 08 20 02 2B 93 39 E8 2B 82 90 00", $"OPUS is a rechargeable contactless stored value smart card using the Calypso Standard and is used by major public transit operators in Greater Montreal and Quebec City, Quebec, Canada. (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 08 06 08 20 02 2B 93 42 78 2A 82 90 00", $"OPUS card (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 08 06 08 20 02 2B 93 45 64 EC 82 90 00", $"OPUS Card (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 08 06 08 20 02 2B 93 46 A2 C5 82 90 00", $"Carte OPUS / OPUS Card - Transport Montréal, Laval, Longueuil, Québec (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 08 06 08 20 02 2B 93 49 A8 3F 82 90 00", $"Montreal OPUS Transportation Card for the STM, STL, RTM and RTL (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 08 06 08 20 12 23 C1 D9 5A 43 82 90 00", $"Transport card for the Quebec Province in Canada, namely the ARTM Transport Agency and others… (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 08 06 08 20 12 23 C1 E2 F6 C6 82 90 00", $"STM Opus Card - Montreal Transit Pay Card (Other)" },
            new List<string> () { "3B 6F 00 00 80 5A 08 06 08 20 12 23 C1 EA 7F 50 82 90 00", $"Montreal transport Opus Card (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 08 06 08 20 12 23 C1 EC E2 4B 82 90 00", $"STM (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 08 06 08 20 12 23 C2 02 79 5D 82 90 00", $"OPUS is card for storing public transit passes and tickets (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 08 06 08 20 12 23 C2 03 63 47 82 90 00", $"OPUS Card RTC Quebec's Bus system (Canada) (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 08 06 08 20 12 23 C2 04 D0 7F 82 90 00", $"OPUS Card (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 08 06 08 20 12 23 C2 10 E9 56 82 90 00", $"Montréal Public transport Card (OPUS) (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 08 06 08 20 12 23 C2 11 13 A6 82 90 00", $"OPUS (Montreal and Quebec transport card) (Transport) (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 08 06 08 20 12 23 C2 12 90 FD 82 90 00", $"OPUS Montreal Société des Transports de Montréal Metro and Bus card. (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 0A 01 01 20 03 11 03 DC B3 1B 82 90 00", $"Card Transport \"Lignes d'Azur\" of \"Métropole Nice Côte d'Azur\"" },
            new List<string> () { "3B 6F 00 00 80 5A 0A 01 01 20 03 11 93 61 D7 D7 82 90 00", $"Carte Técély (Réseau TCL: metro, tramway, bus et funiculaire de Lyon) (Idemia)" },
            new List<string> () { "3B 6F 00 00 80 5A 0A 01 02 20 03 11 .. .. .. .. 82 90 00", $"Card « Oùra ! » of region Rhône-Alpes, Calypso standard (TER, Transisère)" },
            new List<string> () { "3B 6F 00 00 80 5A 0A 07 06 20 04 01 02 94 95 D3 82 90 00", $"Rav-Kav Public Transport (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 0A 07 06 20 04 01 03 01 F4 1F 82 90 00", $"RAV KAV (israel) transportation card (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 0A 07 06 20 04 01 03 0B A9 45 82 90 00", $"Israeli Ravkav card (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 0A 07 06 20 04 01 03 96 7A 29 82 90 00", $"Rav-Kav transport card for Israel Ministry of Transport (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 0A 07 06 20 04 01 03 97 DB 3D 82 90 00", $"Israeli Ravkav card (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 0A 07 06 20 04 01 03 9A 40 7F 82 90 00", $"Israeli public transport card (\"RavKav\") (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 0A 07 06 20 04 01 03 AB B5 B9 82 90 00", $"Israeli transport card (Rav-Kav) (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 0A 07 06 20 04 01 03 AD 1A 73 82 90 00", $"Israeli public transport \"RavKav\" card (ASK Tango variant) (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 0A 07 06 20 04 01 03 B8 6E D6 82 90 00", $"Rav Kav (IL) (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 0A 07 06 20 04 01 03 B9 32 80 82 90 00", $"Rav-Kav (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 0A 07 06 20 04 01 04 4B A8 BA 82 90 00", $"Israeli Rav-Kav (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 0A 07 06 20 04 2B 10 5A 8F 94 82 90 00", $"Rav-Kav, Used by Israeli public transportation companies (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 0A 07 06 20 04 2B 77 E9 EB 9F 82 90 00", $"RavKav Israeli Public Transportation smart card (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 0A 07 06 20 04 2C 02 60 FB 72 82 90 00", $"RAV KAV - Israel's Ministry of Transport public transport smart card (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 0A 07 06 20 04 2C 02 7A F6 DE 82 90 00", $"Rav-Kav Israel (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 0A 07 06 20 04 2C 02 7C 3C 4C 82 90 00", $"Israeli Railraod Ravkav (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 0A 07 06 20 04 2C 03 17 11 06 82 90 00", $"Israeli Transport Card Rav-Kav (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 0A 07 06 20 04 2C 03 1B 89 9B 82 90 00", $"Israeli public transport \"RavKav\" card (ASK variant) (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 0A 07 06 20 04 2C 03 1C 11 2A 82 90 00", $"Peronalized RavKav (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 0A 07 06 20 04 2C 03 28 84 44 82 90 00", $"rav-kav (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 0A 07 06 20 04 2C 04 90 EF CB 82 90 00", $"Rav-Kav Israel (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 0A 07 06 20 04 2D C1 66 0B 73 82 90 00", $"Rav-Kav: Israel's Travel Card (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 0A 07 06 20 04 2D C1 69 51 7A 82 90 00", $"Card for bus (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 0A 07 06 20 04 2D C2 E8 E2 70 82 90 00", $"ravkav (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 01 02 20 12 21 03 34 65 77 82 90 00", $"ONYGO! pass" },
            new List<string> () { "3B 6F 00 00 80 5A 28 11 42 10 10 12 2B 26 0C D4 5A 82 90 00", $"French transport card Navigo (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 11 42 10 12 2B 03 79 1B B9 82 90 00", $"RATP Navigo Easy Paris France (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 11 42 10 12 2B 03 7A 89 AA 82 90 00", $"Île-de-France Mobilités (Navigo Easy) (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 11 42 10 12 2B 03 7A ED 59 82 90 00", $"Navigo Easy (Paris) (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 11 42 10 12 2B 23 A9 E2 29 82 90 00", $"Navigo(French transport) (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 11 42 10 12 2B 23 BD 87 EE 82 90 00", $"Navigo pass Calypso standard (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 11 42 10 12 2B 25 81 EB A5 82 90 00", $"Navigo Découverte card for Paris and suburbs transportation, no subscription required (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 11 42 10 12 2B 25 82 88 5F 82 90 00", $"Navigo Découverte (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 11 42 10 12 2B 26 .. .. .. 82 90 00", $"French \"Navigo\" transport card (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 11 42 10 12 2B 26 14 7C 55 82 90 00", $"Navigo (transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 11 42 10 12 2B 26 14 99 22 82 90 00", $"French \"Navigo\" NFC card (visually, new design of 2014, with purple/grey color theme, portrait orientation) (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 11 42 10 12 2B 26 15 5E E3 82 90 00", $"French \"Navigo\" transport card (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 11 42 10 12 2B 26 5A AD B0 82 90 00", $"Navigo card (from March 2014 onwards), to be used in Paris and its suburbs (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 11 42 10 12 2B 27 26 53 F8 82 90 00", $"New Navigo card - Paris Sub transport (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 11 42 10 12 2B 27 28 51 D4 82 90 00", $"Navigo, Paris and Isle of France transport card (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 11 42 10 12 2B 27 2A 8F E7 82 90 00", $"Navigo Découverte card, a rechargeable card for travel in Paris, France. (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 11 42 10 12 2B 27 32 83 08 82 90 00", $"Navigo Easy (Paris) (Transport) (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 11 42 10 12 2B 27 35 8F 16 82 90 00", $"French Navigo passcard to travel in Paris area using RATP & SNCF services (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 11 42 10 12 2B 27 40 6D 7A 82 90 00", $"French Navigo Card for Transport (RATP, SNCF) (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 11 42 10 12 2B 27 43 0C E1 82 90 00", $"French Navigo Card (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 11 42 10 12 2B 27 52 28 99 82 90 00", $"SNCF Navigo Card (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 11 42 10 12 2B 27 55 78 4A 82 90 00", $"French card navigo (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 11 42 10 12 2B 27 55 8E 85 82 90 00", $"Stif Navigo Pass (French Syndicate of Transport in Ile de France) (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 11 42 10 12 2B 27 5D CF 41 82 90 00", $"Pass navigo (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 11 42 10 12 2B 27 61 32 D6 82 90 00", $"Navigo (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 11 42 10 12 2B 27 64 E7 35 82 90 00", $"Navigo pass, Paris (France) transport network (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 11 42 10 12 2B 27 65 62 F7 82 90 00", $"French NAVIGO Card (simple Navigo model, not annual or Imagin'R) (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 11 42 10 12 2B 27 67 80 D9 82 90 00", $"Navigo (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 11 42 10 12 2B 27 6D 6B B5 82 90 00", $"Navigo (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 11 42 10 12 2B 27 77 EE D6 82 90 00", $"Navigo (Paris) - Gamalto SmarCard (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 11 42 10 12 2B 27 7A 7C 32 82 90 00", $"Navigo Pass used mainly on the french SNCF, Optile and RATP transit networks (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 11 42 10 12 2B 27 9B C4 F1 82 90 00", $"Navigo Liberté + (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 11 42 10 12 2B 27 9C 78 6C 82 90 00", $"Navigo Easy (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 11 42 10 12 2B 27 A1 48 7B 82 90 00", $"Navigo card using Calypso stantard (Other)(electronic_ticketing_system)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 11 42 10 12 2B 27 AE 59 B9 82 90 00", $"French \"Navigo\" transport card (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 11 42 10 12 2B 4C 09 31 0D 82 90 00", $"Pass Navigo personnalisé (Paris) (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 11 42 10 12 2B 4C 0E FA D0 82 90 00", $"Île-de-France Mobilités (Navigo Nominative) (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 13 02 10 12 2B 03 4B EB 8D 82 90 00", $"Korigo card transport for star company (France) (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 13 02 10 12 2B 03 CF 89 8A 82 90 00", $"Korrigo Card (Rennes Métropole bus network) (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 13 02 10 12 2B 03 D9 9C 6F 82 90 00", $"KorriGo (Brittany) transport card (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 13 02 10 12 2B 03 DA F6 2B 82 90 00", $"Transport card KorriGo (from 2018) for the region of brittany in France (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 13 02 10 12 2B 03 EF 54 00 82 90 00", $"Korrigo Ter French card for train travels (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 13 02 10 12 2B 03 F7 E4 32 82 90 00", $"KorriGo, smart transport card in France region Brittany (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 13 02 10 12 2B 03 F8 0B C3 82 90 00", $"Korrigo Card (Transport in Rennes Area in France ) (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 13 02 10 12 2B 75 00 55 9A 82 90 00", $"Contact card to handle personal travel tickets in the Britany area. Used by several travel operators like SNCF TER Bretagne, STAR in Rennes, BIBUS in Brest,.... (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 13 02 10 12 2B 75 02 1B 8A 82 90 00", $"KorriGo, smart transport card in France region Brittany (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 13 02 10 12 2B 75 03 FB 01 82 90 00", $"origo (France) (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 13 02 10 12 2B 92 92 E6 42 82 90 00", $"Transport card in côte d'or France (mobigo)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 13 02 10 12 2B 92 92 E8 29 82 90 00", $"French transport card of the city of Dijon and Côte d'or department. (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 13 02 10 12 2B 92 D6 63 FC 82 90 00", $"Card \"Korrigo\" region Bretagne, France, Bibus Brest Métropole public transport (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 13 02 10 12 2B C1 29 DC 7D 82 90 00", $"KorriGo card, french britanny travel card (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 28 13 02 10 12 2B C3 15 13 51 82 90 00", $"Korigo card transport for star company (France) (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 2C 06 08 10 10 05 92 E4 FF F0 82 90 00", $"Lisbon area transport card (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 2C 06 08 10 10 05 93 04 D6 6B 82 90 00", $"Lisboa VIVA - Lisbon public transport card (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 2C 06 08 10 10 05 93 09 24 D0 82 90 00", $"Portuguese Lisboa VIVA transport card (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 2C 06 08 10 10 05 93 16 21 3D 82 90 00", $"Portuguese Viva Card (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 2C 06 08 10 10 05 93 22 68 D0 82 90 00", $"Public transport card lisbon (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 2C 06 08 10 10 05 93 23 46 E2 82 90 00", $"Lisboa Viva (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 2C 06 08 10 10 05 93 23 7A 11 82 90 00", $"Portuguese Lisboa Viva Viagem Transport Card (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 2C 11 C3 10 10 05 7B 01 00 4B 82 90 00", $"French Military Circulation card (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 2C 11 C3 10 10 05 7B 0A 1D BA 82 90 00", $"French military discount on SNCF trains card (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 2C 11 C3 10 10 05 7B 12 0D 53 82 90 00", $"French military transport card (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 2C 23 C2 10 10 05 .. .. .. .. 82 90 00", $"MOBIB (reseau transport en commun Bruxelles, Belgique)" },
            new List<string> () { "3B 6F 00 00 80 5A 2C 23 C3 00 03 02 02 82 D3 9D 82 90 00", $"MOBIB Public Transport - De Lijn (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 2C 23 C3 00 03 02 02 84 94 EA 82 90 00", $"MOBIB card for DeLijn (public transport operator for the Flemish part of Belgium)" },
            new List<string> () { "3B 6F 00 00 80 5A 2C 23 C3 10 10 05 .. .. .. .. 82 90 00", $"NMBS/SNCB MOBIB Card (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 2C 23 C4 00 03 06 03 0F 02 BF 82 90 00", $"MOBIB card - De Lijn (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 2C 23 C4 00 03 06 03 95 24 59 82 90 00", $"MOBIB - De Lijn (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 2C 23 C4 10 10 05 71 13 AA 4F 82 90 00", $"NMBS National Belgian Railways MOBIB Card (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 2C 23 C4 10 10 05 71 20 9D 05 82 90 00", $"Gent schakelt slim. AustriaCard (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 2C 23 C4 10 10 05 71 20 BA 62 82 90 00", $"Belgian MOBIB public transport card (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 2C 23 C4 10 10 05 71 21 7A 3A 82 90 00", $"mobob (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 2C 23 C4 10 10 05 C0 22 4F 89 82 90 00", $"MoBIB card (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 2C 23 C4 10 10 05 C0 29 2C EE 82 90 00", $"MoBIB card (Transport) (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 2C 23 EA 00 03 02 02 85 24 CA 82 90 00", $"Pcard Interparking Mobib (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 2C 23 EA 00 03 05 02 AA E6 CE 82 90 00", $"MOBIB (TEC IT Easy) (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 2C 23 EA 00 03 05 03 9E 9C DB 82 90 00", $"Belgium TEC MOBIB card (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 2C 23 EA 00 03 05 03 BD 09 B2 82 90 00", $"TEC MoBIB Transportation Card (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 2C 23 EA 00 03 05 03 BF 9E 2B 82 90 00", $"MOBIB - TEC (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 2D 06 08 10 10 02 78 2B B4 A4 82 90 00", $"Lisboa Viva, Lisbon public transport card (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 2D 06 08 10 10 02 78 32 4D 6F 82 90 00", $"Lisboa Viva card, public transport card of Lisbon (Portugal) (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 2D 06 08 10 10 02 78 35 ED CE 82 90 00", $"Lisbon Transportation SmartCard (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 2D 06 08 10 10 02 78 48 BB CC 82 90 00", $"Lisbon Metro Monthly Student Pass (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 34 07 06 15 00 01 79 17 A7 E2 82 90 00", $"Rav-Kav multi-line travel ticket used in the public transportation system in Israel (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 3B 07 06 15 01 01 79 3E 79 7B 82 90 00", $"Rav Kav (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 3B 07 06 15 01 02 79 53 72 11 82 90 00", $"Israeli public transport card (\"RavKav\") (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 3B 07 06 15 01 02 79 56 C5 F4 82 90 00", $"RAVKAV - Israel dual interface transport card (Calypso standard) (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 3B 07 06 15 01 02 79 C3 C3 31 82 90 00", $"Rav-Kav Israel (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 3C 06 08 14 01 01 C3 80 5E 38 82 90 00", $"Lisboa VIVA - Lisbon public transport card (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 3C 11 42 14 10 01 27 4A C8 90 82 90 00", $"Gemalto Celego G1 (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 3C 11 42 14 10 01 27 A4 6D 02 82 90 00", $"Navigo découverte Paris (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 3C 11 42 14 10 01 27 B3 C8 1B 82 90 00", $"Transport card for Paris (France) and its region. Market name is Navigo (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 3C 11 42 14 10 01 C1 29 54 D4 82 90 00", $"Public transportation card (navigo) for Paris and Ile-de-France région, France (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 3C 11 42 14 10 01 C1 40 E8 19 82 90 00", $"France Ile de France Public Transport Card (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 3C 11 42 14 10 01 C1 52 3E 9D 82 90 00", $"navigo (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 3C 11 42 14 10 01 C1 7B 89 D9 82 90 00", $"Navigo Easy (Paris Calypso transport card) (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 3C 11 42 14 10 01 C1 7B C3 D4 82 90 00", $"Navigo easy -- French (Paris region) transport card (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 3C 11 42 14 10 01 C1 7B C9 93 82 90 00", $"Navigo Easy (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 3C 11 42 14 10 01 C1 7D A8 CA 82 90 00", $"Navigo Easy (France) transport card (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 3C 11 42 14 10 01 C1 85 D4 7B 82 90 00", $"Navigo Liberté+ -- French (Paris region) transport card (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 3C 11 42 14 10 01 C2 BF 7B 46 82 90 00", $"Navigo RATP (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 3C 13 30 14 10 01 C3 56 83 97 82 90 00", $"\"oura\" card for leman express and ter sncf rhone-alpes (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 3C 23 C4 14 10 01 C0 2E F7 F8 82 90 00", $"MOBIB basic Brussels (with NFC) (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 3C 23 C4 14 10 01 C0 2E FA 97 82 90 00", $"Brussels STIB MOBIB Classic (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 3C 23 C4 14 10 01 C0 2F DE FA 82 90 00", $"MOBIB public transport card (Belgium); contacted IC (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 3C 23 C4 14 10 01 C0 32 19 CF 82 90 00", $"Personalized MOBIB card (Brussels transports) (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 3C 23 C4 14 10 01 C0 D9 66 F5 82 90 00", $"MOBIB (reseau transport en commun Bruxelles, Belgique){Environment.NewLine}Calypso application similar to French NAVIGO MOBIB (Transport) (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 3C 23 C4 14 10 01 C0 E7 D7 52 82 90 00", $"MoBIB (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 3C 23 C4 14 10 01 C1 03 55 46 82 90 00", $"MoBIB: Belgian transport card (NFC) (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 3C 23 C4 14 10 01 C1 07 57 58 82 90 00", $"MOBIB Basic (public transport card for Brussels, Belgium) (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 3C 23 C4 14 10 01 C1 08 A3 C1 82 90 00", $"MIVB/STIB MOBIB Card (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 3C 23 C4 14 10 01 C1 0A E1 39 82 90 00", $"STIB/MIVB Mobib card (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 3D 07 06 15 01 01 79 2C B6 36 82 90 00", $"RavKav (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 3D 23 C4 15 01 02 79 37 D7 AE 82 90 00", $"MOBIB - Brussels (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 3D 23 C4 15 01 02 79 49 78 9C 82 90 00", $"MOBIB basic (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 3D 23 C4 15 01 02 79 74 8A 25 82 90 00", $"Mobib (Brussels transport card) for the STIB-MIVB network (Transport)" },
            new List<string> () { "3B 6F 00 00 80 5A 43 4F 4C 44 00 00 00 00 00 00 82 90 00", $"LBB Berlin, MasterCard (ADAC branding?)" },
            new List<string> () { "3B 6F 00 00 80 5A 48 80 C1 20 50 01 AE C0 02 95 82 90 00", $"Calypso SAM C1 (Transport)" },
            new List<string> () { "3B 6F 00 00 80 66 45 46 01 38 18 03 53 02 31 10 82 90 00", $"Fábrica Nacional de Moneda y Timbre FNMT WG10" },
            new List<string> () { "3B 6F 00 00 80 66 45 46 01 38 18 03 53 02 31 24 82 90 00", $"Electronic purse of the Universidad Politecnica of Madrid (provided by Banco Santander)" },
            new List<string> () { "3B 6F 00 00 80 66 45 46 01 38 18 03 53 07 61 04 82 90 00", $"Vitrasa Card municipal city card for Vigo, Spain. Electronic wallet for paying bus transportation." },
            new List<string> () { "3B 6F 00 00 80 66 57 59 01 00 08 03 53 07 61 04 82 90 00", $"Green card of City council of Vigo (public transport)" },
            new List<string> () { "3B 6F 00 00 80 66 57 59 01 00 08 03 53 07 61 14 82 90 00", $"E-money Vitrasa Card - Public transport in Vigo" },
            new List<string> () { "3B 6F 00 00 80 66 A2 03 02 02 3D 07 53 02 31 10 82 90 00", $"Electronic purse of the Universidad Politecnica of Madrid (provided by Banco Santander)" },
            new List<string> () { "3B 6F 00 00 80 66 B0 07 01 01 07 .. .. .. .. .. .. 90 00", $"Gemalto Santander Optelio TUI R7 with WG10 customized using Contact interface" },
            new List<string> () { "3B 6F 00 00 80 66 B0 07 01 01 07 07 53 02 31 10 82 90 00", $"Banco Santander TUI/USC R7 - Gemalto Optelio/Desineo D72 (JavaCard) with WG10 (JavaCard)" },
            new List<string> () { "3B 6F 00 00 80 66 B0 07 01 01 07 07 53 02 31 24 82 90 00", $"Banco Santander TUI/USC R7 - Gemalto Optelio/Desineo D72 (JavaCard) with WG10 and Maestro (JavaCard)" },
            new List<string> () { "3B 6F 00 00 80 66 B0 07 01 01 77 .. .. .. .. .. .. 90 00", $"Other Optelio Card (Santander)" },
            new List<string> () { "3B 6F 00 00 80 66 B0 07 01 01 77 07 53 02 31 10 82 90 00", $"University ID card (issued by Banco Santander Central Hispano){Environment.NewLine}.{Environment.NewLine}Universidad Nacional de Educación a Distancia (UNED, Spain){Environment.NewLine}.{Environment.NewLine}Universitat Politècnica de Catalunya (UPC.edu){Environment.NewLine}.{Environment.NewLine}Universitat Ramon Llull (URL)" },
            new List<string> () { "3B 6F 00 00 80 66 B0 07 01 01 77 07 53 02 31 24 82 90 00", $"Santander 4B Maestro{Environment.NewLine}University of Santiago de Compostela. Spain{Environment.NewLine}Polytechnical University of Madrid, Spain" },
            new List<string> () { "3B 6F 00 01 80 31 E0 6B 04 06 05 02 11 55 55 55 55 55 55", $"American Express \"Entourage\" credit card issued by CIBC" },
            new List<string> () { "3B 6F 00 FF 00 56 72 75 54 6F 6B 6E 73 30 20 00 00 90 00", $"Aktiv Rutoken S" },
            new List<string> () { "3B 6F 00 FF 52 53 41 53 65 63 75 72 49 44 28 52 29 31 30", $"RSA SecurID SID800 token" },
            new List<string> () { "3B 6F 00 FF 53 46 53 45 2D 43 58 33 32 32 2D 56 18 02 02", $"Giesecke & Devrient SmartCafe Expert 2.0" },
            new List<string> () { "3B 74 18 00 00 73 66 74 65", $"SafeSign from A.E.T. Europe B.V.{Environment.NewLine}Manufactured by Giesecke & Devrient (G&D)" },
            new List<string> () { "3B 75 11 00 00 24 C2 01 90 00", $"Alladin Smartcard CP1 (Other)" },
            new List<string> () { "3B 75 12 00 00 29 05 01 04 01", $"CAC Cryptographic Service Provider{Environment.NewLine}Axalto Cyberflex Access 64K V1 SM 4.1" },
            new List<string> () { "3B 75 13 00 00 43 09 EA 90 00", $"Vitale 2 (french health card)" },
            new List<string> () { "3B 75 13 00 00 44 09 EA 90 00", $"Carte Vitale 2 (Nouvelle version avec photo)" },
            new List<string> () { "3B 75 13 00 00 45 09 EA 90 00", $"Carte Vitale 2 (French health card)" },
            new List<string> () { "3B 75 13 00 00 45 09 FA 90 00", $"Carte VItate (HealthCare)" },
            new List<string> () { "3B 75 13 00 00 46 09 EA 90 00", $"Health Care card" },
            new List<string> () { "3B 75 13 00 00 47 09 EA 90 00", $"Carte Vitale (HealthCare)" },
            new List<string> () { "3B 75 13 00 00 48 09 EA 90 00", $"Carte Vitale (HealthCare)" },
            new List<string> () { "3B 75 13 00 00 49 09 EA 90 00", $"Vitale Card French Healthcare (HealthCare)" },
            new List<string> () { "3B 75 13 00 00 9C 02 02 01 02", $"Cyberflex Access 32k v2" },
            new List<string> () { "3B 76 11 00 00 00 9C 11 01 02 02", $"Schlumberger Cyberflex Access 32K" },
            new List<string> () { "3B 76 11 00 00 00 9C 11 01 02 03", $"RSA SecureID 5100" },
            new List<string> () { "3B 76 12 00 00 00 9C 11 01 03 03", $"Precise BioMatch (TM) JavaCard (Schlumberger){Environment.NewLine}www.precisebiometrics.com" },
            new List<string> () { "3B 76 13 00 00 43 68 69 70 31 37", $"PostFinance Switzerland Gemalto SP U1128785A 1017 (Bank)" },
            new List<string> () { "3B 76 13 00 00 80 62 07 41 81 80", $"Generic mass produced Motorola smart card" },
            new List<string> () { "3B 76 13 00 00 80 62 07 41 81 81", $"TransLink card (discontinued San Francisco Bay Area transit card)" },
            new List<string> () { "3B 76 98 00 00 00 9C 11 01 01 02", $"CyberFlex Access 32" },
            new List<string> () { "3B 77 18 00 00 4B 41 53 41 4B 49 44", $"Identification Kazakhstan Republic (passport)" },
            new List<string> () { "3B 78 12 00 00 47 C4 03 00 8F F1 90 00", $"Sattelite bg 23.5 East cryptoworks card" },
            new List<string> () { "3B 78 12 00 00 54 C4 01 07 8F F1 90 00", $"XtraMusic listening card (Pay TV)" },
            new List<string> () { "3B 78 12 00 00 54 C4 02 04 FF FF 6F 04", $"UPC Direct Satellite TV Card (Pay TV)" },
            new List<string> () { "3B 78 12 00 00 54 C4 02 07 8F F1 90 00", $"Polish WIZJA TV pay-tv card for satellite receivers (Pay TV)" },
            new List<string> () { "3B 78 12 00 00 54 C4 03 00 8F F1 90 00", $"Skylink irdeto from Towercom a.s. company{Environment.NewLine}irdeto card for the ORF (Austrian national public television) HD channels" },
            new List<string> () { "3B 78 12 00 00 65 C4 05 00 8F F1 90 00", $"Digitürk Cryptoworks" },
            new List<string> () { "3B 78 12 00 00 65 C4 05 05 8F F1 90 00", $"Turkie Digiturk Cryptoworks" },
            new List<string> () { "3B 78 12 00 00 65 C4 05 FF 8F F1 90 00", $"CRYPTOWORKS , CAID:0D22 ISSUER:TIVIDI id:04, bios: v5, pin: unknown, mfid:3F6A (Pay TV)" },
            new List<string> () { "3B 78 12 00 00 A0 C4 03 06 8F F1 90 00", $"ORF Digital (Irdeto/Cryptoworks) (pay tv)" },
            new List<string> () { "3B 78 12 00 00 A0 C4 03 07 8F F1 90 00", $"IRDETO-Smartcard for crytoworks for austrian television (ORF), DVB-s" },
            new List<string> () { "3B 78 12 00 00 A0 C4 06 00 8F F1 90 00", $"Cryptoworks/Nagravision decoding card" },
            new List<string> () { "3B 78 12 00 00 A0 C4 06 05 8F F1 90 00", $"Satellite cardu, provider: UPC DTH, CAID: 0D02" },
            new List<string> () { "3B 78 12 00 00 A0 C4 06 06 8F F1 90 00", $"Skylink old card cryptoworks 0d03 (Pay TV)" },
            new List<string> () { "3B 78 12 00 00 A0 C4 06 07 8F F1 90 00", $"Skylink CZ/SK - Cryptoworks" },
            new List<string> () { "3B 78 13 00 00 00 73 C8 40 10 00 90 00", $"credit/debit card from issued by Finnish credit authority Luottokunta Oy" },
            new List<string> () { "3B 78 13 00 00 43 43 31 69 AA 20 00 00", $"PostFinance debit card (Bank)" },
            new List<string> () { "3B 78 13 00 00 72 75 74 6F 6B 65 6E 6D", $"Aktiv Rutoken Micron" },
            new List<string> () { "3B 78 14 00 00 00 73 C8 40 00 00", $"e-tazkira (eID)" },
            new List<string> () { "3B 78 18 00 00 00 73 C8 01 40 00 90 00", $"The Kyrgyz Republic eID (eID)" },
            new List<string> () { "3B 78 18 00 00 00 73 C8 40 00 00 00 00 90 00", $"VERISOFT REWARDO LOYALTY CARD and CUSTOM PERSONALIZATION PROJECTS FOR EXTERNAL ENTITIES (Loyalty)" },
            new List<string> () { "3B 78 18 00 00 00 73 C8 40 13 00 90 00", $"Mastercard (Bank)" },
            new List<string> () { "3B 78 18 00 00 54 48 20 4E 49 44 20 3.", $"Thailand National ID (eID)" },
            new List<string> () { "3B 78 18 00 01 00 00 00 00 C3 1E 69 19", $"Storage for passwords (Bank)" },
            new List<string> () { "3B 78 18 00 FF 00 73 C8 40 00 00 90 00", $"NAB Visa Debit - Contact I/F (Bank)" },
            new List<string> () { "3B 78 96 00 00 00 73 C8 40 00 00 90 00", $"SAM card for acquirer module by lanit.ru (Bank)" },
            new List<string> () { "3B 78 96 00 00 53 43 06 60 01 07 90 00", $"Bank of America Travel Rewards Credit Card (Bank)" },
            new List<string> () { "3B 78 96 00 00 53 43 06 62 01 07 90 00", $"ATM Card (Bank)" },
            new List<string> () { "3B 78 96 00 00 81 00 03 50 01 07 90 00", $"RMA BMCE BANK CARD (Bank)" },
            new List<string> () { "3B 79 11 00 00 80 54 43 4F 4C 44 82 90 00", $"amazon.de / VISA / LBB Debit Card (Bank)" },
            new List<string> () { "3B 79 13 00 00 80 64 16 03 01 83 82 90 00", $"Raiffeisen VPay Debit Card (Bank)" },
            new List<string> () { "3B 79 13 00 00 80 64 16 03 01 85 82 90 00", $"UBS Vpay Debit card (Bank)" },
            new List<string> () { "3B 79 18 00 00 42 72 61 7A 49 44 65 61 6C", $"Brazilian digital certificate card (eID)" },
            new List<string> () { "3B 79 18 00 00 53 46 2D 34 43 43 2D 30 31", $"SmartCafe Expert 3.2 144K Dual interface card supports specifications ISO 14443A T=CL and ISO 7816 T=1/0. (PKI)" },
            new List<string> () { "3B 79 18 00 00 54 48 20 4E 49 44 20 31 30", $"Thai National ID Card (eID)" },
            new List<string> () { "3B 79 18 00 00 80 54 43 4F 4C 44 82 90 00", $"LBB VISA Card" },
            new List<string> () { "3B 79 18 00 00 80 63 4B 56 02 83 07 90 00", $"Pay charge of South Korean Highway Tollgate, It named hi-pass. This card is sales by 'SM hiplus', and card name is 'Greencar Postpaid hi-pass Card'. In this name, 'Greencar' means South Korea's Car Sharing Service. This card from Rented car. (Transport)" },
            new List<string> () { "3B 79 18 00 00 80 63 55 50 01 83 07 90 00", $"TEST SAM Card (espark) (Other)" },
            new List<string> () { "3B 79 18 00 00 80 63 55 56 12 83 07 90 00", $"'hi-pass+ Prepaid hi-pass Card' pay charge of South Korean Highway Tollgate. Sold by 'SM hiplus' (Transport)" },
            new List<string> () { "3B 79 94 00 00 59 01 01 0E 01 6B 01 02 A9", $"Vending machine payment card ('Necta' brand)" },
            new List<string> () { "3B 79 94 00 00 EB 03 01 01 02 70 01 02 A9", $"Sodexo - Spanish vending machines (Other)" },
            new List<string> () { "3B 79 94 00 00 F7 04 01 01 03 80 01 02 A9", $"Pelican Rouge, vending machine (Other)" },
            new List<string> () { "3B 79 95 00 00 54 45 4C 45 4D 10 21 10 10", $"Israeli Identity Card (eID)" },
            new List<string> () { "3B 79 96 00 00 20 01 01 06 01 00 01 00 E9", $"Casino (Other)" },
            new List<string> () { "3B 79 96 00 00 54 48 20 4E 49 44 20 31 3.", $"Thai National ID Card (eID)" },
            new List<string> () { "3B 79 98 00 00 50 01 01 04 01 00 01 01 A9", $"Gemalto PayFlex used in Aristocrat System 7000 Casino Management System (South Africa only)" },
            new List<string> () { "3B 79 98 00 00 EB 03 01 00 00 70 01 01 A9", $"Casino Rio Patras, Greece" },
            new List<string> () { "3B 7A .. 00 00 80 65 A2 .. .. .. .. 72 D6 ..", $"IDClassic 3XX Cards (with MPCOS Applet)" },
            new List<string> () { "3B 7A 11 00 00 48 44 32 2E 30 34 6F FF 90 00", $"User Smartcard provided with the Hiddn Crypto Adapter (www.hiddn.no)" },
            new List<string> () { "3B 7A 11 00 02 48 4F 53 54 06 03 19 02 90 00", $"Swedish bankcard with Mastercard from ICA-banken" },
            new List<string> () { "3B 7A 13 00 00 00 09 A5 05 01 00 B7 01 A6 01", $"\"cleyris\" authentication card. monpass.santé from Mutuelle Générale" },
            new List<string> () { "3B 7A 13 00 00 09 44 31 31 43 52 02 00 25 C3", $"Feitian D11CR 2016 (JavaCard)" },
            new List<string> () { "3B 7A 13 00 00 72 75 74 6F 6B 65 6E 6D 73 63", $"Aktiv Rutoken Mikron SC" },
            new List<string> () { "3B 7A 18 00 00 00 48 79 70 73 49 44 20 53 33", $"Certinomis card (eID)" },
            new List<string> () { "3B 7A 18 00 00 73 66 74 65 20 63 64 31 34 34", $"Republic Slovenia e-Gov, Ministry of Public Administration{Environment.NewLine}SIGOV-CA, Slovenian Governmental Certification Authority{Environment.NewLine}Giesecke & Devrient (PIV Endpoint) G&D Sm@rtCafe Expert v3.2" },
            new List<string> () { "3B 7A 18 00 00 73 66 74 65 2D 63 64 30 38 30", $"HYPOnet online banking card / Croatia" },
            new List<string> () { "3B 7A 18 00 FF 4A 43 4F 50 32 31 56 32 33 31", $"JCOP21 18K" },
            new List<string> () { "3B 7A 94 00 00 80 65 A2 01 01 01 3D 72 D6 41", $"Personal Identity card (passport)" },
            new List<string> () { "3B 7A 94 00 00 80 65 A2 01 01 01 3D 72 D6 43", $"Gemplus GemXpresso Pro R3 E32 PK" },
            new List<string> () { "3B 7A 95 00 00 80 65 A2 01 31 01 3D 72 D6 41", $"Emirates Identification authority UAE card (eID)" },
            new List<string> () { "3B 7A 96 00 00 80 65 A2 01 01 01 3D 72 D6 43", $"AGH University of Science and Technology (Poland) - Student Identity Card (ELS) (eID){Environment.NewLine}Warsaw University of Technology (Poland) (eID)" },
            new List<string> () { "3B 7A 96 00 00 80 65 A2 01 20 01 00 30 3D 72 D6 41", $"Oman eID (eID)" },
            new List<string> () { "3B 7A 96 00 00 80 65 A2 01 20 01 3D 72 D6 41", $"Oman eID (eID)" },
            new List<string> () { "3B 7A 97 00 00 80 65 B0 85 20 04 02 72 D6 4.", $"OMAN EID CARD (eID)" },
            new List<string> () { "3B 7B .. 00 00 80 62 0. 51 56 46 69 6E 45 49 44", $"Setec SetCOS 5.1.0" },
            new List<string> () { "3B 7B .. 00 00 80 65 B0 83 .. .. .. 83 00 90 00", $"IDClassic 3XX Cards (without MPCOS Applet - FIPS)" },
            new List<string> () { "3B 7B 11 00 00 31 FE 45 43 6F 6D 62 4F 53 20 00", $"Debit card emmited by Société Générale Morocco (Bank)" },
            new List<string> () { "3B 7B 18 00 00 00 31 C0 64 77 E3 03 00 82 90 00", $"Oberthur Cosmopolic 64K v5.2 D" },
            new List<string> () { "3B 7B 18 00 00 00 31 C0 64 77 E9 10 00 01 90 00", $"Oberthur Card Systems: Cosmo 64 RSA V5.4 (ISK Key Set: 404142 .. 4E4F)" },
            new List<string> () { "3B 7B 18 00 00 00 31 C0 64 90 E3 11 00 82 90 00", $"Oberthur Card (eID)" },
            new List<string> () { "3B 7B 18 00 00 00 31 C0 64 C6 FC 10 00 07 90 00", $"Sberbank of the RUSSIAN federation" },
            new List<string> () { "3B 7B 18 00 00 00 31 E8 54 27 E6 00 00 01 90 00", $"Oberthur ID-One COSMO 64k v.5" },
            new List<string> () { "3B 7B 18 00 00 80 62 01 54 56 46 69 6E 45 49 44", $"FineID identity card for organizations" },
            new List<string> () { "3B 7B 94 00 00 80 62 1[12] 51 56 46 69 6E 45 49 44", $"Finnish Electronic ID card (fineid card www.fineid.fi)" },
            new List<string> () { "3B 7B 94 00 00 80 65 52 16 07 86 53 83 00 90 00", $"Truemove H Thailand (Telecommunication)" },
            new List<string> () { "3B 7B 94 00 00 80 65 B0 83 01 0[13] 74 83 00 90 00", $"Gemplus GemXpresso Pro R3 (E64 PK)" },
            new List<string> () { "3B 7B 95 00 00 80 65 B0 83 01 04 74 83 00 90 00", $"Gemplus GemXpresso Pro 64K R3 FIPS v2" },
            new List<string> () { "3B 7B 96 00 00 47 50 00 3A 06 01 41 20 07 90 00", $"Discover Card (Other)" },
            new List<string> () { "3B 7C 13 00 00 80 64 11 34 01 48 73 F7 41 C0 81 07", $"universal electronic card UEC Rissa (eID)" },
            new List<string> () { "3B 7C 13 00 00 80 64 11 65 01 90 73 00 00 00 81 07", $"Universal Electronic Card (UEC Russia) (eID)" },
            new List<string> () { "3B 7C 18 00 00 43 52 45 53 43 45 4E 44 4F 38 30 30", $"HID Global Crescendo C800 (PKI)" },
            new List<string> () { "3B 7C 18 00 00 86 88 00 00 01 B3 F4 20 55 01 81 B3", $"smart (Telecommunication)" },
            new List<string> () { "3B 7C 94 00 00 50 52 4F 47 45 58 49 41 43 53 50 32", $"mutual health Martinique (UFR PASS+) (HealthCare)" },
            new List<string> () { "3B 7C 95 00 00 45 53 4D 41 52 54 47 4F 53 54 31 30", $"ESMART Token GOST (PKI)" },
            new List<string> () { "3B 7D .. 00 00 80 31 80 65 B0 .. .. .. .. 83 .. 90 00", $"IDClassic 3XX / Classic TPC (IXS, IS, IS V2, IS CC, IM, IM CC, IM CC V3) / MultiApp ID Cards" },
            new List<string> () { "3B 7D 11 00 00 00 31 80 71 8E 64 52 D9 01 00 82 90 00", $"Oberthur Galactic V2" },
            new List<string> () { "3B 7D 11 00 00 00 31 80 71 8E 64 77 E3 01 00 82 90 00", $"Oberthur Cosmo 64k RSA v5" },
            new List<string> () { "3B 7D 11 00 00 00 31 80 71 8E 64 77 E3 02 00 82 90 00", $"Oberthur 64k v5/2.2.0" },
            new List<string> () { "3B 7D 11 00 00 00 31 80 71 8E 64 86 D6 01 00 81 90 00", $"DOD-CAC" },
            new List<string> () { "3B 7D 11 00 00 00 31 80 71 8E 64 86 D6 02 00 82 90 00", $"Oberthur Card Systems (OCS), Galactic v1 32K, Original Pilot CAC, V1 Applets" },
            new List<string> () { "3B 7D 13 00 00 4D 44 57 2D 49 41 53 2D 43 41 52 44 32", $"IAS (Identification, Authentication, and electronic Signature) Premium, profil DGME from Sagem" },
            new List<string> () { "3B 7D 14 00 02 80 57 59 50 53 49 44 30 34 83 6F 90 00", $"IDEMIA ypsID S2 (PKI)" },
            new List<string> () { "3B 7D 18 00 00 00 31 80 71 8E 64 77 E3 01 00 82 90 00", $"Oberthur 64k v4/2.1.1" },
            new List<string> () { "3B 7D 18 00 00 00 31 80 71 8E 64 77 E3 02 00 82 90 00", $"Smart Card for identity Patient (eID)" },
            new List<string> () { "3B 7D 18 00 00 00 48 79 70 73 49 44 20 53 33 07 90 00", $"Safran Morpho YpsID S3" },
            new List<string> () { "3B 7D 18 00 02 80 57 59 50 53 49 44 30 33 83 7F 90 00", $"Sagem YpsID s2 (SafeSign){Environment.NewLine}Brazilian \"e-CNPJ\" card, issued by Certisign (Safesign)" },
            new List<string> () { "3B 7D 18 00 02 80 57 59 50 53 49 44 30 34 83 7F 90 00", $"Morpho e-CPF YpsID S2-11/11 (PKI)" },
            new List<string> () { "3B 7D 94 00 00 55 55 53 0A 74 86 93 0B 24 7C 4D 54 68", $"SIM from sysmocom sysmoSIM-GR2" },
            new List<string> () { "3B 7D 94 00 00 57 44 29 08 30 86 93 07 05 65 18 2B 56", $"Canal Digitaal (Pay TV)" },
            new List<string> () { "3B 7D 94 00 00 57 44 29 5A 21 86 93 03 32 EF 17 46 07", $"Chevrolet Club Card (Loyalty)" },
            new List<string> () { "3B 7D 94 00 00 57 44 29 61 50 86 93 03 51 46 25 01 DC", $"Sodexo Meal Card (Other)" },
            new List<string> () { "3B 7D 94 00 00 57 44 53 05 54 86 93 00 15 6A 5F 13 78", $"Idea Indian GSM operator SIM" },
            new List<string> () { "3B 7D 94 00 00 57 44 53 24 65 86 93 02 05 81 74 10 57", $"kyivstar (Telecommunication)" },
            new List<string> () { "3B 7D 94 00 00 57 44 53 24 65 86 93 02 10 B7 25 12 97", $"Kyivstar (Telecommunication)" },
            new List<string> () { "3B 7D 94 00 00 57 44 53 63 96 86 93 00 9D F7 10 00 9D", $"China Mobile SIM card" },
            new List<string> () { "3B 7D 94 00 00 57 44 53 72 FD 86 93 11 01 06 75 5B 0F", $"China Telecom UIM 64K" },
            new List<string> () { "3B 7D 94 00 00 57 44 53 96 FA 86 93 03 B7 BF BF 5F 63", $"Airtel India SIM" },
            new List<string> () { "3B 7D 94 00 00 57 44 53 99 64 86 93 12 03 00 00 63 46", $"Dtac (Telecommunication)" },
            new List<string> () { "3B 7D 94 00 00 80 31 80 65 B0 83 01 01 90 83 00 90 00", $"GemSafeXpresso 16k R3.2" },
            new List<string> () { "3B 7D 94 00 00 80 31 80 65 B0 83 01 02 90 83 00 90 00", $"Gem e-Seal{Environment.NewLine}(GemSafeXpresso 32k R3.2){Environment.NewLine}Gemalto Classic TPC - IS" },
            new List<string> () { "3B 7D 94 00 00 80 31 80 65 B0 83 02 04 7E 83 00 90 00", $"GXP Pro R3.2 64K, GemSafe applet MPCOS v1.11{Environment.NewLine}card issued by Czech National Bank{Environment.NewLine}dual card: chip used for electronic certificates{Environment.NewLine}(czech commercial bank use such card to sign money transfer orders sent to national clearing central)" },
            new List<string> () { "3B 7D 94 00 00 80 31 80 65 B0 83 11 00 AC 83 00 90 00", $"GemCombiXpresso R4 72K" },
            new List<string> () { "3B 7D 94 00 00 80 31 80 65 B0 83 11 00 C8 83 00 90 00", $"personal identity card (ID card) of Republic of Lithuania{Environment.NewLine}LuxTrust card" },
            new List<string> () { "3B 7D 94 00 00 80 31 80 65 B0 83 11 40 AC 83 00 90 00", $"GXP4 E72PK Applet V1 T=0 (PKI)" },
            new List<string> () { "3B 7D 94 00 00 80 31 80 65 B0 83 11 48 C8 83 00 90 00", $"Online banking" },
            new List<string> () { "3B 7D 94 00 00 80 31 80 65 B0 83 11 C0 A9 83 00 90 00", $"GemXpresso R4 72K{Environment.NewLine}National ID card of Republic of Lithuania (2007-2012)" },
            new List<string> () { "3B 7D 95 00 00 80 31 80 65 B0 83 02 04 7E 83 00 90 00", $"Gemalto's Classic TPC HM CC Mifare 1K White PVC{Environment.NewLine}(Old name GemSafeXpresso 64K)" },
            new List<string> () { "3B 7D 95 00 00 80 31 80 65 B0 83 11 .. .. 83 00 90 00", $"Portuguese ID Card (eID)" },
            new List<string> () { "3B 7D 96 00 00 80 31 80 65 B0 83 02 01 F3 83 00 90 00", $"Gemalto IDClassic 340" },
            new List<string> () { "3B 7D 96 00 00 80 31 80 65 B0 83 11 00 C8 83 00 90 00", $"GEMALTO Clasic TPC IM CC" },
            new List<string> () { "3B 7D 96 00 00 80 31 80 65 B0 83 11 11 AC 83 00 90 00", $"GEMALTO WM GX4 72 DHS TSA" },
            new List<string> () { "3B 7D 96 00 00 80 31 80 65 B0 83 11 11 E5 83 00 90 00", $"Gemalto TOP DL v2 StdR{Environment.NewLine}eCPF (Cadastro de Pessoas Físicas) from Imprensa Oficial do Brasil{Environment.NewLine}Identidade digital (e-CPF) from Caixa{Environment.NewLine}Ingenico Sign/Kit Telium TETRA (Developer kit signature card){Environment.NewLine}Brazilian \"e-CNPJ\" card, issued by Certisign (Safesign)" },
            new List<string> () { "3B 7D 96 00 00 80 31 80 65 B0 83 11 13 AC 83 00 90 00", $"CAC card (GEMALTO GCX4 72K DI)" },
            new List<string> () { "3B 7D 96 00 00 80 31 80 65 B0 83 11 17 D6 83 00 90 00", $"DoD CAC card issued Jan 14, 2010{Environment.NewLine}GEMALTO TOP DL GX4 144K{Environment.NewLine}Geneva Conventions Identification Card" },
            new List<string> () { "3B 7D 96 00 00 80 31 80 65 B0 83 11 17 E5 83 00 90 00", $"Gemalto IDPrime PIV Card2.0 (eID)" },
            new List<string> () { "3B 7D 96 00 00 80 31 80 65 B0 83 11 40 AC 83 00 90 00", $"GemXpresso R4 64k" },
            new List<string> () { "3B 7D 96 00 00 80 31 80 65 B0 83 11 40 C8 83 00 90 00", $"ING BusinessOnLine Bank eToken / Poland{Environment.NewLine}Gemalto Classic TPC - IM{Environment.NewLine}Iran Driving License ID card (eID)" },
            new List<string> () { "3B 7D 96 00 00 80 31 80 65 B0 83 11 48 C8 83 00 90 00", $"Gemalto GemSafe V1" },
            new List<string> () { "3B 7D 96 00 00 80 31 80 65 B0 83 11 C0 A9 83 00 90 00", $"Gemplus X-Presso Pro 64k" },
            new List<string> () { "3B 7D 96 00 00 80 31 80 65 B0 83 11 C0 C8 83 00 90 00", $"TOP IM GX4 from Gemalto (was GemXpresso R4){Environment.NewLine}Java Card 2.2.1{Environment.NewLine}Global Platform 2.1.1 (amendment A)" },
            new List<string> () { "3B 7D 96 00 00 80 31 80 65 B0 83 11 D0 A9 83 00 90 00", $"GemSafe V2 (2.04, GemP15-1){Environment.NewLine}Gemplus GemXpresso Pro R3 E32PK{Environment.NewLine}Gemalto TOP IM GX4" },
            new List<string> () { "3B 7D 96 00 00 80 31 80 65 B0 84 01 00 C8 83 00 90 00", $"Optelio Cards (D38-D72 R6) T=0 High Speed" },
            new List<string> () { "3B 7D 96 00 00 80 31 80 65 B0 85 02 00 CF 83 01 90 00", $"Gemalto IDCore 3010" },
            new List<string> () { "3B 7D 96 00 00 80 31 80 65 B0 93 11 D0 A9 83 00 90 00", $"Gemalto Classic TPC (Trusted PKI Card) IM{Environment.NewLine}Classic TPC IM (PKCS#15): 12 x RSA key containers (standard profile)" },
            new List<string> () { "3B 7D 96 00 00 80 31 80 65 B0 A3 02 01 F3 83 00 90 00", $"SetCOS 2048 (eID)" },
            new List<string> () { "3B 7D 96 00 00 80 31 80 65 B0 A3 11 00 C8 83 00 00 00", $"Handelsbanken BankID card (Swedish bank authentication)" },
            new List<string> () { "3B 7D 96 00 00 80 31 80 65 B0 A3 11 00 C8 83 00 90 00", $"Swedish eID (Telia IP5a)" },
            new List<string> () { "3B 7D 96 00 00 80 31 80 65 B0 A3 11 01 F3 83 00 90 00", $"Telia EID IP5a (eID)" },
            new List<string> () { "3B 7E 11 00 00 00 6A 11 63 54 08 30 24 01 .. .. 21 90 01", $"Sagem Windows for smart cards" },
            new List<string> () { "3B 7E 13 00 00 00 31 C0 71 C6 65 01 B0 01 04 40 83 90 00", $"BahnCard / Commerzbank MasterCard Credit Card{Environment.NewLine}Bank Pekao SA (Poland) (Maestro) debit card (Bank)" },
            new List<string> () { "3B 7E 13 00 00 00 31 C0 71 C6 65 01 B4 01 04 40 83 90 00", $"Portugal Millennium BCP MAESTRO debit Card" },
            new List<string> () { "3B 7E 13 00 00 00 6A 11 63 54 05 48 .. .. .. 01 22 90 00", $"Sagem Windows for smart cards" },
            new List<string> () { "3B 7E 18 00 00 80 58 4D 43 33 32 20 42 49 4F 83 05 90 00", $"Person Authentication Service Card (PKI)" },
            new List<string> () { "3B 7E 94 00 00 80 25 02 03 10 01 00 56 00 00 00 01 01 00", $"Czech citizen ID card (eID)" },
            new List<string> () { "3B 7E 94 00 00 80 25 A0 00 00 00 28 56 80 10 08 00 01 14", $"MůjKlíč smart card with a certificate for Direct Banking (PKI)" },
            new List<string> () { "3B 7E 94 00 00 80 25 A0 00 00 00 28 56 80 10 12 00 01 14", $"ProID+ Q (PKI)" },
            new List<string> () { "3B 7E 94 00 00 80 25 A0 00 00 00 28 56 80 10 12 00 01 16", $"CryptoPlus CS xg" },
            new List<string> () { "3B 7E 94 00 00 80 25 A0 00 00 00 28 56 80 10 12 00 01 19", $"Česká spořitelna personal certificate card" },
            new List<string> () { "3B 7E 94 00 00 80 25 A0 00 00 00 28 56 80 10 12 81 01 17", $"Česká Spořitelna SERVIS24 certificate card" },
            new List<string> () { "3B 7E 94 00 00 80 25 A0 00 00 00 28 56 80 10 21 00 01 14", $"CryptoPlus ProID, students ISIC card at University of Zilina, Slovakia{Environment.NewLine}TOP GX4 72k contact chip using JavaCard v2.2.1. and GlobalPlatform 2.1.1" },
            new List<string> () { "3B 7E 94 00 00 80 25 A0 00 00 00 28 56 80 10 24 00 01 11", $"\"OpenCard\" - card issued by Prague local authority{Environment.NewLine}dual card: chip used for electronic certificates" },
            new List<string> () { "3B 7E 94 00 00 80 25 D2 03 10 01 00 56 00 00 00 01 01 00", $"Personal identity card (ID card) of Czech Republic" },
            new List<string> () { "3B 7E 94 00 00 80 25 D2 03 10 01 00 56 00 00 00 02 02 00", $"Official Czech Republic identity card issued since 7/2018 (eID)" },
            new List<string> () { "3B 7E 94 00 00 80 31 80 66 47 50 91 45 03 13 83 0F 90 00", $"JTOP Trusted Logic" },
            new List<string> () { "3B 7E 94 00 00 80 31 80 66 47 50 A4 45 05 11 83 0F 90 00", $"JTOP Trusted Logic" },
            new List<string> () { "3B 7E 95 00 00 80 31 80 73 34 11 80 82 90 00 00 00 00 00", $"IAS (Identification, Authentication, and electronic Signature) Premium, profil DGME from Gemalto" },
            new List<string> () { "3B 7F .. 00 00 00 6A 43 45 52 45 53 02 2C 34 02 .. 03 90 00", $"Ceres ST v2" },
            new List<string> () { "3B 7F .. 00 00 00 6A 43 45 52 45 53 02 2C 34 03 .. 03 90 00", $"Ceres ST v3" },
            new List<string> () { "3B 7F .. 00 00 80 31 .. 65 B0 00 00 00 00 .. .. .. 82 90 ..", $"MultiApp V2.1 (with IAS XL / IAS ECC and IAS Classic Applet V3) [MultiApp V2.1 Type 2]" },
            new List<string> () { "3B 7F .. 00 00 80 31 80 65 B0 .. .. .. .. 12 0F FE 82 90 00", $"IDPrime MD 8840, 3840, 3810, 840 and 830 Cards T=0" },
            new List<string> () { "3B 7F 01 00 FE 58 43 4F 53 76 32 35 31 28 63 29 50 46 42 4D", $"XCOS is an Experimental Card Operating System for Atmel based smartcards (Funcard, etc..) (Other)" },
            new List<string> () { "3B 7F 04 00 00 80 31 80 71 90 67 54 45 4D 44 41 2E 30 90 00", $"public key (PKI)" },
            new List<string> () { "3B 7F 11 00 00 00 31 C0 53 CA C4 01 64 52 D9 04 00 82 90 00", $"DoD CAC, Oberthur CosmopolIC 32K V4" },
            new List<string> () { "3B 7F 11 00 00 00 6A 43 45 52 45 53 02 2C 34 02 00 03 90 00", $"FNMT-CERES ST (Fábrica Nacional de Moneda y Timbre)" },
            new List<string> () { "3B 7F 11 00 00 80 31 C0 52 14 1E 64 02 18 19 53 83 83 90 00", $"Advantis card" },
            new List<string> () { "3B 7F 11 00 00 80 31 C0 52 21 57 64 02 18 19 53 83 83 90 00", $"banking card (www.caixacatalunya.com){Environment.NewLine}student id of Universitat Autonoma de Barcelona" },
            new List<string> () { "3B 7F 11 00 00 80 31 C0 52 35 31 64 05 66 61 52 83 83 90 00", $"Oberthur Manufactured VISA Banking card (www.caixaterrassa.cat)" },
            new List<string> () { "3B 7F 11 00 00 80 31 C0 52 36 51 64 05 66 61 52 83 83 90 00", $"Alsa Plus (Transport)" },
            new List<string> () { "3B 7F 11 00 00 80 31 C0 52 3A 65 64 06 96 18 62 83 83 90 00", $"Visa Electron Triodos Bank Card (Bank)" },
            new List<string> () { "3B 7F 11 00 00 80 31 C0 52 3B C7 64 06 96 18 62 83 83 90 00", $"Triodos Bank Visa Classic (Bank)" },
            new List<string> () { "3B 7F 12 00 00 44 56 4E 20 54 45 43 48 20 52 65 76 35 33 76", $"Chinese cable TV JETCAS card (DVN)" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 02 0F 64 02 B3 02 70 83 83 90 00", $"Banco Bradesco ELO (Brazil) (Bank)" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 02 71 64 05 62 34 70 83 83 90 00", $"Mastercard Debit Card issued by Caixa d'Enginyers" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 05 6E 64 02 53 04 36 83 83 90 00", $"Mastercard from Banc Sabadell in Spain" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 06 E8 64 05 66 99 36 83 83 90 00", $"HSBC Debit VISA CARD MX (Bank)" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 07 7D 64 05 66 99 36 83 83 90 00", $"VISA CEPSA (Porque tu vuelves) from Spain{Environment.NewLine}Visa Credit Card issued by Citibank" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 08 49 64 05 66 99 36 83 83 90 00", $"Spanish bank called BBVA" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 08 4B 64 05 66 94 61 83 83 90 00", $"Visa Electron Card from a Spanish bank called \"Caja de Ingenieros\"" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 08 80 64 05 66 99 36 83 83 90 00", $"\"la Caixa\" (Spain) (VISA Electron) debit card (Bank)" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 08 89 64 02 00 65 71 83 83 90 00", $"Guardadito | Banco Azteca (Bank)" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 09 AA 64 05 66 99 36 83 83 90 00", $"Advantis 8k (Bank)" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 0A 45 64 02 B3 02 37 83 83 90 00", $"Bancaja online (Visa) Card , Entity : Bancaja Bank Spain (Bankia currently)" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 0A A6 64 02 B3 02 37 83 83 90 00", $"Credit card Visa Classic by \"La Caixa\" (Spain)" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 0A D6 64 05 66 94 61 83 83 90 00", $"Visa Credit Card issued by Caixa d'Enginyers" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 0B 71 64 05 66 98 36 83 83 90 00", $"OuroCard VISA International - Banco do Brasil" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 0B BB 64 05 66 98 36 83 83 90 00", $"VISA OUROCARD Banco do Brasil S.A." },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 0D 1E 64 05 66 94 61 83 83 90 00", $"Universitat Politecnica de Valencia ID Visa Electron Card" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 0D EA 64 05 66 94 61 83 83 90 00", $"Universitat Rovira i Virgili Identification Card{Environment.NewLine}This card enables his/her propietary to sign documents and to access to rooms, laboratories and classes." },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 0E D4 64 05 66 96 61 83 83 90 00", $"BBVA Blue Card (VISA){Environment.NewLine}www.bluebbva.com" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 10 49 64 02 B3 02 70 83 83 90 00", $"Bank of Brazil (Bank)" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 10 68 64 02 B3 02 70 83 83 90 00", $"Santander VISA (Brazil) (Bank)" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 10 A4 64 02 B3 02 70 83 83 90 00", $"EMV Smartcard Reader (Other){Environment.NewLine}Saraiva (Banco do Brasil) - VISA (Bank)" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 11 2F 64 05 69 93 70 83 83 90 00", $"Banco do Brasil (Bank)" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 12 93 64 02 B3 02 70 83 83 90 00", $"Visa Infinite issued by Banco do Brasil (www.bb.com.br){Environment.NewLine}Manufactured by Giesecke & Devrient (G&D www.gi-de.com)" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 13 0B 64 02 B3 02 37 83 83 90 00", $"Visa Ourocard Platinum from Banco do Brasil" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 13 66 64 05 66 98 36 83 83 90 00", $"VISA Platinum from Banco do Brasil" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 14 D5 64 05 66 96 61 83 83 90 00", $"Visa Electron Debit Card issued by Spain Caja Madrid (www.cajamadrid.es)" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 15 54 64 05 66 98 36 83 83 90 00", $"VISA Card from Banc Sabadell in Spain" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 15 63 64 02 00 64 71 83 83 90 00", $"VISA CREDIT (Bank)" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 15 B8 64 02 00 64 71 83 83 90 00", $"Debit classic card banorte \"banco mercantilmdel norte\" (Bank)" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 15 C7 64 05 69 93 70 83 83 90 00", $"Brazil Bank Debit Cart - Visa Electron (Banco do Brasil) (Bank)" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 15 CB 64 05 66 96 61 83 83 90 00", $"Bank, Spanish group BANKIA (www.bankia.es){Environment.NewLine}Visa, Servired{Environment.NewLine}Manufactured by Saetic" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 15 ED 64 02 00 64 71 83 83 90 00", $"VISA - Bradescard (Casas Bahia) (Bank)" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 16 1B 64 05 69 93 70 83 83 90 00", $"Card BNB National Bank of Bolivia - Debit Card (Bank)" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 16 20 64 05 66 96 61 83 83 90 00", $"Bank, Spanish BBVA{Environment.NewLine}Visa, Servired{Environment.NewLine}Manufactured by Oberthur" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 16 43 64 05 69 93 70 83 83 90 00", $"Gemalto Debit Card cwbU1071682A1212 issued by BANCO DE CREDITO DEL PERU" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 16 50 64 02 B3 02 70 83 83 90 00", $"Banrisul credit card (Bank)" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 16 D7 64 05 62 17 80 83 83 90 00", $"Bank card from BBVA (spanish) (Bank)" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 16 F5 64 05 69 93 70 83 83 90 00", $"Banco do Brasil (Bank)" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 17 2D 64 02 B3 02 37 83 83 90 00", $"Spanish \"cajamar\" bank - Visa Electron Debit Card. Made by Tag Systems" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 17 61 64 02 B3 02 70 83 83 90 00", $"ELO Debit Card from CAIXA (Bank)" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 17 A0 64 02 B3 02 37 83 83 90 00", $"Credit card Visa Classic by \"La Caixa\" (Spain)" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 17 B4 64 05 66 98 36 83 83 90 00", $"Credit Card Banorte International, México" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 18 48 64 02 00 64 71 83 83 90 00", $"Itaú Visa LATAM Pass (Bank)" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 18 80 64 05 66 98 36 83 83 90 00", $"Visa Electron Debit Card issued by \"la Caixa\"" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 18 94 64 02 B3 02 70 83 83 90 00", $"Advantis duo 8k (Bank)" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 18 95 64 02 00 64 71 83 83 90 00", $"Alfa BROU, prepaid VISA (UY) (Bank)" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 18 97 64 02 B3 02 37 83 83 90 00", $"tool-valley (vale-pedagio) from Bradesco" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 19 1B 64 02 B3 02 70 83 83 90 00", $"La Caixa Visa electron ATM Card (Bank)" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 1B F1 64 05 62 17 80 83 83 90 00", $"blueBBVA Visa (Bank)" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 1D DE 64 05 00 E4 71 83 83 90 00", $"Evo finance Visa gold (Bank)" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 1E 63 64 05 00 E4 71 83 83 90 00", $"iTAU Brazil Gold VISA (Bank)" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 20 DD 64 05 62 17 80 83 83 90 00", $"VISA ELECTRON debit card (Bank)" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 21 67 64 05 00 E4 71 83 83 90 00", $"Credito Oro Banca Personal Bankia (Bank)" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 22 98 64 05 00 E4 71 83 83 90 00", $"PECUNPAY Prepaid VISA Card (Bank)" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 25 AD 64 05 62 34 70 83 83 90 00", $"Citi Bank (Spain) (VISA Electron) debit card (Bank)" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 26 DE 64 05 62 34 70 83 83 90 00", $"debit card (Bank)" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 34 D6 64 05 66 94 61 83 83 90 00", $"Visa Credit Card issued by Spain Obsidiana (www.obsidiana.com)" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 35 0D 64 02 61 18 63 83 83 90 00", $"Visa Credit Card issued by Spain Caja Madrid (www.cajamadrid.es)" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 36 42 64 05 66 94 61 83 83 90 00", $"Visa debit card issued by Spain Caja Madrid bank" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 37 C4 64 02 00 0B 70 83 83 90 00", $"BANKING (Bank)" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 3B 0E 64 02 00 0B 70 83 83 90 00", $"RACC MasterCard (Bank)" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 3B 2E 64 02 00 0B 70 83 83 90 00", $"Bankinter VISA credit card (Bank)" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 3C 89 64 02 00 0B 70 83 83 90 00", $"ING Direct Visa (Bank)" },
            new List<string> () { "3B 7F 13 00 00 80 31 C0 52 71 0B 64 05 00 EC 71 83 83 90 00", $"Itaú Visa Volar Debit (Bank)" },
            new List<string> () { "3B 7F 13 00 FF 00 31 C1 73 C8 21 10 64 41 4D 31 37 07 90 00", $"icc (Bank)" },
            new List<string> () { "3B 7F 13 00 FF 45 43 4F 53 76 31 31 30 28 63 29 50 46 42 4D", $"ECOS-Card [Experimental Card Operating System V.1.1] by Philipp Maier" },
            new List<string> () { "3B 7F 14 00 00 80 41 00 57 4A 2D 49 44 4D 36 34 83 7F 90 00", $"Electronic CPF in Brazil (Cadastro de Pessoas Físicas)" },
            new List<string> () { "3B 7F 18 00 00 00 31 B8 64 50 23 EC C1 73 94 01 80 82 90 00", $"PENIT, Carte non ECC-France (eID){Environment.NewLine}SSO card distributed by the University Hospital of Lille (CHRU de Lille)" },
            new List<string> () { "3B 7F 18 00 00 00 31 C0 73 9E 01 0B 64 52 D9 03 00 82 90 00", $"Oberthur Galactic V3 (32k)" },
            new List<string> () { "3B 7F 18 00 00 00 31 C0 73 9E 01 0B 64 52 D9 04 00 82 90 00", $"Oberthur CosmopolIC 32K v4 Fast ATR{Environment.NewLine}Oberthur Authentic" },
            new List<string> () { "3B 7F 18 00 00 00 31 C0 73 9E 01 0B 64 52 D9 05 00 82 90 00", $"Oberthur 32k BIO" },
            new List<string> () { "3B 7F 18 00 00 43 55 32 69 AA 20 00 32 20 20 20 20 20 20 00", $"UBS Access Card (Online Banking, NFC, Switzerland) (Bank)" },
            new List<string> () { "3B 7F 18 00 00 80 59 49 44 65 61 59 49 44 65 61 6C 5F 31 2E", $"e-CNPJ issued by Fenacon (eID)" },
            new List<string> () { "3B 7F 18 00 00 80 59 49 44 65 61 6C 5F 31 2E 34 83 07 90 00", $"Sagem YpsID s3" },
            new List<string> () { "3B 7F 18 00 02 80 41 00 57 53 4F 41 4C 42 49 44 83 7F 90 00", $"Albanian ID Card (eID)" },
            new List<string> () { "3B 7F 38 00 00 00 6A 43 45 52 45 53 02 2C 34 02 02 03 90 00", $"WG10" },
            new List<string> () { "3B 7F 38 00 00 00 6A 43 45 52 45 53 02 2C 34 03 10 03 90 00", $"Used card Aragón government (Aragón - España)" },
            new List<string> () { "3B 7F 38 00 00 00 6A 43 45 52 45 53 02 2C 34 03 20 03 90 00", $"TiDcarm (Region de Murcia){Environment.NewLine}(Government of the Autonomous region of Murcia, Spain)" },
            new List<string> () { "3B 7F 38 00 00 00 6A 44 4E 49 65 00 02 4C 34 01 13 0F 65 81", $"DNI (Documento Nacional de Identidad), Spanish ID Card" },
            new List<string> () { "3B 7F 38 00 00 00 6A 44 4E 49 65 [12]0 02 4C 34 01 13 03 90 00", $"DNI electronico (Spanish electronic ID card)" },
            new List<string> () { "3B 7F 94 00 00 80 25 A0 00 00 00 28 57 80 10 30 01 00 01 00", $"ProID+ (PKI)" },
            new List<string> () { "3B 7F 94 00 00 80 25 A0 00 00 00 28 57 80 10 42 02 00 01 00", $"ProID+Q Client (JavaCard)" },
            new List<string> () { "3B 7F 94 00 00 80 31 80 65 B0 85 03 00 EF 12 0F FF 82 90 00", $"Gemalto Classic V4{Environment.NewLine}Juridic Person's Token (PKI){Environment.NewLine}Uruguayan Identification Card (Cedula de Identidad) (eID)" },
            new List<string> () { "3B 7F 94 00 00 80 31 80 71 90 67 54 45 4D 44 31 2E 30 90 00", $"M.MAR (MEE GVB1.1/11.06) eID{Environment.NewLine}Tarjeta Electrónica del Ministerio de Defensa (M.MAR TEMDv1.0)" },
            new List<string> () { "3B 7F 95 00 00 80 31 80 65 B0 83 11 00 C8 12 00 84 82 90 00", $"Cape Verde National Identity Card (CNI) (eID)" },
            new List<string> () { "3B 7F 96 00 00 00 31 B8 64 40 70 14 10 73 94 01 80 82 90 00", $"IAS/ECC Gemalto (eID)" },
            new List<string> () { "3B 7F 96 00 00 00 31 B8 64 40 F3 85 10 73 94 01 80 82 90 00", $"IAS ECC Type 1" },
            new List<string> () { "3B 7F 96 00 00 00 6A 44 4E 49 65 00 01 01 55 04 21 0F 65 81", $"DNIe (eID)" },
            new List<string> () { "3B 7F 96 00 00 00 6A 44 4E 49 65 00 01 77 98 03 11 0F 65 81", $"Electronic Spanish National ID card (eID)" },
            new List<string> () { "3B 7F 96 00 00 00 6A 44 4E 49 65 10 01 01 55 04 .. 03 90 00", $"DNIE Spain (eID)" },
            new List<string> () { "3B 7F 96 00 00 00 6A 44 4E 49 65 10 01 77 98 0. 11 03 90 00", $"DNI electronico (Spanish electronic ID card) (eID)" },
            new List<string> () { "3B 7F 96 00 00 00 6A 44 4E 49 65 20 01 01 55 04 10 03 90 00", $"Spanish DNI (3.0 version) (eID)" },
            new List<string> () { "3B 7F 96 00 00 00 6A 44 4E 49 65 20 01 01 55 04 21 03 90 00", $"DNI electronico (Spanish electronic ID card) (eID)" },
            new List<string> () { "3B 7F 96 00 00 00 6A 44 4E 49 65 20 01 77 98 03 11 03 90 00", $"Spanish ID card (DNIe) (eID){Environment.NewLine}www.dnielectronico.es/" },
            new List<string> () { "3B 7F 96 00 00 00 6A 46 4E 4D 54 03 04 11 43 04 30 03 90 00", $"CERES Spanish SmartCard from the \"Fabrica Nacional de Moneda y Timbre\" (FNMT) (eID)" },
            new List<string> () { "3B 7F 96 00 00 00 B8 54 31 10 07 90 00 00 00 00 00 00 00 00", $"Mastercard (Bank)" },
            new List<string> () { "3B 7F 96 00 00 00 B8 54 31 11 07 90 00 00 00 00 00 00 00 00", $"STPay-Gold (JavaCard)" },
            new List<string> () { "3B 7F 96 00 00 31 00 DE 52 50 01 00 15 00 00 00 00 00 00 00", $"VALES (Bank)" },
            new List<string> () { "3B 7F 96 00 00 80 31 80 65 55 85 03 00 EF 12 41 40 82 90 00", $"Civil ID (eID)" },
            new List<string> () { "3B 7F 96 00 00 80 31 80 65 B0 84 23 27 E5 12 0F FE 82 90 00", $"Gemalto IDPrime MD 3810 dual interface smartcard ISO 7816, ISO 14443 and NFC (PKI)" },
            new List<string> () { "3B 7F 96 00 00 80 31 80 65 B0 84 41 3D F6 12 00 4C 82 90 00", $"Serasa Experian (Other)" },
            new List<string> () { "3B 7F 96 00 00 80 31 80 65 B0 84 41 3D F6 12 0F FE 82 90 00", $"Gemalto IDPrime MD" },
            new List<string> () { "3B 7F 96 00 00 80 31 80 65 B0 84 53 4C 0F 12 03 7B 82 90 00", $"Serbian International Student Identity Card (ISIC) (eID)" },
            new List<string> () { "3B 7F 96 00 00 80 31 80 65 B0 84 61 60 FB 12 0F FD 82 90 00", $"IDPrime 930/3930 FIPS Level 2 or Level 3 (T=0 CT=96) (BAI1, BAI2, BAI3, BAI5, BAI7) (PKI)" },
            new List<string> () { "3B 7F 96 00 00 80 31 80 65 B0 85 02 01 F3 12 0F FF 82 90 00", $"Swedish National Identity Card (eID)" },
            new List<string> () { "3B 7F 96 00 00 80 31 80 65 B0 85 02 01 F3 12 FF FE 82 90 00", $"Gemalto TOP IM GX4 (PKI)" },
            new List<string> () { "3B 7F 96 00 00 80 31 80 65 B0 85 03 00 EF 12 02 68 82 90 00", $"Polish Qualified Signature (eID)" },
            new List<string> () { "3B 7F 96 00 00 80 31 80 65 B0 85 03 00 EF 12 02 C1 82 90 00", $"Gemalto IDPrime MD840 (eID)" },
            new List<string> () { "3B 7F 96 00 00 80 31 80 65 B0 85 03 00 EF 12 02 F0 82 90 00", $"Swedish MCA (eID)" },
            new List<string> () { "3B 7F 96 00 00 80 31 80 65 B0 85 03 00 EF 12 0F FE 82 90 00", $"Gemalto IDPrime MD 840 (PKI)" },
            new List<string> () { "3B 7F 96 00 00 80 31 80 65 B0 85 03 00 EF 12 0F FF 82", $"CPR card (eID)" },
            new List<string> () { "3B 7F 96 00 00 80 31 80 65 B0 85 03 00 EF 12 0F FF 82 90 00", $"Portuguese Blood Donator National Card (HealthCare){Environment.NewLine}Swedish ID card from Skatteverket with an Electronic ID from AB Svenska Pass, issued September 2017 or later{Environment.NewLine}Swedish ID card from Skatteverket with an Electronic ID from AB Svenska Pass, issued September 2017 or later (eID)" },
            new List<string> () { "3B 7F 96 00 00 80 31 80 65 B0 85 03 00 EF 12 FF FE 82 90 00", $"JavaCard (JavaCard)" },
            new List<string> () { "3B 7F 96 00 00 80 31 80 65 B0 85 04 00 11 12 0F FF 82 90 00", $"Swedish national ID card (eID)" },
            new List<string> () { "3B 7F 96 00 00 80 31 80 65 B0 85 04 01 20 12 0F FF 82 90 00", $"Belgian eID v1.8 (eID)" },
            new List<string> () { "3B 7F 96 00 00 80 31 80 65 B0 85 04 01 20 F2 00 01 82 90 00", $"Health Insurance Institute of Slovenia - Health Insurance Card Gen. 3 (HealthCare)" },
            new List<string> () { "3B 7F 96 00 00 80 31 80 65 B0 85 04 01 20 F2 00 02 82 90 00", $"Health Insurance Institute of Slovenia - Professional Card Gen. 3 (HealthCare)" },
            new List<string> () { "3B 7F 96 00 00 80 31 80 65 B0 85 59 56 FB 12 02 C1 82 90 00", $"Gemalto USB (eID)" },
            new List<string> () { "3B 7F 96 00 00 80 31 80 65 B0 85 59 56 FB 12 FF FE 82 90 00", $"IDCORE 3140 (JavaCard)" },
            new List<string> () { "3B 7F 96 00 00 80 31 B8 65 B0 85 03 00 EF 12 00 F6 82 90 00", $"Finnish identity card (eID)" },
            new List<string> () { "3B 7F 96 00 00 80 31 B8 65 B0 85 04 02 1B 12 00 F6 82 90 00", $"Finnish ID-card v5.0(?) (eID)" },
            new List<string> () { "3B 7F 96 00 00 EA 5C BD F0 7A EB 65 41 89 4B 04 00 00 00 00", $"Gemalto TOP IM GX4 (Other)" },
            new List<string> () { "3B 7F 97 00 00 00 31 C1 73 C8 21 10 64 57 53 34 30 00 90 00", $"PNC Bank VISA card (Bank)" },
            new List<string> () { "3B 7F 98 00 00 80 5A 07 04 04 00 01 02 02 84 58 F2 82 90 00", $"Mobili'carte (Angoulême mobility services card) (Transport)" },
            new List<string> () { "3B 80 01 81", $"NXP Semiconductors VNG OpenPGP Card (Other)" },
            new List<string> () { "3B 80 1F C7 80 31 E0 73 FE 21 11 63 40 71 63 83 07 90 00 9A", $"Intertelecom UA RUIM card (Telecommunication)" },
            new List<string> () { "3B 80 80 01 01", $"ISO 14443 Type B without historical bytes{Environment.NewLine}Electronic Passport{Environment.NewLine}Spanish passport (2012){Environment.NewLine}Canadian Passport{Environment.NewLine}Venez_Prox" },
            new List<string> () { "3B 81 00 20", $"Old MobilCOM GSM (Telecom D1) (Telecommunication)" },
            new List<string> () { "3B 81 01 00 80", $"Rompetrol Romania Fill&Go Fuel Card (Other)" },
            new List<string> () { "3B 81 1F 00 CC 52", $"eToken R2 2242" },
            new List<string> () { "3B 81 80 01 80 80", $"RFID - ISO 14443 Type A - NXP DESFire or DESFire EV1 or EV2{Environment.NewLine}\"Reiner LoginCard\" (or \"OWOK\", how they name it) - they have been distributed by a german computer magazine (\"Computer BILD\"){Environment.NewLine}Belgium A-kaart (Antwerp citycard){Environment.NewLine}Oyster card - Transport for London (second-gen \"D\"){Environment.NewLine}Kaba Legic Advant 4k{Environment.NewLine}Sydney Opal card public transport ticket (Transport){Environment.NewLine}TH Köln (University of Applied Sciences Cologne) - Student Identity Card{Environment.NewLine}German red cross blood donation service{Environment.NewLine}Greater Toronto/Hamilton/Ottawa PRESTO contactless fare card{Environment.NewLine}Electic vehicle charging card of the EMSP EnBW Energie Baden-Württemberg AG, Tarif ADAC e-Charge, Germany" },
            new List<string> () { "3B 81 80 01 81 81", $"Ticket (Transport)" },
            new List<string> () { "3B 82 00 55 18", $"GSM SIM of TIM ITalian mobile company" },
            new List<string> () { "3B 82 00 55 19", $"GSM card 'Hi' (KPN brand)" },
            new List<string> () { "3B 82 00 55 22", $"GSM-SIM TELE2 Smart (Estonia, prepaid or subscription)" },
            new List<string> () { "3B 82 01 02 03 82", $"EMV CL (Bank)" },
            new List<string> () { "3B 82 80 01 02 44 ..", $"RFID - NFC Forum tag type 1 (Topaz)" },
            new List<string> () { "3B 82 80 01 03 02 02", $"Visa Credit Card, issued by TargoBank" },
            new List<string> () { "3B 82 80 01 42 4A 0B", $"Beijing Transport(YKT) (Transport)" },
            new List<string> () { "3B 82 80 01 47 72 36", $"emoney (Transport)" },
            new List<string> () { "3B 82 80 01 47 92 D6", $"Beijing Bus (Transport)" },
            new List<string> () { "3B 82 80 01 48 58 13", $"Yikatong BMAC -Beijing Municipal Administration & Communication contactless card (Transport)" },
            new List<string> () { "3B 82 80 01 86 88 0D", $"Beijing Municipal Administration Traffic Card (with cpu) (Transport)" },
            new List<string> () { "3B 82 80 01 C9 02 C8", $"Bartl V5.3DI (PKI)" },
            new List<string> () { "3B 82 81 31 76 43 C0 02 C5", $"CardOS/M2 V2.01(SLE44CxxS)" },
            new List<string> () { "3B 82 81 31 76 43 C1 03 C5", $"i.ti (ticket card for Collogne/Bonn){Environment.NewLine}CardOS M2 Combi V2.02 (SLE44R42S)" },
            new List<string> () { "3B 83 00 12 10 96", $"GSM-SIM T-Mobil D1 (900MHz)" },
            new List<string> () { "3B 83 00 43 56 10", $"Comviq 2G SIM" },
            new List<string> () { "3B 83 80 01 00 00 00 02", $"Mastercard debit (BNP Paribas Ukrsibbank) (Bank)" },
            new List<string> () { "3B 83 80 01 41 01 26 64", $"ACOS3 Multi-Application Contactless Card (Other)" },
            new List<string> () { "3B 83 80 01 41 07 05 41", $"ACOS3 Multi-Application Contactless Card (Other)" },
            new List<string> () { "3B 83 80 01 41 10 09 5A", $"Card RFID ACS (Other)" },
            new List<string> () { "3B 83 80 01 81 02 80 01", $"Mifare DESFire EV1 2K (Other)" },
            new List<string> () { "3B 84 00 91 18 01 00", $"Proximus 075 Belgacom Mobile SIM" },
            new List<string> () { "3B 84 80 01 00 00 00 00 05", $"UMoney card UB Transport (Transport)" },
            new List<string> () { "3B 84 80 01 00 00 90 00 95", $"German (test) passport issued in january 2010{Environment.NewLine}Luxembourg passport (2012){Environment.NewLine}United Kingdom passport (2010)" },
            new List<string> () { "3B 84 80 01 01 10 00 06 12", $"Snapper New Zealand (Type A)" },
            new List<string> () { "3B 84 80 01 01 10 00 09 1D", $"snapper (www.snapper.co.nz) prepaid 14443A cards" },
            new List<string> () { "3B 84 80 01 01 11 20 03 36", $"Snapper Sprat (Transport)" },
            new List<string> () { "3B 84 80 01 01 11 20 03 36 90 00", $"TMES Total Mobility (Wellington City Council, New Zealand)" },
            new List<string> () { "3B 84 80 01 04 38 33 B1 BB", $"Dutch passport" },
            new List<string> () { "3B 84 80 01 47 43 50 43 12", $"Polish eID card: pl.ID / e-Dowod (SIGN3-ChipDoc) (eID)" },
            new List<string> () { "3B 84 80 01 47 77 F4 00 C1", $"True Money Touch Sim (Thailand)" },
            new List<string> () { "3B 84 80 01 69 18 00 00 74", $"e-money flazz (Bank)" },
            new List<string> () { "3B 84 80 01 80 82 90 00 97", $"German passport (passport)" },
            new List<string> () { "3B 85 00 12 02 01 00 96", $"GSM-SIM Victorvox D1 (900MHz)" },
            new List<string> () { "3B 85 00 87 25 01 38 02", $"GSM-SIM Viag Interkom E2 Loop GSM (1800MHz)" },
            new List<string> () { "3B 85 00 87 25 01 39 00", $"GSM-SIM Telfort (Netherlands) 900 MH" },
            new List<string> () { "3B 85 40 20 68 01 01 .. ..", $"Schlumberger Cryptoflex 8k" },
            new List<string> () { "3B 85 40 20 68 01 01 00 00", $"Schlumberger Cryptoflex 8k (no RSA key generation)" },
            new List<string> () { "3B 85 40 20 68 01 01 03 05", $"Schlumberger Cryptoflex Key Generation" },
            new List<string> () { "3B 85 40 20 68 01 01 05 01", $"Schlumberger Cryptoflex 8k (with RSA key generation)" },
            new List<string> () { "3B 85 40 FE 68 01 01 02 04", $"Axalto CryptoFlex 8K" },
            new List<string> () { "3B 85 40 FF 63 01 01 03 01", $"Axalto Cryptoflex 16K" },
            new List<string> () { "3B 85 80 01 01 A2 13 10 91 35", $"Contact (7816-10) 2WBP (HealthCare)" },
            new List<string> () { "3B 85 80 01 20 63 CB A0 00 2C", $"Visa card from Banque populaire du nord/Casden" },
            new List<string> () { "3B 85 80 01 20 63 CB A1 00 2D", $"AIB Visa Debit Card, manufactured by Oberthur (NFC interface)" },
            new List<string> () { "3B 85 80 01 20 63 CB A1 80 AD", $"bpaid: bpost prepaid Mastercard (contactless)" },
            new List<string> () { "3B 85 80 01 20 63 CB A3 A0 8F", $"BNP Paribas Visa Classic Card (NFC) (Bank) 2014-2017 (Bank)" },
            new List<string> () { "3B 85 80 01 20 63 CB A5 20 09", $"MasterCard issued by OTP Bank (Hungary) (Bank)" },
            new List<string> () { "3B 85 80 01 20 63 CB A5 A0 89", $"Visa contactless from Banque Populaire des Alpes (France) (Bank)" },
            new List<string> () { "3B 85 80 01 20 63 CB AD 00 21", $"NUMBER26 MasterCard (Bank)" },
            new List<string> () { "3B 85 80 01 20 63 CB AD 20 01", $"KBC Ireland MasterCard Debit Card (Bank)" },
            new List<string> () { "3B 85 80 01 20 63 CB AD 80 A1", $"VISA Caisse d'Epargne (Bank){Environment.NewLine}VISA BNP Paribas (NFC) (Bank)" },
            new List<string> () { "3B 85 80 01 20 63 CB B7 00 3B", $"Visa card issued by OTP Bank (Hungary) (Bank)" },
            new List<string> () { "3B 85 80 01 20 63 CB B7 20 1B", $"Halifax Clarity Mastercard (Bank)" },
            new List<string> () { "3B 85 80 01 20 63 CB B7 80 BB", $"First Direct Debit (Bank)" },
            new List<string> () { "3B 85 80 01 20 63 CB B8 80 B4", $"VISA Cléo LCL (Bank)" },
            new List<string> () { "3B 85 80 01 20 63 CB C6 00 4A", $"Gold Mastercard Credit Agricole (Bank)" },
            new List<string> () { "3B 85 80 01 30 01 01 30 30 34", $"German Health Insurance Card \"elektronische Gesundheitskarte\" (eGK) / European Health Insurance Card (EHIC) (HealthCare)" },
            new List<string> () { "3B 85 80 01 4A 4D 52 54 44 41", $"JMRTD - Java Machine Readable Travel Document (ePassport emulator)" },
            new List<string> () { "3B 85 80 01 4D 79 45 49 44 78", $"MyEID" },
            new List<string> () { "3B 85 80 01 5A 43 37 2E 35 31", $"BasicCard ZC7.5 32K (Other)" },
            new List<string> () { "3B 85 80 01 5A 43 56 44 56 59", $"Card Issued by \"Verkéiersverbond\" Luxembourg \"M Kaart\" Card containing Tickets for all public transportation in the country of Luxembourg (Transport)" },
            new List<string> () { "3B 85 80 01 80 73 84 21 40 12", $"Dutch Biometric Passport" },
            new List<string> () { "3B 85 80 01 80 73 C8 21 10 0E", $"NXP P71 (SmartMX3 P71D320 JCOP4) (JavaCard)" },
            new List<string> () { "3B 85 80 01 A0 00 00 00 00 A4", $"Italian Passport (passport)" },
            new List<string> () { "3B 85 C0 FA 21 63 80 63 01 01 05 1B", $"Public Distribution System" },
            new List<string> () { "3B 86 40 20 68 01 01 02 04 AC", $"Activcard Gold, SchlumbergerSema Cryptoflex 8k" },
            new List<string> () { "3B 86 40 FA 80 81 01 52 03 01", $"SCOSTA (JavaCard)" },
            new List<string> () { "3B 86 80 01 00 04 9A EE 00 CA BD", $"ASK CPL 528" },
            new List<string> () { "3B 86 80 01 03 02 02 11 00 00 15", $"cash bee card. transportation and payment in south korea (seoul) (Transport)" },
            new List<string> () { "3B 86 80 01 06 75 77 81 02 80 00", $"NXP Mifare DESFire EV1 8K / MF3ICD81{Environment.NewLine}\"OpenCard\" - card issued by Prague local authority{Environment.NewLine}dual card: RFID (1k Mirfare) used for parkimeters and as public traffic ticket" },
            new List<string> () { "3B 86 80 01 06 75 77 81 02 8F 00", $"Desfire (eID)" },
            new List<string> () { "3B 86 80 01 39 30 43 30 32 31 7E", $"Chase Freedom VISA card" },
            new List<string> () { "3B 86 80 01 43 68 69 70 31 37 33", $"PostFinance Switzerland (Bank)" },
            new List<string> () { "3B 86 80 01 44 49 20 30 32 4D 65", $"Lufthansa Miles & More Gold MasterCard PayPass{Environment.NewLine}Raiffeizen Bank, Russia, MasterCard paypass card" },
            new List<string> () { "3B 86 80 01 44 49 20 30 32 56 7E", $"DKB VISA paywave (Bank)" },
            new List<string> () { "3B 86 80 01 4A 43 4F 50 33 30 12", $"Mifare ProX T=CL" },
            new List<string> () { "3B 86 80 01 4A 43 4F 50 33 31 13", $"JCOP BIO 31 Contactless Card" },
            new List<string> () { "3B 86 80 01 4B 4F 4E 41 12 20 3E", $"Citibank Russia, Mastercard paypass" },
            new List<string> () { "3B 86 80 01 4B 4F 4E 41 13 21 3E", $"Vivid Money Visa Debit (Bank)" },
            new List<string> () { "3B 86 80 01 4B 4F 4E 41 14 11 09", $"Mastercard paypass enabled credit card" },
            new List<string> () { "3B 86 80 01 57 41 52 49 30 31 0B", $"Gusto Karta (Bank)" },
            new List<string> () { "3B 86 80 01 57 57 50 61 73 73 36", $"WWPass Passkey (eID)" },
            new List<string> () { "3B 86 80 01 80 54 04 10 01 0F C9", $"Nickel.eu prepaid account (Bank)" },
            new List<string> () { "3B 86 80 01 C1 05 2F 2F 01 BC 7E", $"Contactless interface to St. Petersburg unified card, Russia (Единая карта петербуржца) (Other)" },
            new List<string> () { "3B 86 81 31 70 34 45 50 41 20 45 4B 08", $"Austrian Quick E-purse \"Einreichkarte\" (transfer card)" },
            new List<string> () { "3B 87 80 01 4D 49 46 41 52 45 2B 39", $"PEKA CARD (JavaCard)" },
            new List<string> () { "3B 87 80 01 4D 52 54 44 31 2E 30 26", $"Russian Foreign Passport (passport)" },
            new List<string> () { "3B 87 80 01 4D 52 54 44 32 2E 30 25", $"Biometric Passport of the Russian Federation (passport)" },
            new List<string> () { "3B 87 80 01 5A 43 50 75 72 73 65 5E", $"ZCPurse RFID card (ATR created by PCSC-Reader) (Transport)" },
            new List<string> () { "3B 87 80 01 73 C8 40 00 00 90 00 6D", $"Amazon.de VISA Card (Bank){Environment.NewLine}CIBC Visa" },
            new List<string> () { "3B 87 80 01 77 43 32 4C 01 01 00 4C", $"CiPurse L profile with 304 bytes user memory (Other)" },
            new List<string> () { "3B 87 80 01 77 43 32 53 00 08 00 5B", $"CiPurse S profile (Other)" },
            new List<string> () { "3B 87 80 01 77 43 32 53 00 09 02 58", $"CiPurse S profile (Other)" },
            new List<string> () { "3B 87 80 01 77 43 32 53 01 00 01 53 77 43 32 53 01 00 01", $"Cipurse ISO 14443-4 Card (Other)" },
            new List<string> () { "3B 87 80 01 77 43 32 53 01 00 02 50", $"CIPURSE (Transport)" },
            new List<string> () { "3B 87 80 01 77 43 32 54 00 09 05 58", $"CIPURSE (Transport)" },
            new List<string> () { "3B 87 80 01 77 43 32 54 01 01 00 54", $"CiPurse T profile (Other)" },
            new List<string> () { "3B 87 80 01 77 43 49 50 02 00 01 28", $"CIPURSE (transport)" },
            new List<string> () { "3B 87 80 01 80 31 80 73 96 12 80 40", $"Public transport: VRS Verkehrsverbund Rhein-Sieg (Germany, North_Rhine-Westphalia)" },
            new List<string> () { "3B 87 80 01 80 31 98 73 84 01 E0 39", $"Austrian Passport" },
            new List<string> () { "3B 87 80 01 80 31 B8 73 84 01 E0 19", $"Personalausweis (German Identity Card) (eID)" },
            new List<string> () { "3B 87 80 01 80 31 B8 73 86 01 E0 1B", $"Personalausweis (German Identity Card) (eID)" },
            new List<string> () { "3B 87 80 01 80 31 B9 73 84 21 60 B8", $"Hungarian eID (2016) (eID)" },
            new List<string> () { "3B 87 80 01 80 31 C0 73 D6 20 C0 32", $"RFID GeldKarte (girogo)" },
            new List<string> () { "3B 87 80 01 80 31 C0 73 D6 21 C0 33", $"Sparkasse Hannover - German contactless GeldKarte (RFID, NFC, girogo)" },
            new List<string> () { "3B 87 80 01 80 31 C0 73 D6 31 C0 23", $"girocard contactless (Bank)" },
            new List<string> () { "3B 87 80 01 C1 05 21 30 00 77 C1 65", $"Mifare Plus (Other)" },
            new List<string> () { "3B 87 80 01 C1 05 2F 2F 00 35 C7 30", $"MiFare Plus 2K \"S\" (Other)" },
            new List<string> () { "3B 87 80 01 C1 05 2F 2F 01 BC D6 A9", $"RFID - ISO 14443 Type A - NXP Mifare Plus" },
            new List<string> () { "3B 87 81 31 40 43 4D 46 43 20 31 33 31 6F", $"Telekom Paycard" },
            new List<string> () { "3B 88 01 00 03 05 06 68 D0 60 80 D1", $"125 Khz HID Proximity card (eID)" },
            new List<string> () { "3B 88 01 4B 41 5A 54 4F 4B 45 4E 82", $"Kaztoken (eID)" },
            new List<string> () { "3B 88 01 80 56 53 6F 6C 6F 20 32 72", $"SoloKeys Solo 2 Security Key (PKI)" },
            new List<string> () { "3B 88 80 01 00 00 00 00 00 00 00 00 09", $"Personalausweis (German Identity Card) (eID)" },
            new List<string> () { "3B 88 80 01 00 00 00 00 00 41 91 00 D9", $"EffiTIC (Transport){Environment.NewLine}www.effitic.com" },
            new List<string> () { "3B 88 80 01 00 00 00 00 00 71 71 00 09", $"OPUS Public Transport card (Montreal, Quebec, Canada) - Oberthur based{Environment.NewLine}ACTV (Italy) transport card (RFID)" },
            new List<string> () { "3B 88 80 01 00 00 00 00 00 71 81 00 F9", $"Navigo Découverte (RFID interface) (Transport)" },
            new List<string> () { "3B 88 80 01 00 00 00 00 00 81 77 00 FF", $"KBC Maestro card (Bank)" },
            new List<string> () { "3B 88 80 01 00 00 00 00 00 81 87 00 0F", $"ING Bank Card (Bank)" },
            new List<string> () { "3B 88 80 01 00 00 00 00 00 81 91 10 09", $"Trenitalia (Italy) fidelity card \"CartaFreccia\" (RFID)" },
            new List<string> () { "3B 88 80 01 00 00 00 00 03 81 91 00 1A", $"Italian healthcare card (TS) National Service Card (CNS) NFC Interface (eID)" },
            new List<string> () { "3B 88 80 01 00 00 00 00 11 71 71 00 18", $"Contactless card to handle personal travel tickets in the Britany area. Used by several travel operators like SNCF TER Bretagne, STAR in Rennes, BIBUS in Brest,.... (Transport)" },
            new List<string> () { "3B 88 80 01 00 00 00 00 11 81 81 00 18", $"Rav Kav (Transport)" },
            new List<string> () { "3B 88 80 01 00 00 00 00 33 81 81 00 3A", $"Interparking MOBIB basic - RFID/Smartcard car park and car wash token" },
            new List<string> () { "3B 88 80 01 00 00 00 00 33 81 91 00 2A", $"Regional services for Lombardy (Italy) (Other)" },
            new List<string> () { "3B 88 80 01 00 00 00 00 77 81 91 00 6E", $"Ireland EPassport (passport)" },
            new List<string> () { "3B 88 80 01 00 00 00 00 77 81 91 10 7E", $"Romanian Electronic Passport (passport)" },
            new List<string> () { "3B 88 80 01 00 00 00 00 77 83 95 00 00", $"MULTOS (PKI)" },
            new List<string> () { "3B 88 80 01 00 00 00 00 77 83 B3 00 4E", $"Polish ePassport (eID)" },
            new List<string> () { "3B 88 80 01 00 00 00 00 80 81 71 00 79", $"Apple Pay card - Usually EMV" },
            new List<string> () { "3B 88 80 01 00 00 00 00 91 71 71 00 98", $"Public transportation fare card (Morocco CAS: Urban bus) (Transport)" },
            new List<string> () { "3B 88 80 01 00 00 00 00 91 81 C1 00 D8", $"Driving License card of Japan (NFC type-B) (eID)" },
            new List<string> () { "3B 88 80 01 00 00 00 00 B3 71 71 .0 .A", $"Public transportation card in Riga, Latvia, called \"e-Talons\"{Environment.NewLine}Belgian MOBIB (transport)" },
            new List<string> () { "3B 88 80 01 00 00 00 00 F7 81 C1 00 BE", $"Italian Health Insurance card (eID)" },
            new List<string> () { "3B 88 80 01 00 00 00 11 77 81 83 00 6D", $"Taglio PIVKey C980 - RFID I/F (PKI)" },
            new List<string> () { "3B 88 80 01 00 00 01 07 01 72 90 00 EC", $"Belgian passport (2008-2009)" },
            new List<string> () { "3B 88 80 01 00 00 05 E0 B3 81 A1 00 7F", $"Japanese JPKI card (aka JINC card) (eID)" },
            new List<string> () { "3B 88 80 01 00 00 14 E0 B3 81 91 00 5E", $"\"JUKICARD\", the Basic Resident Registration Card in Japan (eID)" },
            new List<string> () { "3B 88 80 01 00 00 41 E0 B3 81 A1 00 3B", $"ID card issued by Japan government (eID)" },
            new List<string> () { "3B 88 80 01 00 73 C8 40 00 00 90 00 62", $"NXP JCOP 31 V2.2 36K - RFID I/F{Environment.NewLine}Barclaycard Visa Wave & Pay - RFID I/F{Environment.NewLine}CIBC Visa" },
            new List<string> () { "3B 88 80 01 00 73 C8 40 13 00 90 00 71", $"Nokia 6131 NFC phone{Environment.NewLine}Giesecke & Devrient’s (G&D) Sm@rtCafé Expert 3.1{Environment.NewLine}Amex Bank of Canada American Express{Environment.NewLine}TD Canada Trust Visa{Environment.NewLine}TD Canada Trust Access Card (Visa Debit)" },
            new List<string> () { "3B 88 80 01 00 DD A6 11 F7 71 85 00 60", $"\"Pyrelis\" card, PAU (France) public transport card. (Calypso card). (Transport)" },
            new List<string> () { "3B 88 80 01 04 02 00 20 00 71 C1 40 DF", $"Seoul Citypass+ T-Money Card" },
            new List<string> () { "3B 88 80 01 10 00 00 00 00 81 70 00 E8", $"Tap&Go MasterCard Sim Card (Bank)" },
            new List<string> () { "3B 88 80 01 11 00 00 11 00 81 84 00 0C", $"OCBC bank card (Bank)" },
            new List<string> () { "3B 88 80 01 11 00 00 11 33 81 A3 80 98", $"casatramway rechargeable card (Transport)" },
            new List<string> () { "3B 88 80 01 11 00 00 11 77 81 83 00 7C", $"Passport of citizen of Ukraine, Passport of citizen of Ukraine for traveling abroad (passport)" },
            new List<string> () { "3B 88 80 01 11 22 33 44 80 81 71 00 3D", $"FIME Card Emulator (Other)" },
            new List<string> () { "3B 88 80 01 1B E1 F3 5E 11 77 81 00 B9", $"Uruguyan persona ID. Nowadays a eID. (eID)" },
            new List<string> () { "3B 88 80 01 1C 2D 94 11 F7 71 85 00 BE", $"CEPAS Card (Adult card issued by EZ-Link) (Transport)" },
            new List<string> () { "3B 88 80 01 1C 91 26 11 F7 71 85 00 B0", $"NETS Singapore contactless payment card" },
            new List<string> () { "3B 88 80 01 1C F0 E1 11 F7 71 85 00 16", $"CEPAS Card (Concession card issued by Land Transport Authority Singapore) (Transport)" },
            new List<string> () { "3B 88 80 01 30 41 56 54 00 00 00 07 7D", $"Avtor ID Key (eID)" },
            new List<string> () { "3B 88 80 01 30 4C 47 12 77 83 D5 00 01", $"elesec - TCOS 3.0 Signature Card (eID)" },
            new List<string> () { "3B 88 80 01 30 AB AB 01 77 81 B7 00 79", $"Italian healthcare card (TS) National Service Card (CNS) (HealthCare)" },
            new List<string> () { "3B 88 80 01 31 CC CC 01 77 81 C1 00 0E", $"Ideal v 1.4 (Transport)" },
            new List<string> () { "3B 88 80 01 31 CC CC 01 77 83 A1 00 6C", $"Chile RUT (eID)" },
            new List<string> () { "3B 88 80 01 31 F3 5E 11 00 81 95 00 90", $"Venez_Omnikey" },
            new List<string> () { "3B 88 80 01 32 F3 5E 11 33 87 95 00 A6", $"IDPrime 3930 FIPS Level 3 (Contactless TypeB) (BAI6) (PKI)" },
            new List<string> () { "3B 88 80 01 35 20 00 00 77 81 91 00 7B", $"Ireland EPassport (passport)" },
            new List<string> () { "3B 88 80 01 42 41 45 49 44 31 2E 30 6D", $"eID BiH card (eID)" },
            new List<string> () { "3B 88 80 01 42 41 45 49 44 31 2E 31 6C", $"BiH eID card (eID)" },
            new List<string> () { "3B 88 80 01 43 43 31 69 AA 20 00 00 DB", $"PostFinance Switzerland (Bank)" },
            new List<string> () { "3B 88 80 01 43 4C 61 69 72 65 20 36 0F", $"VISA credit card with NFC payment function (Bank)" },
            new List<string> () { "3B 88 80 01 46 49 44 45 53 4D 4F 31 67", $"Fidesmo card (install or uninstall JavaCard applets or Mifare-based services on the field, using the Fidesmo Android App. (JavaCard))" },
            new List<string> () { "3B 88 80 01 4A 43 4F 50 76 32 34 31 5E", $"RFID - ISO 14443 Type A - NXP JCOP{Environment.NewLine}NXP J3A081 JavaCard (contactless interface)" },
            new List<string> () { "3B 88 80 01 50 FF FF 11 77 83 D5 00 69", $"Gematik TSYS eHBA G2.1 (HealthCare)" },
            new List<string> () { "3B 88 80 01 52 74 4D 43 00 81 C1 00 61", $"Rutoken 2151 smart card (eID)" },
            new List<string> () { "3B 88 80 01 52 74 53 43 77 81 83 20 6A", $"Aktiv Rutoken ECP 3.0 NFC (PKI)" },
            new List<string> () { "3B 88 80 01 53 4B 55 50 01 00 00 00 15", $"Silesian public services card (Transport)" },
            new List<string> () { "3B 88 80 01 53 6D 61 72 74 41 70 70 11", $"national Lithuania ID card (eID)" },
            new List<string> () { "3B 88 80 01 76 61 75 6C 74 69 74 31 5F", $"ID06 2.0 (eID)" },
            new List<string> () { "3B 88 80 01 76 61 75 6C 74 69 74 32 5C", $"Vaultit Identity Card (eID)" },
            new List<string> () { "3B 88 80 01 80 66 B0 07 01 01 07 .. ..", $"Gemalto Santander Optelio TUI R7 with WG10 using Contactless interface" },
            new List<string> () { "3B 88 80 01 99 02 00 D1 03 04 22 01 67", $"Debit card (Bank)" },
            new List<string> () { "3B 88 80 01 C9 12 07 52 02 00 81 10 14", $"electronic Tickes from the german Transport Association VGN (Verkehrsgemeinschaft Niederrhein)" },
            new List<string> () { "3B 88 80 01 D1 03 86 05 00 80 80 00 58", $"Resident Identity Card of People Republic of China (Second Generation with RF Feature) (eID)" },
            new List<string> () { "3B 88 80 01 E1 E1 F3 5E 13 77 83 00 43", $"ePerso - German ID card (issued 2011) (eID)" },
            new List<string> () { "3B 88 80 01 E1 F3 5E 11 73 81 A5 00 03", $"US passport (2007)" },
            new List<string> () { "3B 88 80 01 E1 F3 5E 11 77 81 95 00 37", $"Belgian Passport (passport)" },
            new List<string> () { "3B 88 80 01 E1 F3 5E 11 77 81 A1 00 03", $"Spanish ID know as DNIe (eID)" },
            new List<string> () { "3B 88 80 01 E1 F3 5E 11 77 81 A5 00 07", $"US passport (2012)" },
            new List<string> () { "3B 88 80 01 E1 F3 5E 11 77 81 C7 20 45", $"French passport (2007-2008)" },
            new List<string> () { "3B 88 80 01 E1 F3 5E 11 77 81 E1 00 43", $"DNIE Spain (eID) Contactless (eID)" },
            new List<string> () { "3B 88 80 01 E1 F3 5E 11 77 83 00 00 A0", $"Residence permit (eID)" },
            new List<string> () { "3B 88 80 01 E1 F3 5E 11 77 83 95 00 35", $"French biometric ePassport (issued in 2012)" },
            new List<string> () { "3B 88 80 01 E1 F3 5E 11 77 83 D5 00 75", $"German Passport (ePass) (issued June 2009)" },
            new List<string> () { "3B 88 80 01 E1 F3 5E 11 77 83 D7 00 77", $"Spanish Electronic Passport 2.0 (passport)" },
            new List<string> () { "3B 88 80 01 E1 F3 5E 11 77 87 95 00 31", $"Dutch Government Pilot E-rijbewijs (eID)" },
            new List<string> () { "3B 88 80 01 E1 F3 5E 11 80 87 95 00 C6", $"Irish Driver Learner Permit (Other)" },
            new List<string> () { "3B 88 80 01 E1 F3 5E 13 77 83 00 00 A2", $"ePerso - German ID card (issued 2013)" },
            new List<string> () { "3B 88 80 01 E1 F3 5E 13 77 83 D5 00 77", $"ePerso - German ID card (issued 2011)" },
            new List<string> () { "3B 88 81 31 20 55 00 57 69 6E 43 61 72 64 29", $"SmartCard for Windows 1.0" },
            new List<string> () { "3B 88 8E FE 53 2A 03 1E 04 92 80 00 41 32 36 01 11 E4", $"German C-Netz SIM card / TeleKarte for mobile phones or phone boxes - 1990s (Telecommunication)" },
            new List<string> () { "3B 89 00 56 43 41 52 44 5F 4E 53 53", $"Coolkey emulated card using virtual viewer with nssdb (eID)" },
            new List<string> () { "3B 89 00 91 26 91 06 00 01 22 01 00", $"BT Cellnet SIM" },
            new List<string> () { "3B 89 00 91 26 91 09 00 01 43 02 00", $"O2 (UK) SIM - Pay As You Go (Telecommunication)" },
            new List<string> () { "3B 89 40 14 47 47 32 36 4D 35 32 38 30", $"GSM-SIM e-plus (1800MHz)" },
            new List<string> () { "3B 89 80 01 00 64 04 15 01 02 00 90 00 EE", $"German Passport (issued Apr 2007)" },
            new List<string> () { "3B 89 80 01 00 64 04 28 03 02 00 90 00 D1", $"TCOS 3.0 release 2 on Philips P5CD080 (PKI)" },
            new List<string> () { "3B 89 80 01 02 4D 4B 4D 57 4B 53 4B 54 11", $"Polish National ID (eID)" },
            new List<string> () { "3B 89 80 01 31 31 31 30 54 43 4F 53 50 52", $"Seven-Eleven Value Card / Smart Purse - Thailand (Contactless) (Other)" },
            new List<string> () { "3B 89 80 01 32 33 32 43 53 43 53 33 36 3E", $"CSCS Smartcard (passport)" },
            new List<string> () { "3B 89 80 01 41 43 4F 53 4A 76 31 30 31 1A", $"ACS ACOSJ (Combi) (JavaCard)" },
            new List<string> () { "3B 89 80 01 43 41 52 44 41 47 41 46 43 5E", $"Student ID of University Duisburg-Essen (Other)" },
            new List<string> () { "3B 89 80 01 43 4C 61 69 72 65 32 20 36 3C", $"Fidor Smartcard Mastercard/Maestro (Bank)" },
            new List<string> () { "3B 89 80 01 43 4C 61 69 72 65 33 20 36 3D", $"MasterCard with PayPass issued by Commerbank AG (Germany) (Bank)" },
            new List<string> () { "3B 89 80 01 45 4D 56 20 30 33 20 20 06 73", $"Lufthansa Miles & More Gold MasterCard PayPass (old one){Environment.NewLine}Found a reference pointing to NXP" },
            new List<string> () { "3B 89 80 01 45 50 43 4F 53 56 35 2E 39 36", $"EPCOSV5.9 (eID)" },
            new List<string> () { "3B 89 80 01 4A 43 4F 50 32 34 32 52 32 4A", $"NXP JCOP J3D" },
            new List<string> () { "3B 89 80 01 4A 43 4F 50 32 34 32 52 33 4B", $"Feitian ePass FIDO-NFC (passport)" },
            new List<string> () { "3B 89 80 01 4A 43 4F 50 33 31 56 32 32 4A", $"JCOP 31 v22 72K (with Mifare 1K emulation) - RFID I/F" },
            new List<string> () { "3B 89 80 01 4A 43 4F 50 34 31 56 32 32 4D", $"JCOP41 Cards (not supported, but recognized by Classic Client){Environment.NewLine}New Zealand e-Passport{Environment.NewLine}Philips Semiconductor JCOP41V22" },
            new List<string> () { "3B 89 80 01 4D 54 43 4F 53 70 02 01 04 39", $"Tajikistan passport (passport)" },
            new List<string> () { "3B 89 80 01 4D 54 43 4F 53 73 01 02 01 3F", $"Contactless MTCOS" },
            new List<string> () { "3B 89 80 01 4D 54 43 4F 53 73 02 01 04 3A", $"Biometric passport of Czech republic{Environment.NewLine}Biometric passport of Libya{Environment.NewLine}Biometric passport of United Kingdom" },
            new List<string> () { "3B 89 80 01 4D 54 43 4F 53 73 02 02 04 39", $"Berlin-Brandenburg public transport eticket fahrCard (Transport){Environment.NewLine}German eTicketing SAM (Transport)" },
            new List<string> () { "3B 89 80 01 4D 54 43 4F 53 73 02 05 04 3E", $"VGN eTicket (regional public transport for Nuremberg, Germany) (Transport)" },
            new List<string> () { "3B 89 80 01 50 56 5F 4A 33 41 30 34 30 5D", $"Java Card J3A040 (JavaCard)" },
            new List<string> () { "3B 89 80 01 53 50 49 56 4B 45 59 37 30 44", $"Taglio PIVkey C980 smart card (Other)" },
            new List<string> () { "3B 89 80 01 53 50 4B 32 35 44 49 90 00 DA", $"SPK 2.5 D1" },
            new List<string> () { "3B 89 80 01 53 77 69 73 73 50 61 73 73 74", $"SwissPass - key to mobility and leisure in Switzerland (Transport)" },
            new List<string> () { "3B 89 80 01 66 49 46 58 42 53 32 47 6F 32", $"Blockchain Security 2Go (JavaCard)" },
            new List<string> () { "3B 89 80 01 66 4A 41 43 4F 53 32 2E 30 16", $"MasterCard, Credit Card by TargoBank, Germany -- (Bank)" },
            new List<string> () { "3B 89 80 01 66 52 57 45 32 50 52 4F 4D 1C", $"NFC enabled SIM card. (Telecommunication){Environment.NewLine}Electic vehicle charging card of the EMSP Chargepoint" },
            new List<string> () { "3B 89 80 01 66 53 43 4F 4E 45 44 32 30 7C", $"Alioth 98886 chip (Bank)" },
            new List<string> () { "3B 89 80 01 80 57 45 4D 56 50 52 4F 43 8F", $"BNP Paribas Visa Classic Card (NFC) (Bank)" },
            new List<string> () { "3B 89 80 01 80 57 4A 4D 56 50 72 6F 33 F0", $"PayPal UK MasterCard Contacless" },
            new List<string> () { "3B 89 80 01 80 57 4A 4D 56 76 35 2E 30 D3", $"PayPal Access Business MasterCard (contactless) (Bank){Environment.NewLine}Coinbase Card, Visa Debit (Paysafe / TCT FCU) (Bank)" },
            new List<string> () { "3B 89 80 01 80 64 16 04 01 86 82 90 00 6B", $"LUKB (Bank)" },
            new List<string> () { "3B 89 80 01 80 64 16 04 02 82 82 90 00 6C", $"Maestro card (from Mastercard) used by BCGE (switzerland) bank (Bank)" },
            new List<string> () { "3B 89 80 01 80 67 04 12 B0 03 05 01 02 4C", $"Austrian Passport" },
            new List<string> () { "3B 8A 00 91 01 00 16 00 01 16 01 00 96", $"GSM-SIM T-Mobil D1 (900MHz)" },
            new List<string> () { "3B 8A 00 91 01 00 16 00 01 20 01 00 96", $"GSM-SIM T-D1 prepaid (Xtra)" },
            new List<string> () { "3B 8A 00 91 01 00 16 00 01 20 02 00 96", $"GSM-SIM (900MHz) card of the carrier t-mobile for their cellular network (phase 2+ with 3V)" },
            new List<string> () { "3B 8A 00 91 91 00 17 00 01 07 02 00 96", $"GSM-SIM T-Mobile Austria" },
            new List<string> () { "3B 8A 00 91 91 00 17 00 01 07 03 00 96", $"T-Mobile prepaid 2G SIM" },
            new List<string> () { "3B 8A 00 91 91 00 17 00 01 08 01 00 96", $"GSM-SIM T-Mobile Austria" },
            new List<string> () { "3B 8A 00 92 01 26 91 07 00 01 93 03 00", $"Kazakhstan driver licence" },
            new List<string> () { "3B 8A 00 92 02 03 91 08 00 01 01 04 00", $"32K SIM Card from the austrian telecom \"ONE\"" },
            new List<string> () { "3B 8A 00 92 02 65 91 09 00 01 01 01 00", $"Romania unknown sim/usim card (Telecommunication)" },
            new List<string> () { "3B 8A 01 43 4F 50 34 31 56 32 32 31 FF 4A", $"JCOP41 Cards (not supported, but recognized by Classic Client)" },
            new List<string> () { "3B 8A 01 4A 43 4F 50 34 31 56 32 32 31 FF", $"JCOP41" },
            new List<string> () { "3B 8A 80 01 00 31 C1 73 C8 40 00 00 90 00 90", $"NXP PN65o's Internal Secure Element in card emulation mode. (Other)" },
            new List<string> () { "3B 8A 80 01 00 64 05 5C 02 03 31 80 90 00 16", $"T-System Contactless Netkey Card" },
            new List<string> () { "3B 8A 80 01 00 64 05 76 02 03 31 80 90 00 3C", $"T-System Contactless TCOS Min" },
            new List<string> () { "3B 8A 80 01 4A 33 41 30 38 31 56 32 34 31 6B", $"NXP JCOP CJ3A081 (NFC) (JavaCard){Environment.NewLine}NXP JCOP 80K - J3A081V241" },
            new List<string> () { "3B 8A 80 01 4A 43 4F 50 33 31 56 32 33 32 7A", $"Snapper New Zealand (JCOP)" },
            new List<string> () { "3B 8A 80 01 4A 43 4F 50 34 31 56 32 32 31 7F", $"JCOP41 Cards (not supported, but recognized by Classic Client){Environment.NewLine}NXP JCOP 41 v2.2.1 72k RFID I/F" },
            new List<string> () { "3B 8A 80 01 53 45 20 44 45 53 46 69 72 65 57", $"NXP-Mifare DESFire EV1 2k (used as a company ID card) (eID)" },
            new List<string> () { "3B 8A 80 01 53 4F 53 53 45 02 03 25 01 03 74", $"Super SIM X-SIM 16-in-1 (Telecommunication)" },
            new List<string> () { "3B 8A 80 01 54 69 63 54 6F 6B 20 33 2E 30 08", $"Cryptas TicTok v3 (PKI)" },
            new List<string> () { "3B 8A 80 01 80 31 B8 73 84 01 E0 82 90 00 06", $"German ID Card - Personalausweis" },
            new List<string> () { "3B 8A 80 01 80 31 F8 73 F7 41 E0 82 90 00 75", $"ePerso - German ID card" },
            new List<string> () { "3B 8A 80 01 80 65 A2 01 01 01 3D 72 D6 43 97", $"Gemplus GemXpresso Pro R3 E32 PK (combi){Environment.NewLine}MultiApp ID Dual Citizen EAC 80K CC / IDClassic 3340 (old name: Classic TPC DM) (with MPCOS Applet installed by default) - Contactless Mode with Prox DU" },
            new List<string> () { "3B 8A 80 01 80 65 A2 01 31 01 3D 72 D6 41 A5", $"Resident Identity Card (eID)" },
            new List<string> () { "3B 8B 00 52 75 74 6F 6B 65 6E 6C 74 53 44 E3", $"Aktiv Rutoken Lite SD" },
            new List<string> () { "3B 8B 01 52 74 50 49 4E 50 61 64 20 20 32 9C", $"Aktiv Rutoken PINPad" },
            new List<string> () { "3B 8B 01 52 75 74 6F 6B 65 6E 20 44 53 20 C1", $"Aktiv Rutoken ECP" },
            new List<string> () { "3B 8B 01 52 75 74 6F 6B 65 6E 20 45 43 50 A0", $"Aktiv Rutoken ECP" },
            new List<string> () { "3B 8B 01 52 75 74 6F 6B 65 6E 44 53 42 54 D7", $"Rutoken ECP Bluetooth (eID)" },
            new List<string> () { "3B 8B 01 52 75 74 6F 6B 65 6E 6C 69 74 65 C2", $"Aktiv Rutoken Lite" },
            new List<string> () { "3B 8B 80 01 00 12 23 3F 53 65 49 44 0F 90 00 A0", $"Estonian Identity Card (eID)" },
            new List<string> () { "3B 8B 80 01 00 31 C0 64 08 04 61 00 00 90 00 62", $"NUMBER26 Maestro Card (Bank){Environment.NewLine}American Express credit card for corporations" },
            new List<string> () { "3B 8B 80 01 00 31 C0 64 08 44 03 04 00 90 00 44", $"Credit Card Visa (Other)" },
            new List<string> () { "3B 8B 80 01 00 31 C0 64 08 44 03 12 00 90 00 52", $"Tomorrow Debit Mastercard issued by solarisBank AG (Bank)" },
            new List<string> () { "3B 8B 80 01 00 31 C0 64 08 44 03 13 00 90 00 53", $"Swedbank ISIC (eID)" },
            new List<string> () { "3B 8B 80 01 00 31 C0 64 08 44 03 68 00 90 00 28", $"Advanzia / Gebuhrenfrei.com Mastercard Gold (Bank)" },
            new List<string> () { "3B 8B 80 01 00 31 C0 64 08 44 03 76 00 90 00 36", $"American Express Blue Card (Germany) (Bank){Environment.NewLine}Mastercard issued by OTP Bank (Hungary) (Bank)" },
            new List<string> () { "3B 8B 80 01 00 31 C0 64 08 44 03 93 00 90 00 D3", $"Novacard pp0815-04/20 chip (Bank)" },
            new List<string> () { "3B 8B 80 01 00 31 C0 64 1F 18 01 00 00 90 00 09", $"Student ID card in Poland (eID)" },
            new List<string> () { "3B 8B 80 01 00 31 C0 64 1F 27 01 00 00 90 00 36", $"American Express Platinum (AU Issued) (Bank)" },
            new List<string> () { "3B 8B 80 01 00 31 C0 64 A2 E3 04 E1 82 90 00 29", $"Electronic ID card (eID)" },
            new List<string> () { "3B 8B 80 01 00 31 C0 64 B0 FC 10 00 00 90 00 53", $"Thai Passport 2010, 2011" },
            new List<string> () { "3B 8B 80 01 00 31 C1 64 08 40 21 30 00 90 00 57", $"MOICA Citizen Digital Certificate of Taiwan R.O.C. (PKI)" },
            new List<string> () { "3B 8B 80 01 00 31 C1 64 08 40 22 30 00 90 00 54", $"IDEMIA Cosmo v8.1-n (Other)" },
            new List<string> () { "3B 8B 80 01 00 31 C1 64 08 60 32 06 00 90 00 52", $"Banco CTT (Portugal) contactless VISA Debit card (Bank) (Bank)" },
            new List<string> () { "3B 8B 80 01 00 31 C1 64 08 60 32 12 00 90 00 46", $"AMEX Silver Credit (Bank)" },
            new List<string> () { "3B 8B 80 01 00 31 C1 64 08 60 32 1F 00 90 00 4B", $"Hanseatic Bank Visa Card (Bank)" },
            new List<string> () { "3B 8B 80 01 00 31 C1 64 08 60 32 20 00 90 00 74", $"IDEMIA (Other)" },
            new List<string> () { "3B 8B 80 01 00 31 C1 64 08 92 33 54 00 90 00 F3", $"Italian healthcare card (TS) National Service Card (CNS) (HealthCare)" },
            new List<string> () { "3B 8B 80 01 00 31 C1 64 09 11 21 30 00 90 00 07", $"SmartMX (Other)" },
            new List<string> () { "3B 8B 80 01 00 31 C1 64 09 24 33 1E 00 90 00 0E", $"Cumulus Mastercard (Bank)" },
            new List<string> () { "3B 8B 80 01 00 31 C1 64 09 37 72 13 00 90 00 51", $"French ID Card 2021 (contactless interface) (eID)" },
            new List<string> () { "3B 8B 80 01 00 31 C1 64 09 64 41 36 00 90 00 14", $"Monzo (Bank)" },
            new List<string> () { "3B 8B 80 01 00 64 04 11 01 01 31 80 00 90 00 5A", $"German Passport (issued Nov 2006){Environment.NewLine}United Kingdom e-Passport{Environment.NewLine}Luxembourg passport (2007)" },
            new List<string> () { "3B 8B 80 01 0B 78 80 82 02 44 49 20 30 32 4D 1B", $"Mastercard Debit issued by Raiffeisen bank in Czech Republic" },
            new List<string> () { "3B 8B 80 01 20 85 00 8B 03 0F E0 9A A0 E0 40 52", $"Shanghai Public Transportation Card (Transport)" },
            new List<string> () { "3B 8B 80 01 20 90 00 00 00 00 00 16 14 CD AA DF", $"JCOP 41 IBM card for Guizhou Normal University (JavaCard)" },
            new List<string> () { "3B 8B 80 01 20 90 00 00 00 00 00 C3 A4 CC 09 18", $"ID card (Other)" },
            new List<string> () { "3B 8B 80 01 2A 26 A7 A1 0C 80 41 00 00 07 09 C3", $"T-Mobilitat (Transport)" },
            new List<string> () { "3B 8B 80 01 47 48 41 20 4A 32 34 31 20 50 31 58", $"Republic of Ghana eID (eID)" },
            new List<string> () { "3B 8B 80 01 4E 58 50 2D 4E 46 43 20 32 00 00 38", $"TouchandTravel Touchpoint NFC-Card.{Environment.NewLine}Train-Station in Berlin. Use a NFC-compliant phone to check in for a ticket." },
            new List<string> () { "3B 8B 80 01 50 33 30 38 47 30 50 33 5F 31 30 2B", $"Indonesian ektp (eID)" },
            new List<string> () { "3B 8B 80 01 53 6F 6C 6F 4B 65 79 20 74 61 70 27", $"Solokeys Solo Tap: 2FA device with NFC (Other)" },
            new List<string> () { "3B 8B 80 01 65 4B 54 50 30 44 32 65 4B 54 50 4C", $"NXP smart eID - Indonesia ektp (eID)" },
            new List<string> () { "3B 8B 80 01 80 31 C0 63 05 10 7F 83 00 90 00 61", $"UAB Bank - Prepaid VISA Card (Bank)" },
            new List<string> () { "3B 8B 80 01 80 66 47 50 00 B8 00 7F 82 90 00 2E", $"Italian Card Identity (eID)" },
            new List<string> () { "3B 8B 80 01 80 66 47 50 00 B8 00 94 82 90 00 C5", $"Italian Electronic Contactless Identity Card v. 3.0 (CIE 3.0) (eID)" },
            new List<string> () { "3B 8B 80 01 80 F9 A0 00 00 03 08 00 00 10 00 C8", $"Probably the same as \"JCOP3 SecID P60 CS (JavaCard)\" but mated with a contactless Identiv reader (JavaCard)" },
            new List<string> () { "3B 8B 80 01 86 88 FF 6F 39 1E 74 3C 20 08 00 D3", $"Chinese ICBC (bank)" },
            new List<string> () { "3B 8B 81 31 40 34 53 4D 41 52 54 53 43 4F 50 45 31 6D", $"Zeeland kaart (Telecommunication)" },
            new List<string> () { "3B 8C 01 4D 79 53 6D 61 72 74 4C 6F 67 6F 6E A5", $"EIDVirtual (USB key emulated as a virtual smart card) (PKI)" },
            new List<string> () { "3B 8C 01 80 5A 4E 69 74 72 6F 6B 65 79 20 33 7D", $"\"Nitrokey 3C NFC\" USB authentication and security token (Other)" },
            new List<string> () { "3B 8C 40 FA 80 81 05 52 01 01 A0 00 00 01 50 01", $"Algerian Postal Services Current Account Card (Bank)" },
            new List<string> () { "3B 8C 80 01 04 43 FD .. .. .. .. .. .. .. .. .. ..", $"RFID - NFC Forum tag type 3 (FeliCa)" },
            new List<string> () { "3B 8C 80 01 4F 54 49 44 28 94 B3 C0 01 00 90 00 45", $"Belgian passport (2009-2013)" },
            new List<string> () { "3B 8C 80 01 4F 54 49 44 28 94 F7 C0 00 00 90 00 00", $"French passport (2010-2013)" },
            new List<string> () { "3B 8C 80 01 50 .. .. .. .. E1 F3 5E 11 77 81 E1 ..", $"Spanish eID, Documento Nacional de Identidad (DNIe) (eID)" },
            new List<string> () { "3B 8C 80 01 50 00 00 00 00 00 00 00 00 91 81 A0 ED", $"Belimo VAV-Compact NFC (Other)" },
            new List<string> () { "3B 8C 80 01 50 00 05 02 2D 02 06 00 00 00 81 91 63", $"Local Transport card for Trentino region (Italy) trentino trasporti esercizio (Transport)" },
            new List<string> () { "3B 8C 80 01 50 01 A5 CE 19 00 00 00 00 80 81 71 5E", $"VISA Card from Bank BANQUE POPULAIRE (Bank)" },
            new List<string> () { "3B 8C 80 01 50 01 BA 13 7E 00 00 00 00 B3 71 71 38", $"Mobib (Brussels public transportation card)" },
            new List<string> () { "3B 8C 80 01 50 01 C6 2E 39 00 00 00 00 80 81 71 FD", $"edenred (Loyalty)" },
            new List<string> () { "3B 8C 80 01 50 03 A1 29 CF 00 00 00 00 11 81 81 08", $"rav-kav, Israel transport card (Transport)" },
            new List<string> () { "3B 8C 80 01 50 04 46 3E C3 E1 F3 5E 11 77 81 A1 E8", $"Spanish ID (eID)" },
            new List<string> () { "3B 8C 80 01 50 05 A9 66 96 00 00 00 00 80 81 71 71", $"Hello bank! VISA CLASSIC Card (Bank)" },
            new List<string> () { "3B 8C 80 01 50 06 DC A8 59 00 00 00 00 80 81 71 06", $"VISA Hello bank! (NFC) (Bank)" },
            new List<string> () { "3B 8C 80 01 50 10 73 31 B4 00 00 00 00 B3 71 71 08", $"MiMuovo public transport card used in Italian region Emilia Romagna (Transport)" },
            new List<string> () { "3B 8C 80 01 50 10 B7 6A AE 00 00 00 00 B3 71 71 8D", $"Tisseo (Toulouse) (Transport)" },
            new List<string> () { "3B 8C 80 01 50 10 B9 F9 89 00 00 00 00 B3 71 71 37", $"Toulouse (France) city public transport card called TISSEO Pastel (Transport)" },
            new List<string> () { "3B 8C 80 01 50 10 D6 32 A0 00 00 00 00 B3 71 71 BA", $"MOBIB (STIB) (Transport)" },
            new List<string> () { "3B 8C 80 01 50 18 61 88 CE E1 F3 5E 11 77 81 C7 0E", $"French passport (2007-2008)" },
            new List<string> () { "3B 8C 80 01 50 19 1B 6C C2 00 00 00 00 00 81 77 07", $"Rabobank bankcard (dutch) (Bank)" },
            new List<string> () { "3B 8C 80 01 50 19 E3 BB 3D 00 00 00 00 00 81 77 D7", $"ING/Maestro bank card (Bank)" },
            new List<string> () { "3B 8C 80 01 50 24 AD 64 E1 00 00 00 00 33 81 91 72", $"Italian healthcare + public administration card (HealthCare)" },
            new List<string> () { "3B 8C 80 01 50 26 0D BB 15 00 00 00 00 00 71 81 28", $"Navigo Card (Transport)" },
            new List<string> () { "3B 8C 80 01 50 27 04 00 24 00 00 00 00 00 71 81 AA", $"Navigo pass (Transport)" },
            new List<string> () { "3B 8C 80 01 50 27 22 ED 0D 00 00 00 00 00 71 81 48", $"Navigo (France) transport card (Transport)" },
            new List<string> () { "3B 8C 80 01 50 27 24 26 64 00 00 00 00 00 71 81 EC", $"French Transport Card (Navigo Card) (Transport)" },
            new List<string> () { "3B 8C 80 01 50 27 47 D2 05 00 00 00 00 00 71 81 1A", $"Pass Navigo Découverte (Transport)" },
            new List<string> () { "3B 8C 80 01 50 27 50 38 CE 00 00 00 00 00 71 81 2C", $"Paris transportation card (Pass Navigo) (Transport)" },
            new List<string> () { "3B 8C 80 01 50 27 B1 F7 6B 00 00 00 00 00 71 71 57", $"Navigo (public transportation in Île-de-France), IDF Mobilités (Transport)" },
            new List<string> () { "3B 8C 80 01 50 2C 8D 21 4B 23 18 01 00 77 81 97 CD", $"Indonesian Driver License" },
            new List<string> () { "3B 8C 80 01 50 35 A4 5B 65 00 00 00 00 80 81 71 82", $"Trenitalia cartafreccia (Transport)" },
            new List<string> () { "3B 8C 80 01 50 37 0B 16 BD 31 01 06 01 77 81 77 7C", $"Driver License of Indonesia - SIM (Surat Izin Mengemudi) (Transport)" },
            new List<string> () { "3B 8C 80 01 50 38 0E B2 5B 00 00 00 00 B3 71 71 31", $"BIP (Biglietto Integrato Piemonte) Card, GTT (Gruppo Trasporti Torinese) (Transport)" },
            new List<string> () { "3B 8C 80 01 50 3A 88 EC 29 E1 F3 5E 11 77 81 E1 60", $"DNI electronico (Spanish electronic ID card) (eID)" },
            new List<string> () { "3B 8C 80 01 50 3A 96 4B 00 00 00 00 00 00 81 80 BB", $"Ventra Transit Pass (Transport)" },
            new List<string> () { "3B 8C 80 01 50 3B F0 33 0B 30 AB AB 01 77 81 B7 DE", $"Italian health card - national service card (HealthCare)" },
            new List<string> () { "3B 8C 80 01 50 43 E0 F5 F4 31 01 06 00 77 81 77 48", $"Indonesian Driver License" },
            new List<string> () { "3B 8C 80 01 50 45 53 FF C6 E1 F3 5E 11 77 81 A1 78", $"Electronic DNI (eID)" },
            new List<string> () { "3B 8C 80 01 50 46 E5 70 EC 23 18 01 00 77 81 97 39", $"Indonesian Driver License" },
            new List<string> () { "3B 8C 80 01 50 49 7A 51 77 E1 F3 5E 11 77 81 A5 46", $"USA PASSPORT BOOK ICAO (passport)" },
            new List<string> () { "3B 8C 80 01 50 4B 75 AF 41 E1 F3 5E 11 77 81 A5 83", $"USA PASSPORT BOOK ICAO (passport)" },
            new List<string> () { "3B 8C 80 01 50 53 81 57 36 30 AA AA 01 77 81 D7 FE", $"Indonesian ektp (eID)" },
            new List<string> () { "3B 8C 80 01 50 54 67 13 79 00 00 00 00 F7 81 C1 B3", $"Tessera Sanitaria italian health care card (HealthCare)" },
            new List<string> () { "3B 8C 80 01 50 5C 4B 71 A1 52 74 53 43 77 81 83 D9", $"RUTOKEN ECP 3.0 (PKI)" },
            new List<string> () { "3B 8C 80 01 50 5C F5 A9 45 30 AA AA 01 77 81 D7 08", $"Indonesia ektp (eID)" },
            new List<string> () { "3B 8C 80 01 50 60 5F 2E FA 00 00 00 00 77 81 91 D1", $"Residence Permit (Switzerland) (eID)" },
            new List<string> () { "3B 8C 80 01 50 64 E6 5B 00 00 00 00 00 00 81 80 85", $"Chicago CTA Ventra Transit card" },
            new List<string> () { "3B 8C 80 01 50 71 0C F3 C8 00 00 00 00 B3 71 71 A8", $"MOBIB CARD BELGIUM (Transport)" },
            new List<string> () { "3B 8C 80 01 50 77 3B 2D BD 00 00 00 11 00 81 85 94", $"Texas Instruments Dynamic NFC Interface Transponder (RF430CL330H)" },
            new List<string> () { "3B 8C 80 01 50 78 4B 2C CB 00 00 00 00 B3 71 71 3A", $"... (Transport)" },
            new List<string> () { "3B 8C 80 01 50 78 F8 72 17 E1 F3 5E 11 77 81 A5 B6", $"US (passport)" },
            new List<string> () { "3B 8C 80 01 50 79 19 60 01 00 DD A6 11 F7 71 85 35", $"Transport Traway Montpellier France (Transport)" },
            new List<string> () { "3B 8C 80 01 50 7A A4 40 07 23 18 01 00 77 81 97 9F", $"Indonesian Driver License" },
            new List<string> () { "3B 8C 80 01 50 7E 00 71 D2 00 00 00 00 00 71 71 80", $"Unica (= Just one) joined train and public transport card for Italian region Emilia Romagna (evolution of MiMuovo) (Transport)" },
            new List<string> () { "3B 8C 80 01 50 7F 9C 66 8A 00 00 00 00 00 81 87 54", $"NFC Mastercard issued by CSOB bank Czech Republic, first 4 digits 5168" },
            new List<string> () { "3B 8C 80 01 50 89 DC A9 6E 00 00 00 00 80 81 71 BF", $"Cartafreccia VISA (Italian Railways Prepaid + Loyalty Card) (Bank)" },
            new List<string> () { "3B 8C 80 01 50 91 5D 71 29 E1 F3 5E 11 77 81 A1 C3", $"Spanish eID, Documento Nacional de Identidad (DNIe) (eID)" },
            new List<string> () { "3B 8C 80 01 50 93 19 5E 30 00 00 00 00 00 71 71 B9", $"OPUS STM CANADA (Transport)" },
            new List<string> () { "3B 8C 80 01 50 93 3C CC 05 00 00 00 00 00 71 71 3B", $"OPUS Card, public transport (subway) of Montreal (Transport)" },
            new List<string> () { "3B 8C 80 01 50 A2 21 FA A0 31 CC CC 01 77 81 C1 83", $"Morpho (eID)" },
            new List<string> () { "3B 8C 80 01 50 AC 03 9D 44 E1 F3 5E 11 77 81 A1 21", $"Spanish DNIe (eID)" },
            new List<string> () { "3B 8C 80 01 50 B1 56 D8 BB 00 00 00 11 00 81 85 CC", $"TI rf430cl330h (Other)" },
            new List<string> () { "3B 8C 80 01 50 C0 98 37 3F 00 00 00 00 91 71 71 9C", $"PassPass card issued by Transpole : the public transportation service of Lille, France, and SNCF : the french national railway. (Transport)" },
            new List<string> () { "3B 8C 80 01 50 C0 AA 57 4E 00 00 00 00 B3 71 71 9D", $"Transportation Pastel Card from Toulouse (France) (Transport)" },
            new List<string> () { "3B 8C 80 01 50 C0 C8 94 D3 00 00 00 00 B3 71 71 A1", $"pastel (Transport)" },
            new List<string> () { "3B 8C 80 01 50 C0 CA 56 8F 00 00 00 00 91 71 71 1F", $"Ginko card, France - Besançon transport company (Transport)" },
            new List<string> () { "3B 8C 80 01 50 C0 E4 50 CA 00 00 00 00 91 71 71 72", $"Transportation card for Lille (France) (Transport)" },
            new List<string> () { "3B 8C 80 01 50 C0 EA 9C BB 00 00 00 00 B3 71 71 E3", $"Tisseo (Toulouse) (Transport)" },
            new List<string> () { "3B 8C 80 01 50 C0 F1 DE 70 00 00 00 00 91 71 71 53", $"isodep, NfcB (Transport)" },
            new List<string> () { "3B 8C 80 01 50 C1 10 BB A9 00 00 00 00 91 71 71 0F", $"Divia card (passport)" },
            new List<string> () { "3B 8C 80 01 50 C1 1B A3 F1 00 00 00 00 91 71 71 44", $"Tramway (PKI)" },
            new List<string> () { "3B 8C 80 01 50 C1 41 64 E3 00 00 00 00 00 71 71 5A", $"Navigo Annuel (France) (Transport)" },
            new List<string> () { "3B 8C 80 01 50 C1 4C FD 23 00 00 00 00 00 71 71 0E", $"Navigo (Transport)" },
            new List<string> () { "3B 8C 80 01 50 C1 6A 34 72 00 00 00 00 00 71 71 B0", $"Navigo pass (RATP) (Transport)" },
            new List<string> () { "3B 8C 80 01 50 C1 7B 55 BA 00 00 00 00 00 71 71 08", $"Navigo Easy (Paris public transportation) (Transport)" },
            new List<string> () { "3B 8C 80 01 50 C1 7D A8 CA 00 00 00 00 00 71 71 83", $"Navigo Easy (France) transport card (Transport)" },
            new List<string> () { "3B 8C 80 01 50 C2 B9 36 86 00 00 00 00 00 71 71 96", $"Passe Navigo (Transport)" },
            new List<string> () { "3B 8C 80 01 50 C3 26 AF 0C 00 00 00 00 00 71 71 1B", $"Navigo Mobility Paris transport's Card (Transport)" },
            new List<string> () { "3B 8C 80 01 50 C7 25 1C 5A 00 00 00 11 F7 81 81 1F", $"MOBIB Belgian public transport Card (Transport)" },
            new List<string> () { "3B 8C 80 01 50 CA 24 51 3E 00 00 00 11 F7 81 81 3A", $"belgian mobib transportation card (Transport)" },
            new List<string> () { "3B 8C 80 01 50 CB FB 07 7E 00 00 00 00 80 81 E1 F4", $"Samsung Digital Center in Seul Access ID card for guests (eID)" },
            new List<string> () { "3B 8C 80 01 50 D5 40 4F 23 1C 00 00 11 77 81 85 DA", $"CEPAS Card (Concession card issued by Land Transport Authority Singapore) (Transport)" },
            new List<string> () { "3B 8C 80 01 50 D9 4E 7D 00 00 00 00 00 00 81 80 B6", $"Chicago CTA Ventra Transit card (Transport)" },
            new List<string> () { "3B 8C 80 01 50 DF 4C 85 2C 00 00 00 00 00 81 77 91", $"SNS Bank Netherlands (Bank)" },
            new List<string> () { "3B 8C 80 01 50 E2 F8 28 2E 00 00 00 00 00 81 87 47", $"ING Maestro Debit Card (Bank)" },
            new List<string> () { "3B 8C 80 01 50 EB 5E 6A 12 00 00 00 00 00 81 77 66", $"Maestro card (Bank)" },
            new List<string> () { "3B 8C 80 01 50 F2 AD 19 D7 00 00 00 00 00 81 77 3A", $"ING Maestro Debit Card (Bank)" },
            new List<string> () { "3B 8C 80 01 50 F5 6F F8 2B E1 F3 5E 11 33 81 C7 3C", $"ID of the Republic of Kazakhstan Ministry of Internal Affairs of the Republic of Kazakhstan (eID)" },
            new List<string> () { "3B 8C 80 01 50 F6 D9 14 2C 00 00 00 00 00 81 77 BC", $"ING (NL) Maestro (Bank)" },
            new List<string> () { "3B 8C 80 01 50 F6 DC FC 13 23 18 01 00 77 81 97 C3", $"mifare (Transport)" },
            new List<string> () { "3B 8C 80 01 50 F9 F3 60 D9 E1 F3 5E 11 77 81 A1 E4", $"DNI electronico (Spanish electronic ID card) (eID)" },
            new List<string> () { "3B 8C 80 01 50 FE 51 56 9F 00 00 00 00 33 81 91 18", $"Repubblica Italiana - Tessera Sanitaria (HealthCare)" },
            new List<string> () { "3B 8C 80 01 50 FE 89 27 67 11 00 00 11 77 81 81 1D", $"\"Carta Mobile\" bus card by CTT (Tuscany's bus company) (Transport)" },
            new List<string> () { "3B 8C 80 01 50 FF FF FF FF FF FF FF 22 00 10 51 C1", $"Printer ribbon tag (Other)" },
            new List<string> () { "3B 8C 80 01 50 FF FF FF FF FF FF FF 33 00 10 51 D0", $"Atmel AT88SC0808CRF CryptoRF® EEPROM Memory (Other)" },
            new List<string> () { "3B 8C 80 01 59 75 62 69 6B 65 79 4E 45 4F 72 33 58", $"Yubikey Neo" },
            new List<string> () { "3B 8C 80 01 59 75 62 69 6B 65 79 4E 45 4F 72 FF 94", $"Yubikey Neo via NFC reader (Other)" },
            new List<string> () { "3B 8C 80 01 80 5A 41 4B 44 65 44 4C 76 31 2E 30 AD", $"Electronic driving license card" },
            new List<string> () { "3B 8C 80 01 80 64 11 65 01 90 73 00 00 00 81 07 F9", $"Universal Electronic Card (UEC) Russian (passport)" },
            new List<string> () { "3B 8C 80 01 80 91 E1 65 77 01 01 03 06 82 90 00 F8", $"french BIO Passeport (2006)" },
            new List<string> () { "3B 8C 80 01 80 91 E1 65 D0 00 43 00 00 82 90 00 19", $"French passport (issued in late 2008)" },
            new List<string> () { "3B 8C 80 01 80 91 E1 65 D0 00 46 00 00 82 90 00 1C", $"US passport (2009)" },
            new List<string> () { "3B 8C 80 01 90 67 46 4A 00 64 16 06 F2 72 7E 00 7C", $"PIVKey C910 (PKI)" },
            new List<string> () { "3B 8C 80 01 90 67 46 4A 00 68 08 06 00 00 00 00 90", $"Feitian JavaCard - RFID I/F (JavaCard)" },
            new List<string> () { "3B 8C 80 01 90 67 46 4A 01 00 36 06 00 00 00 00 C7", $"A40CR (eID)" },
            new List<string> () { "3B 8D 01 80 FB A0 00 00 03 97 42 54 46 59 04 01", $"Microsoft Virtual Smart Card 0 (PKI)" },
            new List<string> () { "3B 8D 01 80 FB A0 00 00 03 97 42 54 46 59 04 01 CF", $"Microsoft Virtual Smartcard Provider shared through VMWare Workstation. (Other)" },
            new List<string> () { "3B 8D 80 01 00 73 C8 00 13 64 47 37 42 37 00 90 00 55", $"TD Canada Trust Visa" },
            new List<string> () { "3B 8D 80 01 00 73 C8 00 13 64 54 37 41 38 00 90 00 4A", $"Visa Debit (ING-DiBa) (Bank){Environment.NewLine}Visa Debit Card with NFC payment function (Consorsbank)" },
            new List<string> () { "3B 8D 80 01 00 73 C8 00 13 64 54 37 42 37 00 90 00 46", $"pay (Bank)" },
            new List<string> () { "3B 8D 80 01 00 73 C8 00 13 64 54 37 43 33 00 90 00 43", $"Deutsche Bank Debit MasterCard (Bank)" },
            new List<string> () { "3B 8D 80 01 00 73 C8 00 13 64 54 37 43 35 00 90 00 45", $"Student ID card in Poland (eID)" },
            new List<string> () { "3B 8D 80 01 00 73 C8 00 13 64 54 37 44 33 00 90 00 44", $"master cRD (Bank){Environment.NewLine}TD MasterCard{Environment.NewLine}Tangerine MasterCard" },
            new List<string> () { "3B 8D 80 01 00 73 C8 00 13 64 54 37 47 31 00 90 00 45", $"Tangerine ATM/ABM Card" },
            new List<string> () { "3B 8D 80 01 00 85 14 10 10 85 01 11 20 02 75 90 00 CF", $"Sahl Payment Card (Other)" },
            new List<string> () { "3B 8D 80 01 0D 78 80 84 02 00 73 C8 40 13 00 90 FF F8", $"Nokia 6212 phone seen as NFC device" },
            new List<string> () { "3B 8D 80 01 0D 78 F7 B1 02 4A 43 4F 50 76 32 34 31 6A", $"Electronic Identity For Students at university (eID)" },
            new List<string> () { "3B 8D 80 01 49 46 58 2D 6A 63 33 30 31 67 70 32 32 5A", $"Degussa Bank Corporate MasterCard (Bank)" },
            new List<string> () { "3B 8D 80 01 53 4C 4A 35 32 47 78 78 79 79 79 7A 52 48", $"cipurse (Other)" },
            new List<string> () { "3B 8D 80 01 54 41 58 54 43 4F 53 4E 20 17 03 07 33 04", $"Contactless Java Card v.2.2, GP version 2.2.1 with a NDEF storage applet installed. (JavaCard)" },
            new List<string> () { "3B 8D 80 01 73 66 74 65 2D 63 64 30 38 30 2D 6E 66 3F", $"G&D SmartCafe Expert 3.2 80K Dual" },
            new List<string> () { "3B 8D 80 01 80 31 80 65 B0 07 02 02 89 83 00 90 00 75", $"JCOP30 contactless interface" },
            new List<string> () { "3B 8D 80 01 80 73 C0 21 C0 57 59 75 62 69 4B 65 79 F9", $"Yubikey 5 NFC (via NFC) (Other)" },
            new List<string> () { "3B 8D 80 01 80 73 C0 21 C0 57 59 75 62 69 4B 65 FF 7F", $"Yubikey 5 NFC via ACR122U (Other)" },
            new List<string> () { "3B 8D 80 01 80 91 E1 31 80 65 B0 83 11 11 AC 83 00 34", $"TOP DM GX4 Cards [TOP DM GX4 on Gemalto Prox]" },
            new List<string> () { "3B 8D 80 01 80 91 E1 65 02 30 78 01 13 73 D4 41 40 67", $"passport (passport)" },
            new List<string> () { "3B 8D 80 01 80 91 E1 65 D0 00 5B 01 02 73 D4 41 40 B7", $"Portuguese Passport (passport)" },
            new List<string> () { "3B 8D 80 01 80 91 E1 65 D0 00 5B 01 03 73 D4 41 40 B6", $"French passport (2010-2011)" },
            new List<string> () { "3B 8E 80 01 00 51 00 63 1F 6D 01 73 9F 20 C0 C0 90 00 12", $"Identity card (eID) Republic of Latvia (eID)" },
            new List<string> () { "3B 8E 80 01 00 51 31 63 1F 59 01 73 9F 20 C0 C0 90 00 17", $"Identity card (eID) Republic of Latvia (eID){Environment.NewLine}French driving license (eID) (contactless)" },
            new List<string> () { "3B 8E 80 01 0E 78 33 C4 02 00 64 04 15 01 02 00 90 FF 95", $"Spanish Passport" },
            new List<string> () { "3B 8E 80 01 10 38 77 A7 80 91 E1 65 D0 00 42 00 00 82 72", $"Czech Republic e-Passport (issued Feb 2009)" },
            new List<string> () { "3B 8E 80 01 11 78 B3 C0 02 4F 54 49 44 28 94 B3 FF FF 0E", $"Civilian passport NFC tag (passport)" },
            new List<string> () { "3B 8E 80 01 13 78 80 72 02 80 31 80 66 B1 84 0C 01 FF 04", $"Optelio Contactless Gemalto (Bank)" },
            new List<string> () { "3B 8E 80 01 13 78 80 80 02 46 49 4F 4D 4B 5F 30 30 31 4E", $"MasterCard/PayPass Card issued by Czech FIO Banka a.s. (contactless chip){Environment.NewLine}note the ASCII string 'FIOK_001N' embedded in ATR" },
            new List<string> () { "3B 8E 80 01 52 46 49 44 49 4F 74 20 4A 43 4F 50 38 30 5A", $"RFIDIOt G&D SmartCafe 80K" },
            new List<string> () { "3B 8E 80 01 53 43 45 36 30 2D 43 44 30 38 31 2D 6E 46 4A", $"SmartCafe Expert 6.0 80K Dual (JavaCard)" },
            new List<string> () { "3B 8E 80 01 80 31 80 65 49 54 4E 58 50 12 0F FF 82 90 F0", $"Italian Electronic Contactless Identity Card v. 3.0 (CIE 3.0) - ICAO 9303 Compliant (eID)" },
            new List<string> () { "3B 8E 80 01 80 31 80 65 49 54 4E 58 50 12 0F FF FF FF E2", $"Italian identity card, 2nd version (eID)" },
            new List<string> () { "3B 8E 80 01 80 31 80 66 40 90 89 12 08 02 83 01 90 00 0B", $"ISO 14443B Type T = CL Infineon Card" },
            new List<string> () { "3B 8E 80 01 80 31 80 66 B0 07 03 00 AC 01 83 00 90 00 52", $"BCA Flazz Card (Bank) www.bca.com" },
            new List<string> () { "3B 8E 80 01 80 31 80 66 B0 84 0C 01 6E 01 83 00 90 00 1D", $"MultiApp Cards (Easy 72K Type B and Combi 72K Type B){Environment.NewLine}Barclaycard Platinum contact/contactless (wave)" },
            new List<string> () { "3B 8E 80 01 80 31 80 66 B0 84 12 01 6E 01 83 00 90 00 03", $"Contactless Barclaycard Visa{Environment.NewLine}MyCiti Transport Card MasterCard PayPass (Cape Town, South Africa)" },
            new List<string> () { "3B 8E 80 01 80 31 80 66 B0 84 16 01 6E 01 83 00 90 00 07", $"Barclaycard Platinum VISA (Bank)" },
            new List<string> () { "3B 8E 80 01 80 31 80 66 B1 84 0C 01 6E 01 83 00 90 00 ..", $"Gemalto Santander Optelio TUI R7 using Contactless interface" },
            new List<string> () { "3B 8E 80 01 80 31 80 66 B1 84 0C 01 6E 01 83 00 90 00 1C", $"UK Lloyds Bank Gold Visa Debit (Contact & Contactless){Environment.NewLine}bPay by barclaycard - contactless pre-paid Visa{Environment.NewLine}BPP Digital pre-paid VISA card (Bank)" },
            new List<string> () { "3B 8E 80 01 80 31 80 66 B1 C5 24 01 00 ED 83 00 90 00 F7", $"Mastercard (Bank)" },
            new List<string> () { "3B 8E 80 01 80 31 81 54 48 53 4D 31 73 80 21 40 81 07 18", $"Smartcard-HSM (Contactless Interface) (PKI)" },
            new List<string> () { "3B 8E 80 01 80 31 81 54 48 53 4D 31 73 80 21 40 FF FF 9E", $"SmartCard-HSM RFID (PKI)" },
            new List<string> () { "3B 8E 80 01 80 91 91 31 C0 64 77 E3 03 00 83 82 90 00 1C", $"Belgian Passport (2005){Environment.NewLine}Thai Passport 2005" },
            new List<string> () { "3B 8E 80 01 80 91 E1 31 C0 64 77 E3 03 00 83 82 90 00 6C", $"Belgian Passport (2006-2007)" },
            new List<string> () { "3B 8F 00 80 31 E0 73 FE 21 11 63 40 72 62 83 07 90 00", $"Beeline (Telecommunication)" },
            new List<string> () { "3B 8F 00 80 31 E0 73 FE 21 13 57 4A 33 0E 20 33 31 00", $"MegaFon RUS (Telecommunication)" },
            new List<string> () { "3B 8F 01 41 56 42 00 00 00 00 00 00 00 00 01 00 00 00 DA", $"AVEST-SYSTEMS AvBign (PKI)" },
            new List<string> () { "3B 8F 01 45 46 4B 00 00 00 00 00 00 00 00 04 00 00 00 C2", $"EfitKey (PKI)" },
            new List<string> () { "3B 8F 01 80 25 A0 00 00 00 56 57 44 4B 34 30 30 06 00 B7", $"SafeNet IKey4000" },
            new List<string> () { "3B 8F 80 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0E", $"Tangem card (Other)" },
            new List<string> () { "3B 8F 80 01 00 00 00 00 00 00 00 00 00 00 00 FF 82 90 00 E3", $"CIE (eID)" },
            new List<string> () { "3B 8F 80 01 00 31 B8 64 04 B0 EC C1 73 94 01 80 82 90 00 0E", $"Contactless CPS v3 Card (Carte de Professionnel de Santé)" },
            new List<string> () { "3B 8F 80 01 00 31 C1 73 C8 00 10 64 57 49 49 43 00 90 00 B5", $"ICC Solutions Card for Certification (Other)" },
            new List<string> () { "3B 8F 80 01 00 31 C1 73 C8 21 10 64 41 4D 31 30 07 90 00 8A", $"master card (Bank)" },
            new List<string> () { "3B 8F 80 01 00 31 C1 73 C8 21 10 64 41 4D 33 30 07 90 00 88", $"ING-VISA-Card (Bank)" },
            new List<string> () { "3B 8F 80 01 00 31 C1 73 C8 21 10 64 41 4D 33 31 07 90 00 89", $"NAB VISA Debit (Bank)" },
            new List<string> () { "3B 8F 80 01 00 31 C1 73 C8 21 10 64 41 4D 33 41 07 90 00 F9", $"Ukrainian International resere bank (ex Sberbak RF) debit card (Bank)" },
            new List<string> () { "3B 8F 80 01 00 31 C1 73 C8 21 10 64 47 4D 34 37 00 90 00 89", $"SpareBank Visa Card, Norway (Bank)" },
            new List<string> () { "3B 8F 80 01 00 31 C1 73 C8 21 10 64 57 4B 31 34 00 90 00 99", $"G&D Sm@rtCafe Card embedded in a wristband (Bank)" },
            new List<string> () { "3B 8F 80 01 00 66 46 53 05 10 00 FF 71 DF 00 00 00 00 00 39", $"JavaCOS A40 dual interface Java card - 64K (JavaCard)" },
            new List<string> () { "3B 8F 80 01 00 B8 54 21 00 00 90 00 00 00 00 00 00 00 00 53", $"netbank Germany, Mastercard (Bank)" },
            new List<string> () { "3B 8F 80 01 00 B8 54 31 00 00 90 00 00 00 00 00 00 00 00 43", $"Monzo MasterCard Contactless (Bank)" },
            new List<string> () { "3B 8F 80 01 00 B8 54 31 00 00 90 00 00 00 00 00 FF FF FF BC", $"VISA Debit issued by WIREX. card made by CONTIS / TAG SYSTEMS (Bank)" },
            new List<string> () { "3B 8F 80 01 31 01 F1 56 40 11 00 19 00 00 00 00 00 00 00 D1", $"Revolut Mastercard (Bank)" },
            new List<string> () { "3B 8F 80 01 31 01 F1 56 40 11 00 19 00 00 00 00 FF FF FF 2E", $"BVG Guthabenkarte (Prepaid Payment Card for Berlin/Brandenburg Public Transport) (Transport)" },
            new List<string> () { "3B 8F 80 01 41 43 4F 53 20 44 49 61 6E 61 31 20 4C 63 36 5B", $"DKB-VISA-Card (Bank)" },
            new List<string> () { "3B 8F 80 01 41 43 4F 53 20 44 49 61 6E 61 31 20 FF FF FF BD", $"DKB Visa Credit Card (Bank)" },
            new List<string> () { "3B 8F 80 01 41 43 4F 53 20 44 49 61 6E 61 32 20 4C 63 36 58", $"comdirect Visa debit (Bank)" },
            new List<string> () { "3B 8F 80 01 43 43 31 69 A9 20 00 00 20 20 20 20 20 20 20 FF", $"Reka (Bank)" },
            new List<string> () { "3B 8F 80 01 43 44 32 69 AB 41 20 20 20 20 20 20 FF FF FF 47", $"BKB VISA Card Switzerland (Bank)" },
            new List<string> () { "3B 8F 80 01 43 55 32 69 AA 20 20 20 20 20 20 20 20 20 20 E9", $"UBS Access Card (Mobile Online Banking, NFC, Switzerland)" },
            new List<string> () { "3B 8F 80 01 45 50 41 00 00 00 00 .. .. .. .. 00 .. .. .. ..", $"Austrian Quick E-purse contactless" },
            new List<string> () { "3B 8F 80 01 4A 43 4F 50 33 20 41 54 53 20 43 48 41 52 53 26", $"Samsung Galaxy Watch Active NFC (Other)" },
            new List<string> () { "3B 8F 80 01 52 46 49 44 49 4F 74 20 4A 43 4F 50 20 33 36 76", $"RFIDIOt JCOP 36K Blank" },
            new List<string> () { "3B 8F 80 01 52 46 49 44 49 4F 74 20 4A 43 4F 50 20 37 32 76", $"RFIDIOt JCOP 72K Blank" },
            new List<string> () { "3B 8F 80 01 52 46 49 44 49 4F 74 20 4A 43 4F 50 37 32 72 24", $"RFIDIOt JCOP 72K RANDOM_UID Blank" },
            new List<string> () { "3B 8F 80 01 56 69 6E 50 61 79 53 79 73 20 50 75 72 73 65 2F", $"JCOP (Other)" },
            new List<string> () { "3B 8F 80 01 80 31 80 65 B0 .. .. .. .. 12 0F FE 82 90 00 ..", $"IDPrime MD 3810 T=Contactless (Prox DU)" },
            new List<string> () { "3B 8F 80 01 80 31 80 65 B0 84 23 27 E5 12 0F FE 82 90 00 7E", $"Gemalto IDPrime MD 3810 Blank Card (Other)" },
            new List<string> () { "3B 8F 80 01 80 31 80 65 B0 84 61 60 FB 12 0F FD 82 90 00 66", $"IDPrime 3930 FIPS Level 2 (Contactless TypeA) (BAI5, BAI7) (PKI)" },
            new List<string> () { "3B 8F 80 01 80 31 80 65 B0 85 03 00 EF 12 0F FE 82 90 00 72", $"Gemalto IDPrime MD 3840" },
            new List<string> () { "3B 8F 80 01 80 31 80 65 B0 85 03 00 EF 12 0F FF 82 90 00 73", $"Grand Duchy of Luxembourg / Identity card with LuxTrust certificate (eID)" },
            new List<string> () { "3B 8F 80 01 80 31 80 65 B0 85 04 00 11 12 0F FF 82 90 00 8A", $"Dutch driver licence (eID){Environment.NewLine}Italian electronic identity card (eID)" },
            new List<string> () { "3B 8F 80 01 80 31 B8 65 B0 85 03 00 EF 12 00 F6 82 90 00 4D", $"Finnish electronic identity card (eID)" },
            new List<string> () { "3B 8F 80 01 80 31 E0 6B 04 21 05 02 72 55 55 55 55 55 55 64", $"Banamex/Citi Bank Bsmart MasterCard Paypass (Bank)" },
            new List<string> () { "3B 8F 80 01 80 31 E0 6B 04 31 05 02 D1 55 55 55 .. .. .. ..", $"Revolut Prepaid Mastercard (Contactless) (Bank)" },
            new List<string> () { "3B 8F 80 01 80 31 E0 6B 06 16 05 02 8C 55 55 55 55 55 55 AF", $"Air Miles American Express card (contactless) (Bank)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 00 00 00 00 00 ..", $"Card name not given (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 01 00 00 00 00 ..", $"MIFARE Classic 1K (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 02 00 00 00 00 ..", $"MIFARE Classic 4K (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 03 00 00 00 00 ..", $"MIFARE Ultralight (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 04 00 00 00 00 ..", $"SLE55R_XXXX (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 06 00 00 00 00 ..", $"SR176 (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 07 00 00 00 00 ..", $"SRI X4K (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 08 00 00 00 00 ..", $"AT88RF020 (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 09 00 00 00 00 ..", $"AT88SC0204CRF (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 0A 00 00 00 00 ..", $"AT88SC0808CRF (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 0B 00 00 00 00 ..", $"AT88SC1616CRF (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 0C 00 00 00 00 ..", $"AT88SC3216CRF (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 0D 00 00 00 00 ..", $"AT88SC6416CRF (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 0E 00 00 00 00 ..", $"SRF55V10P (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 0F 00 00 00 00 ..", $"SRF55V02P (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 10 00 00 00 00 ..", $"SRF55V10S (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 11 00 00 00 00 ..", $"SRF55V02S (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 12 00 00 00 00 ..", $"TAG_IT (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 13 00 00 00 00 ..", $"LRI512 (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 14 00 00 00 00 ..", $"ICODESLI (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 15 00 00 00 00 ..", $"TEMPSENS (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 16 00 00 00 00 ..", $"I.CODE1 (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 17 00 00 00 00 ..", $"PicoPass 2K (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 18 00 00 00 00 ..", $"PicoPass 2KS (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 19 00 00 00 00 ..", $"PicoPass 16K (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 1A 00 00 00 00 ..", $"PicoPass 16Ks (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 1B 00 00 00 00 ..", $"PicoPass 16K(8x2) (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 1C 00 00 00 00 ..", $"PicoPass 16KS(8x2) (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 1D 00 00 00 00 ..", $"PicoPass 32KS(16+16) (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 1E 00 00 00 00 ..", $"PicoPass 32KS(16+8x2) (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 1F 00 00 00 00 ..", $"PicoPass 32KS(8x2+16) (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 20 00 00 00 00 ..", $"PicoPass 32KS(8x2+8x2) (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 21 00 00 00 00 ..", $"LRI64 (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 22 00 00 00 00 ..", $"I.CODE UID (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 23 00 00 00 00 ..", $"I.CODE EPC (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 24 00 00 00 00 ..", $"LRI12 (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 25 00 00 00 00 ..", $"LRI128 (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 26 00 00 00 00 ..", $"Mifare Mini (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 27 00 00 00 00 ..", $"my-d move (SLE 66R01P) (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 28 00 00 00 00 ..", $"my-d NFC (SLE 66RxxP) (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 29 00 00 00 00 ..", $"my-d proximity 2 (SLE 66RxxS) (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 2A 00 00 00 00 ..", $"my-d proximity enhanced (SLE 55RxxE) (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 2B 00 00 00 00 ..", $"my-d light (SRF 55V01P) (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 2C 00 00 00 00 ..", $"PJM Stack Tag (SRF 66V10ST) (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 2D 00 00 00 00 ..", $"PJM Item Tag (SRF 66V10IT) (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 2E 00 00 00 00 ..", $"PJM Light (SRF 66V01ST) (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 2F 00 00 00 00 ..", $"Jewel Tag (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 30 00 00 00 00 ..", $"Topaz NFC Tag (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 31 00 00 00 00 ..", $"AT88SC0104CRF (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 32 00 00 00 00 ..", $"AT88SC0404CRF (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 33 00 00 00 00 ..", $"AT88RF01C (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 34 00 00 00 00 ..", $"AT88RF04C (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 35 00 00 00 00 ..", $"i-Code SL2 (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 36 00 00 00 00 ..", $"MIFARE Plus SL1 2K (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 37 00 00 00 00 ..", $"MIFARE Plus SL1 4K (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 38 00 00 00 00 ..", $"MIFARE Plus SL2 2K (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 39 00 00 00 00 ..", $"MIFARE Plus SL2 4K (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 3A 00 00 00 00 ..", $"MIFARE Ultralight C (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 3B 00 00 00 00 ..", $"FeliCa (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 3C 00 00 00 00 ..", $"Melexis Sensor Tag (MLX90129) (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 .. 00 3D 00 00 00 00 ..", $"MIFARE Ultralight EV1 (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 00 .. .. 00 00 00 00 ..", $"RFID - No standard given (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 00 00 00 00 00 00 00 68", $"NFC/RFID \"Android Beam\" mode on a Sony Xperia Ion" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 01 .. .. 00 00 00 00 ..", $"RFID - ISO 14443 Type A Part 1 (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 02 .. .. 00 00 00 00 ..", $"RFID - ISO 14443 Type A Part 2 (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 03 .. .. 00 00 00 00 ..", $"RFID - ISO 14443 Type A Part 3 (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 03 00 00 00 00 00 00 6B", $"buss/train pass for use with Skånetrafiken (www.skanetrafiken.se) busses and trains.{Environment.NewLine}public library of Düsseldorf{Environment.NewLine}specialized Mifare Ultralight card" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 03 00 01 00 00 00 00 6A", $"NXP/Philips MIFARE Classic 1K (as per PCSC std part3)[pfp=41863]|pp=[t=pfp,i=41863]{Environment.NewLine}Oyster card - Transport for London (first-gen){Environment.NewLine}ACOS5/1k Mirfare{Environment.NewLine}vivotech ViVOcard Contactless Test Card{Environment.NewLine}Bangkok BTS Sky SmartPass{Environment.NewLine}Mifare Classic 1K (block 0 re-writeable){Environment.NewLine}Electic vehicle charging card of the German Telekom, acting as EMSP GetCharge{Environment.NewLine}Electic vehicle charging card of the EMSP Stadtwerke Muenchen (SWM), ladenetz.de, Germany{Environment.NewLine}Electic vehicle charging card of the EMSP EinfachStromLaden of Maingau-Energie, Germany{Environment.NewLine}Scouter carsharing customer card in Germany" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 03 00 02 00 00 00 00 69", $"RFID - ISO 14443 Type A - NXP Mifare card with 4k EEPROM" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 03 00 03 00 00 00 00 68", $"RFID - ISO 14443 Type A - NXP Mifare Ultralight or UltralightC" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 03 00 FF 00 00 00 00 94", $"ACTV (Italy) prepaid transport ticket{Environment.NewLine}\"NFC Tag\" — Sony's \"Smart Tags\"" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 03 F0 04 00 00 00 00 9F", $"NFC FORUM TYPE 1 TAG{Environment.NewLine}www.inovision-group.com/topaz{Environment.NewLine}ISO/IEC 14443A - 96 Bytes read/write NFC/RFID IC mandated by NFC Forum as the Type 1 NFC Forum Tag Format." },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 03 F0 11 00 00 00 00 8A", $"Bangkok Metro (MRT){Environment.NewLine}HTC One X Android phone (European edition \"endaevoru\")" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 03 FF 40 00 00 00 00 D4", $"Nokia N9" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 03 FF 88 00 00 00 00 1C", $"Infineon Mifare SLE 66R35{Environment.NewLine}\"Old\" \"unlimited trips\" card for Moscow Metro (underground)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 05 .. .. 00 00 00 00 ..", $"RFID - ISO 14443 Type B Part 1 (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 06 .. .. 00 00 00 00 ..", $"RFID - ISO 14443 Type B Part 2 (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 07 .. .. 00 00 00 00 ..", $"RFID - ISO 14443 Type B Part 3 (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 07 00 00 00 00 00 00 6F", $"Atmel AT88RF04C CryptoRF" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 07 43 44 60 02 01 E4 EF", $"\"Andante\" Card, Porto (Portugal) metro card. (ISO14443 B CTS/CTM512B) (Transport)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 09 .. .. 00 00 00 00 ..", $"RFID - ISO 15693 Part 1 (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 0A .. .. 00 00 00 00 ..", $"RFID - ISO 15693 Part 2 (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 0A 00 1C 00 00 00 00 7E", $"RFID - HID iCLASS 16K CL" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 0B .. .. 00 00 00 00 ..", $"RFID - ISO 15693 Part 3 (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 0B 00 00 00 00 00 00 63", $"RFID - ISO 15693 - EM Microelectronic-Marin SA" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 0B 00 0E 00 00 00 00 6D", $"RFID - ISO 15693 - Infineon" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 0B 00 12 00 00 00 00 71", $"RFID - ISO 15693 - Texas Instrument" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 0B 00 13 00 00 00 00 70", $"Discovery kit for M24LR04E" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 0B 00 14 00 00 00 00 77", $"Philips ICode{Environment.NewLine}RFID - ISO 15693 - Philips Semiconductors" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 0C .. .. 00 00 00 00 ..", $"RFID - ISO 15693 Part 4 (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 0D .. .. 00 00 00 00 ..", $"Contact (7816-10) I2C (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 0E .. .. 00 00 00 00 ..", $"Contact (7816-10) Extended I2C (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 0F .. .. 00 00 00 00 ..", $"Contact (7816-10) 2WBP (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 10 .. .. 00 00 00 00 ..", $"RFID - FeliCa compatible (as per PCSC std part3){Environment.NewLine}Contact (7816-10) 3WBP (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 11 00 3B 00 00 00 00 42", $"RFID - FeliCa (generic) (as per PCSC std part3){Environment.NewLine}Suica public transit card (Japan IC system){Environment.NewLine}(also: Hayakaken, ICOCA, Kitaca, manaca, nimoca, PASMO, PiTaPa, SUGOCA, TOICA){Environment.NewLine}Octopus, MTR network from Hong Kong, 2014" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 40 .. .. 00 00 00 00 ..", $"RFID - Low Frequency < 135 kHz (as per PCSC std part3)" },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 00 03 06 40 00 00 00 00 00 00 28", $"HID Proximity. Used to access buildings. Reference on the card \"HID0008P\"." },
            new List<string> () { "3B 8F 80 01 80 4F 0C A0 00 1A 00 00 00 00 78", $"iclass 16k cl (eID)" },
            new List<string> () { "3B 8F 80 01 80 5A 08 03 03 00 00 00 01 52 43 21 82 90 00 FF", $"Carte Mode Pass (Used in Clermont-Ferrand, France, to store personal{Environment.NewLine}information and T2C subscription. T2C is the public transport{Environment.NewLine}company of Clermont-Ferrand)" },
            new List<string> () { "3B 8F 80 01 80 5A 08 03 03 00 00 00 01 D3 37 72 82 90 00 59", $"French Transport Card Pass'bus (used in Metz, France)" },
            new List<string> () { "3B 8F 80 01 80 5A 08 03 03 00 00 00 02 B3 6C 53 82 90 00 40", $"Modalis: transport card for Gironde buses (France) (Transport)" },
            new List<string> () { "3B 8F 80 01 80 5A 08 03 04 00 02 00 24 E2 79 78 82 90 00 0C", $"Paris Navigo card 14443 B' (Innovatron - Calypso)" },
            new List<string> () { "3B 8F 80 01 80 66 B0 07 01 01 07 .. .. .. .. .. .. 90 00 ..", $"Gemalto Santander Optelio TUI R7 with WG10 customized using Contactless interface" },
            new List<string> () { "3B 8F 80 01 80 73 CC 91 CB F9 A0 00 00 03 08 00 00 10 00 29", $"NIST demo PIV card (eID)" },
            new List<string> () { "3B 8F 80 01 80 91 E1 31 80 65 B0 83 11 00 AC 83 00 90 00 B7", $"TOP DM GX4 Cards [TOP DM GX4 - contact interface]{Environment.NewLine}GemCombiXpresso R4 72K (contactless interface)" },
            new List<string> () { "3B 8F 80 01 80 91 E1 31 80 65 B0 83 11 11 AC 83 00 90 00 A6", $"TOP DM GX4 Cards [TOP DM GX4 on Omnikey]{Environment.NewLine}GEMALTO WM GX4 72 DHS TSA (contactless interface)" },
            new List<string> () { "3B 8F 80 01 80 91 E1 31 80 65 B0 83 11 11 E5 83 00 90 00 EF", $"TOP DL V2 Cards" },
            new List<string> () { "3B 8F 80 01 80 91 E1 31 80 65 B0 83 11 17 E5 83 00 90 00 E9", $"IDPrime PIV Card v2.0 AES SCP03 (eID)" },
            new List<string> () { "3B 8F 80 01 80 91 E1 31 80 65 B0 85 02 00 CF 83 00 90 00 C1", $"Gemalto IDCore 3010 CC (JavaCard){Environment.NewLine}MultiApp ID Dual Citizen EAC 80K CC / IDClassic 3340 (old name: Classic TPC DM) (with IAS Applet V3) - Contactless Mode" },
            new List<string> () { "3B 8F 80 01 80 91 E1 31 80 65 B0 85 02 00 E9 83 00 90 00 E7", $"MultiApp ID Dual Citizen EAC 144K CC (with IAS Applet V3) -Contactless Mode" },
            new List<string> () { "3B 8F 80 01 80 91 E1 31 98 65 B0 85 03 00 EF 73 94 41 C0 8D", $"Italian Passport (passport)" },
            new List<string> () { "3B 8F 80 01 80 91 E1 31 98 65 B0 85 03 00 EF 73 94 41 FF B2", $"Italian Passport (passport)" },
            new List<string> () { "3B 8F 80 01 80 91 E1 31 D8 65 B2 8C 01 00 07 73 C4 41 E0 5C", $"Portuguese epassport (passport)" },
            new List<string> () { "3B 8F 80 01 86 84 43 54 44 4E 40 9F 3E C4 0D 68 28 04 00 7D", $"Access card to the underground network of guangzhou (Transport)" },
            new List<string> () { "3B 8F 80 01 FF 43 72 79 70 74 6E 6F 78 46 49 44 4F 32 30 C2", $"Fast Identification Online card (FIDO2) from Cryptnox manufacturer (Other)" },
            new List<string> () { "3B 8F 80 01 FF 43 72 79 70 74 6E 6F 78 46 49 44 FF FF FF 70", $"CRYPTNOX FIDO2 CARD (Other)" },
            new List<string> () { "3B 90 16 01 87", $"BIFIT USB-Token iBank2key" },
            new List<string> () { "3B 90 18 01 89", $"IIT E.Key Almaz-1C 00 00 (Other)" },
            new List<string> () { "3B 90 95 80 11 FE 6A", $"JC30M48CR JavaCard (JavaCard)" },
            new List<string> () { "3B 90 95 80 1F C3 59", $"Dai Nippon Printing Co., DNP Standard-J T3.1" },
            new List<string> () { "3B 90 96 81 11 FE 68", $"Xirka (eID)" },
            new List<string> () { "3B 91 94 80 1F 03 23 BA", $"China black(COS) SIM, does not support clock stop" },
            new List<string> () { "3B 93 11 00 00 32 00", $"01-3936b2013 (Pay TV)" },
            new List<string> () { "3B 94 18 81 B1 80 7D 1F 03 19 C8 00 50 DC", $"GoldKey Security PIV Token" },
            new List<string> () { "3B 94 95 81 01 46 54 56 01 C4", $"blank J3H145 card (Other)" },
            new List<string> () { "3B 95 .. 40 FF 62 01 01 .. ..", $"Schlumberger Cryptoflex e-gate" },
            new List<string> () { "3B 95 13 81 01 80 73 FF 01 00 0B", $"vsmartcard - iso7816 (Other)" },
            new List<string> () { "3B 95 15 40 .. 68 01 02 .. ..", $"Schlumberger CryptoFlex 8k v2" },
            new List<string> () { "3B 95 15 40 FF 63 01 01 00 00", $"Cryptoflex 16K" },
            new List<string> () { "3B 95 18 40 FF 62 01 02 01 04", $"Schlumberger Cryptoflex 32K e-gate" },
            new List<string> () { "3B 95 18 40 FF 62 04 01 01 05", $"Schlumberger CryptoFlex 32Ko V1" },
            new List<string> () { "3B 95 18 40 FF 64 02 01 01 02", $"Schlumberger CryptoFlex 32Ko" },
            new List<string> () { "3B 95 94 40 FF 63 01 01 02 01", $"Schlumberger Cryptoflex 16Ko" },
            new List<string> () { "3B 95 95 40 FF AE 01 01 02 03", $"Axalto Cyberflex Access 64K v2a SM 2.3" },
            new List<string> () { "3B 95 95 40 FF AE 01 03 00 00", $"Axalto - Cyberflex Access v2c 64K{Environment.NewLine}Gemalto TOP IM FIPS CY2 (product code HWP115291A)" },
            new List<string> () { "3B 95 95 40 FF D0 00 1A 01 01", $"Cyberflex Access 64k (v3)" },
            new List<string> () { "3B 95 95 40 FF D0 00 31 01 01", $"Cyberflex Access E-gate V3" },
            new List<string> () { "3B 95 95 40 FF D0 00 52 01 02", $"CHIFA (Child Healthcare Information For All?) (HealthCare)" },
            new List<string> () { "3B 95 95 40 FF D0 00 54 01 3.", $"Portuguese identity card" },
            new List<string> () { "3B 95 95 80 11 FE 54 41 43 48 4F 3E", $"Russian Federation driver card for the digital tachograph (Other)" },
            new List<string> () { "3B 95 96 00 70 64 43 4F 53", $"Ticket Restaurant Card (Other)" },
            new List<string> () { "3B 95 96 40 F0 01 13 0A 0A 1D", $"xcrypt (Pay TV)" },
            new List<string> () { "3B 95 96 40 F0 0F 10 0A 09 6A", $"Zain Usim Card (Telecommunication){Environment.NewLine}www.qariya.com" },
            new List<string> () { "3B 95 96 80 B1 FE 55 1F C7 47 72 61 63 65 13", $"IClass SE Processor (Other)" },
            new List<string> () { "3B 95 96 C0 F0 1F C2 0F 10 0A 0A 16", $"viettel (Telecommunication)" },
            new List<string> () { "3B 95 97 40 F0 1A 16 0A 19 41", $"SG50 (Samsung Chip) (Telecommunication)" },
            new List<string> () { "3B 96 00 41 21 92 00 00 62 24 33 33 90 00", $"Ukrainian Telecommunications Operator Kyivstar (old simcard) (Telecommunication)" },
            new List<string> () { "3B 96 18 80 01 80 51 00 61 10 30 9F 00 61 10 30 9E", $"Atmel/Athena T0 PC/SC Compliance Test Card No. 1 (warm reset)" },
            new List<string> () { "3B 96 95 80 1F C3 D0 07 83 02 54 00 5D", $"au IC-card ver.001 (for CDMA2000) (Telecommunication)" },
            new List<string> () { "3B 97 11 00 02 02 04 22 00 3F 03", $"China Unicom (Telecommunication)" },
            new List<string> () { "3B 97 11 80 1F 41 80 31 A0 73 BE 21 00 A6", $"Comprion UT3 simulator SIM (Other)" },
            new List<string> () { "3B 97 11 80 1F 42 80 31 A0 73 BE 21 00 A6", $"ETSI 102 230 Test case 5.2.5.3. Comprion IT3 SIM emulator (Telecommunication)" },
            new List<string> () { "3B 97 11 C0 FF B1 FE 35 1F 83 A5 05 01 01 02 A3 01 5F", $"digital chronotachygraphe card: conducteur/driver, entreprise, contrôleur/controler et atelier/workshop, 2006-2010{Environment.NewLine}manufactured by Imprimerie Nationale, distributed by Chronoservices" },
            new List<string> () { "3B 97 13 C0 FF B1 FE 35 1F 83 A5 05 01 01 02 A3 01 5D", $"digital chronotachygraphe card: conducteur/driver, entreprise, contrôleur/controler et atelier/workshop, 2005-2006{Environment.NewLine}manufactured by Imprimerie Nationale, distributed by Chronoservices" },
            new List<string> () { "3B 97 94 80 1F 43 80 31 E0 73 FE 21 1B 39", $"Telenor SIM card (Hungary) (Telecommunication)" },
            new List<string> () { "3B 97 94 80 3F 44 90 80 31 A0 73 BE 21 00 95", $"Comprion Simulated card that indicate Low Impedance support: TB(3) = 0x90 (Telecommunication)" },
            new List<string> () { "3B 97 95 80 1F 43 80 31 E0 73 FE 21 1B 38", $"JIO (Telecommunication)" },
            new List<string> () { "3B 97 95 80 1F 47 80 31 E0 73 FE 21 1B 3C", $"iFree MOGO SIM Card for test (Telecommunication)" },
            new List<string> () { "3B 97 95 80 1F C7 80 31 A0 73 B6 21 1B B4", $"DNP Local5G (Telecommunication)" },
            new List<string> () { "3B 97 95 C0 2A 31 FE 35 D0 00 48 01 05 A3 11 3C", $"digital chronotachygraphe card: conducteur/driver, entreprise, contrôleur/controler et atelier/workshop, 2010-2015{Environment.NewLine}manufactured by Imprimerie Nationale, distributed by Chronoservices" },
            new List<string> () { "3B 97 97 81 71 FE 24 00 77 43 53 4D 01 02 03 00", $"Infineon CIPURSE SAM SLF 9630 (Other)" },
            new List<string> () { "3B 98 11 00 02 05 01 32 42 03 05 00", $"Sino 3G Nano-sim ordered off Alie Express (Telecommunication)" },
            new List<string> () { "3B 98 13 40 0A A5 03 01 01 01 AD 13 11", $"Belgium Electronic ID card (eID)" },
            new List<string> () { "3B 98 18 01 52 4D 4D 20 76 31 2E 32 A8", $"Ericsson Mini-Link RYS 110 243/1 (Other)" },
            new List<string> () { "3B 98 18 81 31 FE 43 30 41 56 54 00 00 00 07 F9", $"Avtor SecureToken 00 00 (Other)" },
            new List<string> () { "3B 98 18 81 31 FE 45 35 41 56 54 00 00 00 20 DD", $"Avtor Secure Token (eID)" },
            new List<string> () { "3B 98 30 40 0A A5 03 01 01 01 AD 13 11", $"Belgium Electronic eID card (eID)" },
            new List<string> () { "3B 98 94 00 93 91 14 01 0A 06 06 06", $"Orange Spain 64k Sim card" },
            new List<string> () { "3B 98 94 00 93 91 15 01 04 03 03 03", $"old orange sim (Telecommunication)" },
            new List<string> () { "3B 98 94 40 0A A5 03 01 01 01 AD 13 10", $"Belgium Electronic ID card (eID)" },
            new List<string> () { "3B 98 94 80 1F C2 32 2E 31 30 31 14 01 40 28", $"CMCC operator UICC (Telecommunication)" },
            new List<string> () { "3B 98 94 80 1F C3 80 31 E0 73 FE 21 1B 08 BE", $"XLB EVDO Test Card (Telecommunication)" },
            new List<string> () { "3B 98 95 00 93 94 04 04 03 03 03 03", $"T-Mobile MVNO SIM card" },
            new List<string> () { "3B 98 95 40 FF D0 00 48 01 01 AD 13 21", $"Belgium Electronic ID card (eID) - virtual test card" },
            new List<string> () { "3B 98 96 00 4B 41 5A 54 4F 4B 45 4E", $"Kaztoken SC" },
            new List<string> () { "3B 98 96 00 80 31 C0 72 F7 41 81 07", $"Aktiv Rutoken Magistra" },
            new List<string> () { "3B 98 96 00 93 94 03 07 03 04 04 04", $"SIM card{Environment.NewLine}GSM SIM of VIP CRoatian mobile company" },
            new List<string> () { "3B 98 96 00 93 94 03 08 05 03 03 03", $"SIMple Mobile SIM Card" },
            new List<string> () { "3B 98 96 00 93 94 03 09 03 02 02 02", $"MySims2Go GSM SIM Card (Telecommunication)" },
            new List<string> () { "3B 98 96 00 93 94 04 02 04 05 05 05", $"Roshan (Afgan Wireless ) SIM (Telecommunication)" },
            new List<string> () { "3B 99 18 00 11 88 22 33 44 55 66 77 60", $"sysmocom sysmoSIM-GR1" },
            new List<string> () { "3B 99 94 00 91 08 91 06 00 01 06 06 00", $"GSM-SIM Orange-UK (1800)" },
            new List<string> () { "3B 99 94 00 91 16 91 08 00 01 25 01 00", $"GSM SIM E-plus, Germany (Telecommunication)" },
            new List<string> () { "3B 99 94 00 91 99 93 12 00 01 16 02 00", $"ORGA test systems - GSM Phase 2+ Test SIM" },
            new List<string> () { "3B 9A 18 00 82 62 75 93 11 00 01 02 02 00", $"Supersim 6 in 1 (Telecommunication)" },
            new List<string> () { "3B 9A 18 80 1F C7 31 42 52 43 44 2E 31 2E 35 38 C0", $"HP StorageWorks (Other)" },
            new List<string> () { "3B 9A 94 00 91 01 00 17 00 01 23 10 00 96", $"GSM-SIM Victorvox D1 (900MHz)" },
            new List<string> () { "3B 9A 94 00 91 01 00 17 00 01 23 11 00 96", $"GSM-SIM Card T-D1 (900MHz)" },
            new List<string> () { "3B 9A 94 00 91 01 00 17 00 01 26 05 00 96", $"GSM-SIM T-D1 prepaid (Xtra) (Telecommunication)" },
            new List<string> () { "3B 9A 94 00 91 01 00 17 00 01 26 06 00 96", $"T D1 GSM card" },
            new List<string> () { "3B 9A 94 00 92 02 75 93 11 00 01 02 02 ..", $"SuperSIM (X-sim)" },
            new List<string> () { "3B 9A 96 00 92 01 36 93 17 00 02 04 03 00", $"GSM-SIM EMT \"Simpel\" (prepaid, Estonia)" },
            new List<string> () { "3B 9A 96 00 92 01 48 93 17 00 02 12 04 00", $"SIM Card C*******r Mobile (Belgium)" },
            new List<string> () { "3B 9A 96 00 92 01 66 93 17 00 02 12 04 00", $"GSM SIM Bite.lv prepaid \"Toxic\"; 2008" },
            new List<string> () { "3B 9A 96 00 92 01 98 93 17 00 02 28 02 00", $"Hardware USB Key (Other)" },
            new List<string> () { "3B 9A 96 00 92 02 71 93 16 00 01 07 01 00", $"SIM card (emitted in ~2007) of Ukrainian Telecommunications Operator Kyivstar (Kyivstar GSM) (GSM/UMTS services) (Telecommunication)" },
            new List<string> () { "3B 9A 96 00 92 03 49 93 16 00 01 21 01 00", $"GSM-SIM card of the Austrian provider Yesss!" },
            new List<string> () { "3B 9A 96 01 F1 56 50 4E 2D 4B 45 59 00 00 CE", $"Amicon Remote Admin (Other)" },
            new List<string> () { "3B 9A 96 40 1E 41 50 54 43 40 29 50 77 85 01", $"Java card Version 2.2.2 S3FS9FX series Java card (eID)" },
            new List<string> () { "3B 9A 96 C0 10 31 FE 5D 00 64 05 7B 01 02 31 80 90 00 76", $"EU smart tachograph card (driver/company/control/workshop)" },
            new List<string> () { "3B 9B 95 80 1F 43 80 31 A0 73 BE 21 00 53 34 50 01 19", $"True Move GSM UICC (Telecommunication)" },
            new List<string> () { "3B 9B 95 80 1F 47 80 31 A0 73 BE 21 00 53 27 11 02 4C", $"SIM TELE2 Sweden" },
            new List<string> () { "3B 9B 95 80 1F 47 80 31 A0 73 BE 21 00 53 34 99 05 D0", $"GSM-SIM EMT \"Diil\", prepaid (Estonia)" },
            new List<string> () { "3B 9B 96 C0 0A 31 FE 45 80 67 05 67 B6 04 01 00 00 81 05 FF", $"Business Card (eID)" },
            new List<string> () { "3B 9B 97 C0 0A 31 FE 45 80 67 05 67 B6 04 01 00 00 81 05 FE", $"Company Card for Tachograph Data (Transport)" },
            new List<string> () { "3B 9C 11 00 68 86 8D 0C 86 98 02 56 40 8B 05 00", $"China Mobile (Telecommunication)" },
            new List<string> () { "3B 9C 13 11 81 64 72 65 61 6D 63 72 79 70 74 00 04 08", $"XPlusTV & INXCT Access Card-9 (FIRECrypt)" },
            new List<string> () { "3B 9C 13 11 81 64 72 65 61 6D 63 72 79 70 74 90 05 99", $"FireCrypt, access card 9 (Pay TV)" },
            new List<string> () { "3B 9C 94 00 68 86 8D 0A 86 98 02 56 C2 00 05 00", $"G3 & GSM & Blank SIM card: to be programmed for OpenBTS with pySim-prog (Telecommunication)" },
            new List<string> () { "3B 9C 94 00 68 86 8D 0C 86 98 02 45 A1 00 05 00", $"China Mobile (Telecommunication)" },
            new List<string> () { "3B 9C 94 00 68 86 8D 0C 86 98 02 56 40 8B 05 00", $"mobiledit (Telecommunication)" },
            new List<string> () { "3B 9C 94 80 11 40 52 75 74 6F 6B 65 6E 45 43 50 73 63 C3", $"Aktiv Rutoken ECP SC T1" },
            new List<string> () { "3B 9C 94 80 1F 47 80 31 E0 73 FE 21 1B 54 50 84 54 50 B2", $"cambodia (Telecommunication)" },
            new List<string> () { "3B 9C 94 80 1F 47 80 31 E0 73 FE 21 1B 54 53 89 74 50 9C", $"China Unicom 128K M2M Card (Telecommunication)" },
            new List<string> () { "3B 9C 94 80 1F 47 80 31 E0 73 FE 21 1B 54 59 83 79 50 91", $"Vodafone Ukraine (Telecommunication)" },
            new List<string> () { "3B 9C 95 80 1F C7 80 31 E0 73 FE 21 1B 64 57 44 49 46 CF", $"MTC (Moscow) phone SIM card (Telecommunication)" },
            new List<string> () { "3B 9C 95 80 81 1F 03 90 67 46 4A 01 00 54 04 F2 72 FE 00 C0", $"Feitian Technologies Java Card A22CR (JavaCard)" },
            new List<string> () { "3B 9C 95 80 81 1F 03 90 67 46 4A 01 01 17 06 F2 72 7E 00 00", $"A40CR (JavaCard)" },
            new List<string> () { "3B 9C 95 81 31 FE 9F 90 67 46 4A 01 02 53 05 01 72 FE 00 FB", $"Feitian Biopass K27 (PKI)" },
            new List<string> () { "3B 9C 96 00 52 75 74 6F 6B 65 6E 45 43 50 73 63", $"Aktiv Rutoken ECP SC T0" },
            new List<string> () { "3B 9C 96 00 58 44 24 03 02 00 20 01 0A 00 90 05", $"Ticket Restaurant Card (Other)" },
            new List<string> () { "3B 9C 97 80 11 40 52 75 74 6F 6B 65 6E 45 43 50 73 63 C0", $"Aktiv Rutoken ECP 3.0 NFC (PKI)" },
            new List<string> () { "3B 9D 11 40 23 00 68 10 11 4D 69 6F 43 4F 53 00 90 00", $"MioCOS 1.0" },
            new List<string> () { "3B 9D 13 81 31 60 37 80 31 C0 69 4D 54 43 4F 53 73 02 02 04 40", $"DPI Card Guatemala (eID)" },
            new List<string> () { "3B 9D 13 81 31 60 37 80 31 C0 69 4D 54 43 4F 53 73 02 02 05 41", $"MTCOS (eID)" },
            new List<string> () { "3B 9D 18 81 31 FC 35 80 31 C0 69 4D 54 43 4F 53 73 02 05 05 D3", $"Lithuanian e-ID Card (eID)" },
            new List<string> () { "3B 9D 94 40 23 00 68 20 01 4D 69 6F 43 4F 53 00 90 00", $"Miotec smartcard running Miocos 2.0 on an Atmel AT90SC646" },
            new List<string> () { "3B 9D 95 80 1F C3 80 31 E0 52 4B 54 62 11 03 73 FE 21 1B 8F", $"KT WiBro UICC (2.3 GHz mobile WiMAX in South Korea)" },
            new List<string> () { "3B 9D 95 80 1F C3 80 31 E0 73 FE 21 1B 65 D0 00 57 02 62 30", $"Gemalto NFC enabled (acquired through the Simagine contest)" },
            new List<string> () { "3B 9D 95 80 1F C3 80 63 AF 03 A0 73 1A 21 1B 83 0F 90 00 F4", $"Greece TIM GSM SIM" },
            new List<string> () { "3B 9D 95 80 1F C3 80 73 1A 21 1B 63 AF 06 A6 83 0F 90 00 F7", $"Travelsim GSM SIM Card (Telecommunication)" },
            new List<string> () { "3B 9D 95 80 1F C3 80 73 1A 21 1B 63 AF 07 A7 83 0F 90 00 F7", $"GemXplore 3G" },
            new List<string> () { "3B 9D 95 80 1F C3 80 73 1A 21 1B 63 AF 07 B7 83 0F 90 00 E7", $"Tchibo (Telefonica) SIM-Card (JavaCard)" },
            new List<string> () { "3B 9D 95 80 1F C7 80 31 A0 73 BE 21 00 51 04 83 05 90 00 EE", $"SIM :NTT Docomo(Japan) (Telecommunication)" },
            new List<string> () { "3B 9D 95 80 1F C7 80 73 1A 21 1B 63 AF 06 A6 83 0F 90 00 F3", $"Orange UK GSM/UMTS SIM" },
            new List<string> () { "3B 9D 95 80 1F C7 80 73 1A 21 1B 63 AF 09 A9 83 0F 90 00 F3", $"Estonian GSM operator TELE2 (WPKI eID support)" },
            new List<string> () { "3B 9D 95 80 3F C7 A0 80 31 A0 73 BE 21 13 51 05 83 05 90 00 7C", $"NTT docomo Xi(LTE) DN05(DNP) Pink SIM (Telecommunication)" },
            new List<string> () { "3B 9D 96 00 53 49 23 03 03 00 20 00 04 00 F5 90 00", $"shell (Transport)" },
            new List<string> () { "3B 9E 94 80 1F 42 80 31 00 73 BE 21 10 66 54 59 53 04 4C 25 CF", $"MCI (Mobile Communication Company of Iran) SIM" },
            new List<string> () { "3B 9E 94 80 1F 47 80 31 A0 73 BE 21 10 66 86 88 02 12 20 40 27", $"americamobile (Telecommunication)" },
            new List<string> () { "3B 9E 94 80 1F 47 80 31 A0 73 BE 21 13 66 86 88 02 10 42 10 14", $"Airspan USIM (Telecommunication)" },
            new List<string> () { "3B 9E 94 80 1F 47 80 31 A0 73 BE 21 13 66 86 88 02 10 73 10 25", $"module (JavaCard)" },
            new List<string> () { "3B 9E 94 80 1F 47 80 31 E0 73 BE 21 13 66 86 88 82 18 39 42 F5", $"China Unicom 128K Mini USIM (Telecommunication)" },
            new List<string> () { "3B 9E 94 80 1F C3 80 31 E0 73 FE 21 1B 66 D0 00 17 B4 00 00 A5", $"Vodafone Ireland SIM card" },
            new List<string> () { "3B 9E 94 80 1F C7 80 31 E0 73 FE 21 13 66 42 54 54 42 30 31 DB", $"XLB.5G CTC Test Card (Telecommunication)" },
            new List<string> () { "3B 9E 94 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 00 6C 02 5F 00 33", $"Vivo Brasil SIM Card" },
            new List<string> () { "3B 9E 94 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 00 6C 06 34 00 5C", $"SIM card SFR 250 128ko" },
            new List<string> () { "3B 9E 94 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 00 7A 00 00 00 78", $"GaduAIR (Poland) - Subscriber Identity Module (SIM)" },
            new List<string> () { "3B 9E 94 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 6D E8 0C 00 8A", $"Mobile TeleSystems (MTS) GSM SIM" },
            new List<string> () { "3B 9E 94 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 A1 8D 0F 00 20", $"StarHub Happy Prepaid SIM (Telecommunication)" },
            new List<string> () { "3B 9E 94 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 02 17 F7 13 00 F3", $"VIETTEL Telecom 4G SIM 128KB (Vietnam) (Telecommunication)" },
            new List<string> () { "3B 9E 94 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 02 19 5C 13 00 56", $"SIM Card of the French mobile carrier \"La Poste Mobile\" (Telecommunication)" },
            new List<string> () { "3B 9E 94 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 02 24 24 14 00 14", $"Citymesh Connect (Telecommunication)" },
            new List<string> () { "3B 9E 95 80 1F C3 80 31 A0 73 BE 21 13 67 29 02 01 04 04 CD 39", $"H3G (?) UMTS USIM card{Environment.NewLine}J+ SWIM WIB UMTS SIM Test card" },
            new List<string> () { "3B 9E 95 80 1F C3 80 31 E0 73 FE 21 1B 66 D0 00 29 B6 01 00 99", $"GSM SIM (Telecommunication)" },
            new List<string> () { "3B 9E 95 80 1F C3 80 31 E0 73 FE 21 1B 66 D0 00 29 F4 01 00 DB", $"Vodafone (UK) Pay As You Talk SIM" },
            new List<string> () { "3B 9E 95 80 1F C3 80 31 E0 73 FE 21 1B 66 D0 00 49 00 00 00 4E", $"UK O2 Unlimited Prepay GSM/UMTS USIM" },
            new List<string> () { "3B 9E 95 80 1F C3 80 4B 43 4F 53 20 56 65 72 01 2E 01 90 00 1C", $"Vehicular License Veracruz, Mexico (Transport)" },
            new List<string> () { "3B 9E 95 80 1F C6 80 31 E0 73 FE 21 1B 66 D0 01 9F BD 10 00 31", $"H3G (Three UK) Prepaid USIM (Telecommunication)" },
            new List<string> () { "3B 9E 95 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 00 07 00 1E 00 1A", $"H3G (Ireland, UK) UMTS USIM card" },
            new List<string> () { "3B 9E 95 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 00 26 1C 01 00 38", $"GSM-SIM Telefonica Movistar, contract (Spain)" },
            new List<string> () { "3B 9E 95 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 00 28 C4 00 00 EF", $"H3G (Italy) UMTS USIM card" },
            new List<string> () { "3B 9E 95 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 00 49 00 00 00 4A", $"Rogers 3G SIM card" },
            new List<string> () { "3B 9E 95 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 00 49 00 C0 00 4A", $"Rogers SIM card" },
            new List<string> () { "3B 9E 95 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 00 6C 09 1A 00 7C", $"AT&T UICC with USIM (Telecommunication)" },
            new List<string> () { "3B 9E 95 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 00 75 02 05 00 71", $"SIM card, provided by brasilian operator \"claro\" (Telecommunication)" },
            new List<string> () { "3B 9E 95 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 00 7A 00 00 00 79", $"Simyo SIM Card, Spanish Mobile Company{Environment.NewLine}Hi SIM" },
            new List<string> () { "3B 9E 95 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 00 81 C8 0D 00 47", $"ESEYE ES4520 Anynet MFF Embedded SIM" },
            new List<string> () { "3B 9E 95 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 6B 75 0E 00 12", $"Oskarta Vodafone (Czech Republic) 128kB GSM LTE SIM (Telecommunication)" },
            new List<string> () { "3B 9E 95 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 6C 04 0D 00 67", $"3G Yoigo SIM Card from Spain" },
            new List<string> () { "3B 9E 95 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 6C 39 0D 00 5A", $"Andrews & Arnold (A&A) 3G mobile data SIM - using the \"Three\" network in the UK (Telecommunication)" },
            new List<string> () { "3B 9E 95 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 6C C1 0D 00 A2", $"Three Hong Kong Prepaid SIM Card (Telecommunication)" },
            new List<string> () { "3B 9E 95 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 6D 85 0E 00 E4", $"Vodafone Germany SIM Card (Telecommunication)" },
            new List<string> () { "3B 9E 95 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 79 0E 6B 00 1E", $"TracFone (US) TF64SIMC4 V2 GSM SIM Card" },
            new List<string> () { "3B 9E 95 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 7A 06 50 00 2E", $"AT&T UICC with USIM (Telecommunication)" },
            new List<string> () { "3B 9E 95 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 7A 0E 3E 00 48", $"TracFone (US) TF64PSIMC4 GSM SIM Card" },
            new List<string> () { "3B 9E 95 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 7B 98 0D 00 EC", $"Mobile Vicking SIM card (Telecommunication)" },
            new List<string> () { "3B 9E 95 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 7B EB 0D 00 9F", $"TRE (Telecommunication)" },
            new List<string> () { "3B 9E 95 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 99 29 10 00 A2", $"Simyo-Mobile Belgium GSM SIM card" },
            new List<string> () { "3B 9E 95 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 99 7F 0F 00 EB", $"sim card RUS Megafon Krasnodar (Telecommunication)" },
            new List<string> () { "3B 9E 95 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 A0 74 10 00 C6", $"vodafone italy sim (Telecommunication)" },
            new List<string> () { "3B 9E 95 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 A0 C3 12 00 73", $"3G MTN IRANCELL Sim Card. (Telecommunication)" },
            new List<string> () { "3B 9E 95 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 A1 14 11 00 A6", $"Globe (Telecommunication)" },
            new List<string> () { "3B 9E 95 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 A1 72 10 00 C1", $"Vodafone Hungary SIM Card (Telecommunication)" },
            new List<string> () { "3B 9E 95 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 A1 8C 12 00 3D", $"Telkomsel SIM card (Telecommunication)" },
            new List<string> () { "3B 9E 95 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 A1 B8 10 00 0B", $"abc mobile prepaid sim card (serviced by CSL) (Telecommunication)" },
            new List<string> () { "3B 9E 95 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 02 17 02 13 00 07", $"AT&T prepaid nano iphone/android sim card (Telecommunication)" },
            new List<string> () { "3B 9E 95 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 02 17 3E 12 00 3A", $"USIM issued by Unité mobile operator in Moldova (Telecommunication)" },
            new List<string> () { "3B 9E 95 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 02 17 66 13 00 63", $"Three UK USIM card (Telecommunication)" },
            new List<string> () { "3B 9E 95 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 02 17 86 12 00 82", $"Singtel Hi! Tourist SIM Card (Telecommunication)" },
            new List<string> () { "3B 9E 95 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 02 17 8B 12 00 8F", $"Ufone (SIM Card) (Telecommunication)" },
            new List<string> () { "3B 9E 95 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 02 17 C7 11 00 C0", $"3 UK SIM card (Telecommunication)" },
            new List<string> () { "3B 9E 95 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 02 17 F6 11 00 F1", $"Ziggo SmartCard Television Subscription (Pay TV)" },
            new List<string> () { "3B 9E 95 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 02 19 15 13 00", $"ABS-CBN (Telecommunication)" },
            new List<string> () { "3B 9E 95 C0 0A 1F C6 80 31 E0 73 FE 21 1B 66 D0 01 83 0D 58 81 1E", $"Mobile Paypass G199 NFC" },
            new List<string> () { "3B 9E 96 00 80 31 C0 65 4D 47 00 00 00 72 F7 41 81 07", $"Russian Magistra (UTF8: Магистра) smart card (eID)" },
            new List<string> () { "3B 9E 96 00 80 31 C0 65 4D 53 00 00 00 72 F7 41 81 07", $"Smart-key for bank-client of MDM Bank (RU) with faktura.ru service (Bank)" },
            new List<string> () { "3B 9E 96 80 01 41 05 41 00 00 00 00 00 00 00 00 00 90 00 1C", $"ACOS5-64 v3.00 is a FIPS 140-2 Level 3 Certified Cryptographic Smart Card which is fully compliant with ISO7816-1/2/3/4/8/9 and common criteria EAL5+ (chip level) specifications. (PKI){Environment.NewLine}ACOS5 EVO V4.10" },
            new List<string> () { "3B 9E 96 80 01 41 05 42 00 00 00 00 00 00 00 00 00 90 00 1F", $"ACOS5 EVO 192KB PKI combined (PKI)" },
            new List<string> () { "3B 9E 96 80 01 41 05 43 00 00 00 00 00 00 00 00 00 90 00 1E", $"ACS CryptoMate EVO PKI token (PKI)" },
            new List<string> () { "3B 9E 96 80 1F 47 80 31 A0 73 BE 21 13 66 86 88 02 10 1D 10 49", $"Maroc Telecom USIM" },
            new List<string> () { "3B 9E 96 80 1F 83 80 31 E0 73 FE 21 12 66 55 57 4E 41 32 33 91", $"TDC mobile UICC (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C3 80 31 E0 73 FE 21 1B 66 D0 01 6C 04 0D 00 60", $"toggle GSM SIM" },
            new List<string> () { "3B 9E 96 80 1F C3 80 31 E0 73 FE 21 1B 66 D0 01 7B 98 0D 00 EB", $"Lycamobile Pay As You Go SIM" },
            new List<string> () { "3B 9E 96 80 1F C6 80 31 E0 73 FE 21 1B 66 D0 01 9F 13 4D 00 C1", $"Telus Mobility Tri-SIM card (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C6 80 31 E0 73 FE 21 1B 66 D0 01 9F 69 11 00 E7", $"Oister 3G SIM Card (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C6 80 31 E0 73 FE 21 1B 66 D0 01 9F 8F 11 00 01", $"Spark New Zealand SIM Card (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C6 80 31 E0 73 FE 21 1B 66 D0 01 9F 8F 12 00 02", $"Russian \"Megafon\" gsm sim card (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C6 80 31 E0 73 FE 21 1B 66 D0 01 9F BC 10 00 33", $"sim beeline russia krasnodar (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C6 80 31 E0 73 FE 21 1B 66 D0 01 9F EF 10 00 60", $"Infineon SLU14MCO480K2 (JavaCard)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 13 62 00 49 83 81 90 00 07", $"Claro Brazil SIM card (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 00 28 24 01 00 0D", $"United Mobile SIM" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 00 2B 2D 02 00 04", $"KTF SHOW GE-B1400 WCDMA USIM (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 00 6C 0C 72 00 12", $"Orange Austria GSM/3G SIM: \"Mobiles Internet\"" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 00 6C 0D 7A 00 1B", $"Vodafone UK GSM SIM Card (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 00 71 7B 02 00 08", $"Bouygues Telecom (French Mobile Provider SIM card) (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 38 00 00 00 39", $"SIM card (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 6B 23 0E 00 47", $"Vodafone Ireland SIM (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 6C 04 0D 00 64", $"Cincinati Bell. UICC with USIM 128k-b (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 6C 39 0D 00 59", $"SIM card from Austrian ISP \"Drei\" (H3G) (Other)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 6C C1 0D 00 A1", $"3 (Italian telecommunication provider) 3g sim card 2FF format H3G Italy" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 6C CF 0D 00 AF", $"TLC Sim Card (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 6D 0C 0E 00 6E", $"SimpleMobile Sim Card (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 6F F9 0D 00 9A", $"T-Mobile US SIM card (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 77 49 0D 00 32", $"UK simcard - O2 unlimited prepay 3G (4DM) USIM (EXT)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 77 60 0E 00 18", $"Walmart Family Mobile (T-Mobile) West Coast (Telecommunication){Environment.NewLine}T-Mobile US USIM \"TM9190\" v50.05 (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 77 7B 0E 00 03", $"Bouygues Telecom SIM - 3G (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 77 97 0D 00", $"SIM Free Mobile" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 77 97 0D 00 EC", $"SIM Free Mobile" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 7A 49 0D 00 3F", $"SUPER start package (Estonia, EMT, 4G) (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 7A 7C 0D 00 0A", $"Orange SIM (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 7B 3E 0E 00 4A", $"SIM card from lapostemobile in France (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 7B 5C 0E 00 28", $"SIM card by German mobile phone provider E-Plus for Product \"WhatsApp SIM\" (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 7B AF 0D 00 D8", $"Chunghwa Telecom SIM card (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 7B EB 0D 00 9C", $"3 prepaid mobile phone card (Other)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 85 87 0E 00 0D", $"Fido USIM Card (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 85 C4 0F 00 4F", $"T-Mobile USA (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 8D 5F 10 00 C3", $"eUICC for Gemalto (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 8D 79 12 00 E7", $"Verizon Rugged M2M SIM (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 91 88 0E 00 16", $"Lenovo SIM card (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 99 C8 0F 00 5F", $"OneSimCard (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 99 FE 0E 00 68", $"Finnish Sonera SIM-card (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 A0 04 11 00 B4", $"Aldi Talk SIM card, Germany (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 A0 1E 11 00 AE", $"Zevvle SIM Card (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 A0 DD 12 00 6E", $"USIM (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 A0 EC 11 00 5C", $"Boost Mobile Prepaid Micro SIM Card (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 A1 12 10 00 A2", $"OpenAirInerface (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 A1 58 11 00 E9", $"Vodafone CZ: SIMPLUS V128 LTE (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 A1 68 0F 00 C7", $"Free Mobile SIM card (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 A1 72 10 00 C2", $"Vodafone (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 A1 73 10 00 C3", $"Prepaid public telephone card from Lidl Connect, Germany (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 A1 A7 0F 00 08", $"Spanish Movistar Mobile phone SIM card (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 A1 E6 0F 00 49", $"SIM O2 CZ (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 02 17 59 14 00 58", $"USIM card of of Ukrainian Telecommunications Operator Kyivstar, emitted after 2016 (Kyivstar GSM) (GSM/UMTS/LTE services) (Telecommunication) (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 02 17 5B 12 00 5C", $"Cellcom Israel USIM (micro FF) (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 02 17 60 13 00 66", $"Vodafone spain barcelona (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 02 17 62 12 00 65", $"Free Mobile (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 02 17 A0 12 00 A7", $"USIM Card (Etisalat) (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 02 17 BF 11 00 BB", $"Telkom (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 02 17 C9 11 00 CD", $"Vivo 4G (Other)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 02 17 CD 11 00 C9", $"O2 4G SIM card (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 02 17 D9 12 00 DE", $"telenor (swedish mobile provider) SIM card (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 02 17 F4 12 00 F3", $"SIM card for Swedish operator Vimla! (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 02 19 4B 12 00 42", $"halebop (swedish mobile provider) SIM card (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 02 2A 72 13 00 49", $"SIM Card OI (Brazil) (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 02 2A 86 13 00 BD", $"Mobile Vikings SIM Card (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 02 2A D3 13 00 E8", $"sim card from Mobilcom Debitel Telefonica (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 02 2A D9 13 00 E2", $"sim (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 02 33 AD 14 00 88", $"4G-LTE (Telecommunication)" },
            new List<string> () { "3B 9E 96 80 3F C3 A0 80 31 E0 73 FE 21 1B 63 08 01 14 0F 90 00 D3", $"KT Olleh LTE Warp SA-L 1670 (Telecommunication)" },
            new List<string> () { "3B 9E 97 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 00 6B 95 11 00 EE", $"TracFone SIM Verizon Wireless LTE supported (Telecommunication)" },
            new List<string> () { "3B 9E 97 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 02 2A B3 13 00 89", $"SIM T-MObile (Telecommunication)" },
            new List<string> () { "3B 9F .. 80 1F C3 00 68 1. 44 05 01 46 49 53 45 31 C8 .. 90 00 ..", $"Setec SetCOS 4.4.1" },
            new List<string> () { "3B 9F 11 10 80 41 54 39 38 53 43 30 33 32 43 54 31 2E 35 35", $"\"ID Vault\" brand device (Other)" },
            new List<string> () { "3B 9F 11 10 80 56 61 75 6C 74 49 43 20 34 36 30 31 2E 30 32", $"Inside Secure VaultIC 460 Smart Object [ICCD 1.00] (Other)" },
            new List<string> () { "3B 9F 11 40 60 49 52 44 45 54 4F 20 41 43 53 20 56 35 2E 30", $"\"La7 Cartapiù\" for DVB-T decoders, IRDETO access" },
            new List<string> () { "3B 9F 11 40 60 49 52 44 45 54 4F 20 41 43 53 20 56 35 2E 37", $"dahlia Tv Italian Provider" },
            new List<string> () { "3B 9F 11 40 60 49 52 44 45 54 4F 20 41 43 53 20 56 35 2E 38", $"Videocon D2H (Pay TV)" },
            new List<string> () { "3B 9F 11 40 60 49 52 44 45 54 4F 20 41 43 53 20 56 35 2E 38 00", $"irdeto (Pay TV){Environment.NewLine}VTC card (Pay TV)" },
            new List<string> () { "3B 9F 11 40 60 49 52 44 45 54 4F 20 41 43 53 20 56 36 2E 30", $"skylink, Pay TV{Environment.NewLine}T-Mobile Czech Republic, Irdeto Satellite TV encryption card" },
            new List<string> () { "3B 9F 11 80 1F C3 80 31 E0 73 FE 21 1B 64 07 53 63 01 82 90 00 74", $"Cingular SIM" },
            new List<string> () { "3B 9F 11 80 1F C7 80 31 E0 73 FE 21 1B 63 E2 06 A6 83 0F 90 00 0D", $"i-SmartSim GSM phone SIM-lock bypass card" },
            new List<string> () { "3B 9F 11 80 3F C7 A0 80 31 E0 73 FE 21 1F 63 00 6C 00 83 81 90 00 29", $"Verizon Wireless 4G LTE SIM (Telecommunication)" },
            new List<string> () { "3B 9F 11 81 11 3D 00 06 75 77 81 02 80 00 00 00 00 00 00 00 00 24", $"Key knob used to grant access to \"spaces\" offices (coworking). (Other)" },
            new List<string> () { "3B 9F 11 81 11 3D 00 0A 78 80 70 02 20 63 CB B7 80 00 00 00 00 1C", $"French VISA card \"Boursorama Premier\" with contactless logo. The back has a mention of OT, probably Oberthur. (Bank)" },
            new List<string> () { "3B 9F 11 81 11 3D 00 13 78 F7 00 00 00 00 00 00 00 00 00 00 00 BF", $"French driver's license (2015) (Other)" },
            new List<string> () { "3B 9F 11 81 11 3D 01 50 26 78 D3 64 00 00 00 00 00 71 81 6C 00 07", $"Navigo (Transportation in Paris) (Transport)" },
            new List<string> () { "3B 9F 11 81 11 3D 10 05 BD 25 50 00 00 00 00 00 00 00 00 00 00 FE", $"Key Knob from a chinese electronic kit (described as 'blank s50', probably mifare) (Other)" },
            new List<string> () { "3B 9F 11 81 11 3D 10 8E 79 BF 94 00 00 00 00 00 00 00 00 00 00 EF", $"Visitor card at \"Cartes Secure Connexions\" 2015 event (Other)" },
            new List<string> () { "3B 9F 11 81 11 3D 10 C6 91 B1 65 00 00 00 00 00 00 00 00 00 00 B0", $"Blank card from a chinese electronic kit (described as 'blank s50', probably mifare) (Other)" },
            new List<string> () { "3B 9F 11 81 11 3D 10 FD 54 6B 7D 00 00 00 00 00 00 00 00 00 00 8C", $"Electronic Identity (eID)" },
            new List<string> () { "3B 9F 11 81 11 3D 12 04 2C DB A2 98 3C 81 00 00 00 00 00 00 00 45", $"business card from a chinese manufacturer (\"Realmart\") commercial. (Other)" },
            new List<string> () { "3B 9F 11 81 31 FE 9F 00 6A 6D 54 6F 6B 65 6E 2D 46 00 00 81 90 00 79", $"USB Token mToken CryptoID by Longmai (JavaCard)" },
            new List<string> () { "3B 9F 11 81 31 FE 9F 00 6A 6D 54 6F 6B 65 6E 2D 50 00 05 81 90 00 6A", $"Longmai mToken CryptoIDA Reader (PKI)" },
            new List<string> () { "3B 9F 11 81 31 FE 9F 00 6B 42 49 54 34 49 44 20 33 2E 30 00 90 00 CF", $"bit4id TokenMe (eID)" },
            new List<string> () { "3B 9F 11 C0 0A 1F C7 80 31 E0 73 FE 21 1B 63 F1 00 AD 83 0F 90 00 59", $"GemXplore Generation 3G" },
            new List<string> () { "3B 9F 13 81 31 FE 45 80 67 55 45 4B 41 45 12 61 31 80 73 B3 A1 80 1C", $"UKiS 1.2.1 on YITAL chip" },
            new List<string> () { "3B 9F 13 81 31 FE 45 80 67 55 45 4B 41 45 12 64 31 80 73 B3 A1 80 19", $"UKiS 1.2.1 on HNEC chip" },
            new List<string> () { "3B 9F 13 81 31 FE 45 80 67 55 45 4B 41 45 12 65 31 80 73 B3 A1 80 18", $"UKiS 1.2.1 on SMIC chip" },
            new List<string> () { "3B 9F 13 81 B1 80 37 1F 03 80 31 F8 69 4D 54 43 4F 53 70 02 01 02 81 07 86", $"Swiss Health Insurance Card" },
            new List<string> () { "3B 9F 15 81 31 FE 45 80 67 55 45 4B 41 45 12 21 31 80 73 B3 A1 80 5A", $"AKIS (eID)" },
            new List<string> () { "3B 9F 21 0E 49 52 44 45 54 4F 20 41 43 53 03 83 95 00 80 55", $"Nagravision Betacrypt" },
            new List<string> () { "3B 9F 21 0E 49 52 44 45 54 4F 20 41 43 53 03 84 55 6D FF 80", $"Nagravision Betacrypt" },
            new List<string> () { "3B 9F 21 0E 49 52 44 45 54 4F 20 41 43 53 03 84 55 FF 80 6D", $"TV smart card Sky Germany BEtacrypt 1702" },
            new List<string> () { "3B 9F 21 0E 49 52 44 45 54 4F 20 41 43 53 20 56 31 2E 32 A0", $"Irdeto ACS V1.2 Pay-TV smartcard (Pay TV)" },
            new List<string> () { "3B 9F 21 0E 49 52 44 45 54 4F 20 41 43 53 20 56 34 2E 31 9D", $"Foxtel paytv decoder in Australia acs 4.1 Irdeto2" },
            new List<string> () { "3B 9F 21 0E 49 52 44 45 54 4F 20 41 43 53 20 56 35 2E 30 9D", $"Irdeto ACS 5.0 One (Pay TV)" },
            new List<string> () { "3B 9F 21 0E 49 52 44 45 54 4F 20 41 43 53 20 56 35 2E 33 9E", $"red dragoncard chid 0604- Austar provider (pay tv)" },
            new List<string> () { "3B 9F 21 0E 49 52 44 45 54 4F 20 41 43 53 20 56 35 2E 34 99", $"Nova Greece package on satellite 13E Hotbird" },
            new List<string> () { "3B 9F 21 0E 49 52 44 45 54 4F 20 41 43 53 20 56 35 2E 37 9A", $"irdeto2 www.digiturk.com.tr (Pay TV)" },
            new List<string> () { "3B 9F 21 0E 49 52 44 45 54 4F 20 41 43 53 20 56 36 2E 30 9E", $"irdeto (Other)" },
            new List<string> () { "3B 9F 21 0E 49 52 44 45 54 4F 20 41 43 53 20 56 37 2E 30 9F", $"pay TV card of Irdeto. (Pay TV)" },
            new List<string> () { "3B 9F 92 80 1F C3 80 31 E0 73 FE 21 14 63 02 01 01 83 07 90 00 CD", $"Programmable SIM card as one of the requirement for free5GC testing procedure (Telecommunication)" },
            new List<string> () { "3B 9F 94 40 1E 00 67 .. 43 46 49 53 45 10 52 66 FF 81 .. ..", $"SLE66CX160S running SETCOS 4.3.1 Revision A" },
            new List<string> () { "3B 9F 94 40 1E 00 67 11 43 46 49 53 45 10 52 66 FF 81 90 00", $"Setec / FINEID{Environment.NewLine}SETEC Instant EID" },
            new List<string> () { "3B 9F 94 40 1E 00 67 16 43 46 49 53 45 10 52 66 FF 81 90 00", $"RSA SecurID 3100 or Utimaco Safeware Smartcard{Environment.NewLine}SetCOS 4.3.1 Revision Unknown" },
            new List<string> () { "3B 9F 94 80 1F C3 00 68 10 44 05 01 46 49 53 45 31 C8 07 90 00 18", $"SetCOS 4.3.0 32K RSA{Environment.NewLine}Instant EID IP2{Environment.NewLine}SETEC SetCard 32K PKI Evaluated SetCOS 4.4.1a2" },
            new List<string> () { "3B 9F 94 80 1F C3 80 31 A0 73 B6 A1 00 67 CF 32 51 CC 9E 6E C0 15", $"OYEITIMES 2G GSM Blank SIM Card (Other)" },
            new List<string> () { "3B 9F 94 80 1F C3 80 31 E0 73 FE 21 13 63 01 03 02 83 07 90 00 CE", $"Programmable SIM card as one of the requirement for free5GC testing procedure (Telecommunication)" },
            new List<string> () { "3B 9F 94 80 1F C7 80 31 E0 73 FE 21 00 64 40 90 61 00 82 90 00 69", $"softsim (Telecommunication)" },
            new List<string> () { "3B 9F 94 80 1F C7 80 31 E0 73 FE 21 11 63 07 52 51 83 07 90 00 CC", $"sim card RUS Beeline Krasnodar (Telecommunication)" },
            new List<string> () { "3B 9F 94 80 1F C7 80 31 E0 73 FE 21 11 63 40 72 62 83 07 90 00 98", $"sim card RUS Beeline Krasnodar (Telecommunication)" },
            new List<string> () { "3B 9F 94 80 1F C7 80 31 E0 73 FE 21 11 63 40 82 92 83 07 90 00 98", $"PrixTel (Telecommunication)" },
            new List<string> () { "3B 9F 94 80 1F C7 80 31 E0 73 FE 21 11 63 41 28 41 83 07 90 00 E0", $"Mongolian MNO Skytel (Telecommunication)" },
            new List<string> () { "3B 9F 94 80 1F C7 80 31 E0 73 FE 21 11 63 4C 00 90 83 07 90 00 14", $"Obertur Java 2.21 card (Telecommunication)" },
            new List<string> () { "3B 9F 94 80 1F C7 80 31 E0 73 FE 21 13 57 12 29 11 02 01 00 00 C3", $"Sysmocom USIM-GR1 (Telecommunication)" },
            new List<string> () { "3B 9F 94 80 1F C7 80 31 E0 73 FE 21 13 57 47 44 0E 01 00 55 01 B2", $"China Unicom 4G sim card (Telecommunication)" },
            new List<string> () { "3B 9F 94 80 1F C7 80 31 E0 73 FE 21 13 57 47 44 30 01 00 55 01 8C", $"China Unicom USIM Card (Telecommunication)" },
            new List<string> () { "3B 9F 94 80 1F C7 80 31 E0 73 FE 21 13 57 49 05 0C 86 98 60 18 CC", $"China Unicom USIM 128K 6131H" },
            new List<string> () { "3B 9F 94 80 1F C7 80 31 E0 73 FE 21 13 57 86 81 05 86 98 40 18 AE", $"China Unicom USIM Card (Telecommunication)" },
            new List<string> () { "3B 9F 94 80 1F C7 80 31 E0 73 FE 21 13 57 86 81 07 86 98 62 18 8E", $"OYEITIMES MCR3516 SIM Card (Telecommunication)" },
            new List<string> () { "3B 9F 94 80 1F C7 80 31 E0 73 FE 21 13 57 86 85 06 86 98 42 18 AB", $"4G LTE blank USIM Green Card (Telecommunication)" },
            new List<string> () { "3B 9F 94 80 1F C7 80 31 E0 73 FE 21 13 63 21 15 06 83 07 90 00 F8", $"Maroc Telecom 4G+ (Telecommunication)" },
            new List<string> () { "3B 9F 94 80 1F C7 80 31 E0 73 FE 21 13 67 61 21 0D 10 00 00 70 F7", $"Celcom XPAX (Telecommunication)" },
            new List<string> () { "3B 9F 94 80 1F C7 80 31 E0 73 FE 21 19 57 3C 86 60 CF B9 02 A0 EE", $"Gotanet SE USIM (Telecommunication)" },
            new List<string> () { "3B 9F 94 80 1F C7 80 31 E0 73 FE 21 19 57 3C 86 60 CF BA 02 A0 ED", $"Gotanet DK USIM (Telecommunication)" },
            new List<string> () { "3B 9F 94 80 1F C7 80 31 E0 73 FE 21 1B 57 37 86 60 9B 32 89 B2 A1", $"China Unicom Travel SIM (Telecommunication)" },
            new List<string> () { "3B 9F 94 80 1F C7 80 31 E0 73 FE 21 1B 57 37 86 60 9B A1 82 10 9B", $"U Mobile POWER Prepaid (Telecommunication)" },
            new List<string> () { "3B 9F 94 80 1F C7 80 31 E0 73 FE 21 1B 57 3C 86 60 CD A1 00 12 46", $"Beeline SIM card (RUS) (Telecommunication)" },
            new List<string> () { "3B 9F 94 80 1F C7 80 31 E0 73 FE 21 1B 57 3F 86 60 4D 03 00 00 75", $"Prepaid SIM card MOCHE (Portugal) (Telecommunication)" },
            new List<string> () { "3B 9F 94 80 1F C7 80 31 E0 73 FE 21 1B 57 3F 86 60 83 02 00 00 BA", $"GSM-SIM Beeline RU (Telecommunication)" },
            new List<string> () { "3B 9F 94 80 1F C7 80 31 E0 73 FE 21 1B 57 3F 86 60 96 A1 00 00 0C", $"Lycamobile UICC/SIM card. (Telecommunication)" },
            new List<string> () { "3B 9F 94 80 1F C7 80 31 E0 73 FE 21 1B 57 3F 86 60 AF 01 00 00 95", $"Gotanet SE USIM (Telecommunication)" },
            new List<string> () { "3B 9F 94 80 1F C7 80 31 E0 73 FE 21 1B 57 3F 86 60 B8 03 00 00 80", $"Zero1 SIM card, Singapore (Telecommunication)" },
            new List<string> () { "3B 9F 94 80 1F C7 80 31 E0 73 FE 21 1B 63 45 43 19 83 00 90 00 DA", $"Smartjac (Telecommunication)" },
            new List<string> () { "3B 9F 94 80 1F C7 80 31 E0 73 FE 21 1B 64 06 81 01 00 82 90 00 45", $"Mobicarte Orange" },
            new List<string> () { "3B 9F 94 80 1F C7 80 31 E0 73 FE 21 1B 64 07 56 42 00 82 90 00 D0", $"SIM mobi orange" },
            new List<string> () { "3B 9F 94 80 1F C7 80 31 E0 73 FE 21 1B 64 9F 4F 00 20 82 90 00 33", $"USIM (3G DF) Orange (French Mobile Network) (Telecommunication)" },
            new List<string> () { "3B 9F 95 80 1F 03 80 31 A0 73 B6 A1 00 67 CF 97 F9 E0 63 68 99 57", $"Telestial OneRate International SIM card (Telecommunication)" },
            new List<string> () { "3B 9F 95 80 1F 43 80 31 E0 73 36 21 13 57 4A 33 0E 09 31 41 00 A9", $"GSM-SIM Elisa (Estonia, WPKI eID support)" },
            new List<string> () { "3B 9F 95 80 1F 43 80 31 E0 73 36 21 13 57 4A 33 0E 0C 31 41 00 AC", $"Vodafone SIM (mobile phone)" },
            new List<string> () { "3B 9F 95 80 1F 43 80 31 E0 73 36 21 13 57 4A 33 0E 10 31 41 00 B0", $"SIM card O2 (UK, Pay-As-You-Go){Environment.NewLine}Tesco Mobile (UK) SIM" },
            new List<string> () { "3B 9F 95 80 1F 43 80 31 E0 73 F6 21 13 57 4A 43 05 21 31 41 00 3A", $"GSM SIM AT&T US" },
            new List<string> () { "3B 9F 95 80 1F 47 80 31 E0 73 36 21 13 57 4A 33 0E 10 31 41 00 B4", $"Sonera Easy (Telecommunication){Environment.NewLine}GSM SIM MEDIONmobile (MVNO) Germany - from 2011" },
            new List<string> () { "3B 9F 95 80 1F 47 80 31 E0 73 36 21 13 57 4A 33 0E 11 31 41 00 B5", $"Telus 3G SIM Card" },
            new List<string> () { "3B 9F 95 80 1F 47 80 31 E0 73 FE 21 13 57 4A 33 05 2B 32 34 00 3A", $"Finnish DNA SIM-card (Telecommunication)" },
            new List<string> () { "3B 9F 95 80 1F 47 80 31 E0 73 FE 21 13 57 4A 33 05 2C 32 34 00 3D", $"GSM SIM / LTE UICC card issued by TELE2, Lithuania (Telecommunication)" },
            new List<string> () { "3B 9F 95 80 1F C3 80 31 A0 73 BE 21 00 53 02 D0 06 83 05 90 00 3A", $"NTT docomo FOMA(W-CDMA) AX02(Gemalto) Green SIM (Telecommunication)" },
            new List<string> () { "3B 9F 95 80 1F C3 80 31 A0 73 BE 21 00 53 02 E2 32 83 05 90 00 3C", $"NTT docomo FOMA(W-CDMA) GE02(Japan Gemplus) Green SIM (Telecommunication)" },
            new List<string> () { "3B 9F 95 80 1F C3 80 31 A0 73 BE 21 13 67 47 01 03 01 02 00 00 99", $"T-Mobile (UK) SIM{Environment.NewLine}Fresh Mobile (UK) SIM" },
            new List<string> () { "3B 9F 95 80 1F C3 80 31 A0 73 BE 21 13 67 47 01 05 01 04 00 00 99", $"T-Mobile Nederlands" },
            new List<string> () { "3B 9F 95 80 1F C3 80 31 A0 73 BE 21 13 67 47 01 05 09 04 00 00 91", $"SIM card (Telecommunication)" },
            new List<string> () { "3B 9F 95 80 1F C3 80 31 A0 73 BE 21 13 67 47 01 09 09 01 00 00 98", $"German SIM card (T-Mobile) (Telecommunication)" },
            new List<string> () { "3B 9F 95 80 1F C3 80 31 A0 73 BE 21 13 67 D0 02 03 09 01 00 00 06", $"GSM, T-Mobile (Germany)" },
            new List<string> () { "3B 9F 95 80 1F C3 80 31 A0 73 BE 21 13 67 D0 02 03 19 01 00 00 16", $"GSM SIM card from congstar (a no-frills service provider of Deutsche Telekom)" },
            new List<string> () { "3B 9F 95 80 1F C3 80 31 A0 73 BE 21 13 67 D0 02 03 21 05 00 00 2A", $"T-Mobile CZ SIM+USIM, printed label says @LB. (Telecommunication)" },
            new List<string> () { "3B 9F 95 80 1F C3 80 31 A0 73 BE 21 13 67 D0 02 03 31 05 00 00 3A", $"T-MOBILE CZ GSM card" },
            new List<string> () { "3B 9F 95 80 1F C3 80 31 E0 73 FE 21 13 57 86 81 02 86 98 44 18 A8", $"GREEN CARD, Grcard (Hong Kong ) Co.,Limited, LTE Usim Card (Telecommunication){Environment.NewLine}Celcom Postpaid 3G (Telecommunication)" },
            new List<string> () { "3B 9F 95 80 1F C3 80 31 E0 73 FE 21 13 63 55 40 18 83 07 90 00 C2", $"Ubivelox (JavaCard)" },
            new List<string> () { "3B 9F 95 80 1F C3 80 31 E0 73 FE 21 1B 57 3F 86 60 46 CD 00 01 B4", $"China Unicom USIM 128K 1295E" },
            new List<string> () { "3B 9F 95 80 1F C3 80 31 E0 73 FE 21 1B 63 E2 09 A9 83 0F 90 00 8D", $"GSM-SIM EMT (Estonia, WPKI eID support)" },
            new List<string> () { "3B 9F 95 80 1F C3 80 31 E0 73 FE 21 1B 63 E2 0A D2 83 0F 90 00 F5", $"GSM, Vodafone (Germany)" },
            new List<string> () { "3B 9F 95 80 1F C3 80 31 E0 73 FE 21 1B 64 06 90 61 00 82 90 00 31", $"3G SIM card from AT&T USA" },
            new List<string> () { "3B 9F 95 80 1F C3 80 31 E0 73 FE 21 1B 64 06 90 62 00 82 90 00 32", $"AT&T GoPhone SIM Card" },
            new List<string> () { "3B 9F 95 80 1F C3 80 31 E0 73 FE 21 1B 64 9B 4D 01 11 82 90 00 00", $"Singular (now AT&T) 3G GSM SIM Card" },
            new List<string> () { "3B 9F 95 80 1F C3 80 31 E0 73 FE 21 1B B3 E2 01 74 83 0F 90 00 88", $"Gemplus GemXplore 3G USIM" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 A0 73 B6 A1 00 67 CF 17 13 C4 1D 2D 36 49", $"Idemia card (Telecommunication)" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 A0 73 B6 A1 00 67 CF 17 94 AA 28 99 3F 28", $"Glaier Programable LTE USIM Card (Telecommunication)" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 A0 73 B6 A1 00 67 CF 32 11 B2 52 C6 79 F3", $"open5gs (Telecommunication)" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 A0 73 B6 A1 00 67 CF 32 15 A9 8F D7 09 50", $"LTE Card (Telecommunication)" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 A0 73 BE 21 00 53 04 D0 80 83 05 90 00 BE", $"NTT_DoCoMo (Telecommunication)" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 A0 73 BE 21 13 67 D0 02 04 09 01 00 00 05", $"T-Mobile SIM card issued in Germany 2012" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 E0 73 F6 21 13 67 4D 45 15 00 39 01 02 F4", $"Vivo 4G LTE SIM Card (Telecommunication)" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 E0 73 F6 21 13 67 4D 45 16 00 43 01 00 8F", $"VALID USIM (Telecommunication)" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 E0 73 FE 21 13 57 12 29 11 02 01 00 00 C2", $"sysmocom sysmoUSIM-GR1" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 E0 73 FE 21 13 57 4A 33 05 2C 32 34 00 BD", $"SoftBank (Black UICC) (Telecommunication)" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 E0 73 FE 21 13 57 4A 33 05 2E 32 34 00", $"SIM card" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 E0 73 FE 21 13 57 4A 33 05 2F 32 34 00 BE", $"T-Mobile (US) USIM" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 E0 73 FE 21 13 57 4A 33 05 30 32 34 00 A1", $"H2O Wireless GSM UICC (Telecommunication)" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 E0 73 FE 21 13 57 4A 33 05 30 32 34 01 A0", $"RedPocket Mobile Contract-Free SIM Card (Telecommunication)" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 E0 73 FE 21 13 57 4A 33 0E 07 32 30 00 99", $"Bell Canada 3G SIM" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 E0 73 FE 21 13 57 4A 33 0E 19 32 33 00 84", $"WIND Mobile SIM Card" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 E0 73 FE 21 13 57 4A 33 0E 1A 32 33 00 87", $"Rohde and Schwarz CMW-Z04. Mini-UICC Test Card (Telecommunication)" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 E0 73 FE 21 13 57 4A 33 0E 1A 32 36 00 82", $"TELUS 3G SIM Card" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 E0 73 FE 21 13 63 55 10 88 83 07 90 00 06", $"SHOW or UPlus USIM (Telecommunication)" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 E0 73 FE 21 13 63 55 10 AA 83 07 90 00 24", $"2degrees NFC (Telecommunication)" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 E0 73 FE 21 13 67 22 28 00 40 01 00 01 91", $"Lycamobile Prepaid SIM-Card (Telecommunication)" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 E0 73 FE 21 13 67 94 03 11 00 00 02 03 5C", $"AT&T (US) GSM SIM" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 E0 73 FE 21 1B 57 3C 86 60 BE B7 00 20 10", $"Kyivstar SIM (Telecommunication)" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 E0 73 FE 21 1B 63 E2 03 94 83 0F 90 00 BE", $"Telenet N.V. Walk & Talk SIM Card Belgium" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 E0 73 FE 21 1B 63 E2 04 A5 83 0F 90 00 88", $"Cingular \"64Ksmartchip\" GSM SIM{Environment.NewLine}Telia GSM/3G (Swedish operator)" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 E0 73 FE 21 1B 63 E2 06 A6 83 0F 90 00 89", $"TracFone (US) Net10 GSM SIM card{Environment.NewLine}Simyo (Germany) GSM SIM card{Environment.NewLine}H3G (Italy) UMTS USIM card" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 E0 73 FE 21 1B 63 E2 07 A7 83 0F 90 00 89", $"SIM NRJ Mobile{Environment.NewLine}H3G (UK) UMTS USIM card{Environment.NewLine}Orange UK GSM/UMTS SIM" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 E0 73 FE 21 1B 63 E2 08 A8 83 0F 90 00 89", $"H3G (Sweden) UMTS USIM card" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 E0 73 FE 21 1B 63 E2 09 A9 83 0F 90 00 89", $"GSM SIM Vodafone NL postpaid" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 E0 73 FE 21 1B 63 E2 0A D2 83 0F 90 00 F1", $"GSM, Vodafone (Germany) (Telecommunication)" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 E0 73 FE 21 1B 64 06 90 62 00 82 90 00 36", $"AT&T UICC with USIM (Telecommunication)" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 E0 73 FE 21 1B 64 07 52 93 01 82 90 00 05", $"AT&T nano SIM (Telecommunication)" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 E0 73 FE 21 1B 64 07 52 93 02 82 90 00 06", $"AT&T GO PHONE 2G (Telecommunication)" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 E0 73 FE 21 1B 64 07 53 63 01 82 90 00 F4", $"AT&T UICC with USIM and ISIM (Telecommunication)" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 E0 73 FE 21 1B 64 40 61 41 00 82 90 00 A2", $"SIM card (Telecommunication)" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 E0 73 FE 21 1B 64 40 67 62 00 82 90 00 87", $"ATT SIM card (Telecommunication)" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 E0 73 FE 21 1B 64 41 12 01 00 82 90 00 90", $"MTS SIM card (Russia) (Telecommunication)" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 E0 73 FE 21 1B 64 41 13 21 00 82 90 00 B1", $"AT&T SIM card (Telecommunication)" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 E0 73 FE 21 1B 64 41 32 31 00 82 90 00 80", $"Telefonica | Vivo Brazil M2M SIM Card (Telecommunication)" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 E0 73 FE 21 1B 64 41 67 11 00 82 90 00 F5", $"MTS SIM card (Russia) (Telecommunication)" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 E0 73 FE 21 1B 65 9F 01 09 02 04 81 05 C4", $"2degrees mobile SIM card" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 E0 73 FE 21 1B 65 B4 01 0E 01 02 81 05 ED", $"USIM Card by Maroc Telecom Morocco (Telecommunication)" },
            new List<string> () { "3B 9F 95 80 1F C7 80 31 E0 73 FE 21 1B 67 53 48 43 4F 5F 01 01 9B", $"baicells sim card (Telecommunication)" },
            new List<string> () { "3B 9F 95 80 3F C3 A0 80 31 E0 73 FE 21 13 63 8D 43 42 83 F0 90 00 34", $"Taisys Java Csrd (Telecommunication)" },
            new List<string> () { "3B 9F 95 80 3F C7 A0 80 31 A0 73 BE 21 1B 53 05 D0 80 83 05 90 00 24", $"NTT docomo Xi(LTE) AX05(Gemalto) Pink SIM (Telecommunication)" },
            new List<string> () { "3B 9F 95 80 3F C7 A0 80 31 E0 73 FE 21 13 63 55 40 22 83 07 90 00 7C", $"Ubivelox (JavaCard)" },
            new List<string> () { "3B 9F 95 81 31 FE 9F 00 65 46 53 05 .. 06 71 DF 00 00 00 .. .. .. ..", $"Feitian PKI{Environment.NewLine}FTCOS/PK-01C" },
            new List<string> () { "3B 9F 95 81 31 FE 9F 00 65 46 53 05 30 06 71 DF 00 00 00 80 6A 82 5E", $"Feitian PKI" },
            new List<string> () { "3B 9F 95 81 31 FE 9F 00 66 46 53 05 01 00 11 71 DF 00 00 .. .. .. ..", $"Feitian ePass2003 token" },
            new List<string> () { "3B 9F 95 81 31 FE 9F 00 66 46 53 05 10 00 FF 71 DF 00 00 00 00 00 EC", $"JavaCOS A22 dual interface Java card - 150K (JavaCard)" },
            new List<string> () { "3B 9F 95 81 31 FE 9F 00 66 46 53 05 10 04 31 71 DF 00 00 00 00 00 26", $"ePass2003 (PKI)" },
            new List<string> () { "3B 9F 95 81 31 FE 9F 00 66 46 53 05 10 04 31 71 DF 00 00 06 00 00 20", $"FEITIAN ePASS 2003 Auto (PKI)" },
            new List<string> () { "3B 9F 95 81 31 FE 9F 00 66 46 53 05 10 04 31 71 DF 00 00 39 00 00 1F", $"Feitian ePass2003 (PKI)" },
            new List<string> () { "3B 9F 95 81 31 FE 9F 00 66 46 53 05 10 06 31 71 DF 00 00 00 00 00 24", $"FT ePass2003Auto USB Token (PKI)" },
            new List<string> () { "3B 9F 95 81 31 FE 9F 00 66 46 53 05 10 32 38 71 DF 00 00 06 00 00 1F", $"token (PKI)" },
            new List<string> () { "3B 9F 95 81 31 FE 9F 00 66 46 53 05 20 03 25 71 DF 00 00 00 00 00 05", $"Feitian ePass2003 token" },
            new List<string> () { "3B 9F 95 81 31 FE 9F 00 66 46 53 05 20 03 25 71 DF 00 00 03 90 00 96", $"Feitian ePass2003 token (PKI)" },
            new List<string> () { "3B 9F 95 81 31 FE 9F 00 66 46 53 05 23 00 25 71 C3 9F 00 00 00 00 86", $"Feitian ePass2003 token" },
            new List<string> () { "3B 9F 95 81 31 FE 9F 00 66 46 53 05 23 00 25 71 DF 00 00 0. 00 00 0.", $"Feitian ePass2003 (PKI)" },
            new List<string> () { "3B 9F 95 81 31 FE 9F 00 66 46 53 05 23 00 25 71 DF 00 00 03 90 00 96", $"Feitian USB Cryptographic token (FIPS 140-2 Level 3) (PKI)" },
            new List<string> () { "3B 9F 95 81 31 FE 9F 00 66 46 53 05 32 02 25 71 DF 00 00 06 00 00 10", $"ePass 3003 Auto (PKI)" },
            new List<string> () { "3B 9F 95 81 31 FE 9F 00 66 46 53 05 34 00 25 71 DF 00 00 03 6A 82 F9", $"Feitian ePass2003Auto (PKI)" },
            new List<string> () { "3B 9F 95 81 31 FE 9F 00 66 46 53 05 51 00 33 71 DF 00 00 00 00 00 61", $"FT ePass2003Auto 00 00 (PKI)" },
            new List<string> () { "3B 9F 95 81 31 FE 9F 00 66 46 53 05 51 00 33 71 DF 00 00 06 00 00 67", $"Epass2003 (PKI)" },
            new List<string> () { "3B 9F 95 C0 0A 1F 07 80 31 E0 73 FE 21 1B 63 F1 00 AD 83 0F 90 00 1D", $"EMT WPKI USIM (2014, Estonia, JavaCard) (Telecommunication)" },
            new List<string> () { "3B 9F 95 C0 0A 1F C7 80 31 E0 73 FE 21 1B 63 F1 00 AD 83 0F 90 00 DD", $"Telenor SIM card (Norway)" },
            new List<string> () { "3B 9F 96 40 0A 80 31 E0 6B 04 20 05 02 58 55 55 55 55 55 55", $"BuyPass identification card. It can also possibly be used to hold e-currency." },
            new List<string> () { "3B 9F 96 40 0A 80 31 E0 6B 04 21 05 02 61 55 55 55 55 55 55", $"altinn - Buypass{Environment.NewLine}Electronic ID card for login to the altinn.no service" },
            new List<string> () { "3B 9F 96 40 0A 80 31 E0 6B 04 21 05 02 6C 55 55 55 55 55 55", $"Banca Intesa (Bank)" },
            new List<string> () { "3B 9F 96 40 0A 80 31 E0 6B 04 31 05 02 A8 55 55 55 55 55 55", $"Norsk Tipping tippekort (eID)" },
            new List<string> () { "3B 9F 96 80 1F 43 80 31 E0 73 36 21 13 57 4A 33 0E 09 31 41 00 AA", $"Elisa UICC (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F 43 80 31 E0 73 36 21 13 57 4A 33 0E 0C 31 41 00 AF", $"GSM, Vodafone (Germany)" },
            new List<string> () { "3B 9F 96 80 1F 47 80 31 E0 73 36 21 13 57 4A 33 0E 0C 31 41 00 AB", $"NATEL SIM-Card swisscom{Environment.NewLine}Vodafone Germany Micro-SIM from 2010" },
            new List<string> () { "3B 9F 96 80 1F 47 80 31 E0 73 FE 21 13 57 4A 33 0E 25 33 32 00 3B", $"SMART prepaid card, Estonia (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F 87 80 31 E0 73 FE 21 19 67 4A 55 54 73 30 09 48 DB", $"nano sim/usim card (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F 87 80 31 E0 73 FE 21 19 67 4A 55 54 75 30 06 62 F8", $"SIM Card (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F 87 80 31 E0 73 FE 21 19 67 4A 55 73 30 31 07 46 BE", $"Hologram Developer Global IoT SIM Card (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F 87 80 31 E0 73 FE 21 1B 67 4A 4C 52 75 31 04 51 D5", $"Test card provided with 4G/5G network from Amarisoft (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F 87 80 31 E0 73 FE 21 1B 67 4A 4C 75 30 30 02 48 A9", $"Cardcentrics (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F 87 80 31 E0 73 FE 21 1B 67 4A 4C 75 30 34 05 4B A9", $"Test Card (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F 87 80 31 E0 73 FE 21 1B 67 4A 55 52 75 31 05 4B D7", $"Softbank (C2) USIM card (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C3 00 68 10 44 05 01 46 49 53 45 31 C8 07 90 00 1A", $"SETEC SetCard 32K PKI Evaluated SetCOS 4.4.1" },
            new List<string> () { "3B 9F 96 80 1F C3 80 31 E0 73 FA 21 00 63 31 60 23 83 10 90 00 BE", $"TAISYS SIMoME JAR (JavaCard)" },
            new List<string> () { "3B 9F 96 80 1F C3 80 31 E0 73 FE 21 00 67 11 01 67 40 06 00 77 89", $"Beni's UICC 4G LTE (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C3 80 31 E0 73 FE 21 1B B3 E2 02 7E 83 0F 90 00 82", $"Vodafone SIM Card (D2, 1800Mhz, Germany, Twincard, possibly others too?), manufactured by Gemplus (See stamp on the chip){Environment.NewLine}MobileOne (Singaporean 3G/GSM operator) SIM card \"II(3G-64) M1 3G \"" },
            new List<string> () { "3B 9F 96 80 1F C6 80 31 E0 73 F6 21 13 67 4D 45 22 00 79 02 00 80", $"TMobile (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C6 80 31 E0 73 F6 21 13 67 4D 45 22 00 80 01 00 7A", $"ORANGE SPAIN GSM 4G SIM (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C6 80 31 E0 73 F6 21 13 67 56 02 22 00 80 01 01 27", $"giffgaff USIM (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C6 80 31 E0 73 F6 21 13 67 56 03 22 01 21 01 00 87", $"Rain 4G 5G Internet Service provider (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C6 80 31 E0 73 FE 21 11 63 3F 01 11 83 07 90 00 E4", $"VR-Bank VRNetworld HBCI Card (Bank)" },
            new List<string> () { "3B 9F 96 80 1F C6 80 31 E0 73 FE 21 13 57 4A 33 05 77 33 33 00 E2", $"USIM issued by Moldcell mobile operator in Moldova (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C6 80 31 E0 73 FE 21 1B 64 41 02 41 00 82 90 00 C2", $"Empire Bank ltd (Bank){Environment.NewLine}Finnish Telia SIM-card (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C6 80 31 E0 73 FE 21 1B 64 41 04 81 00 82 90 00 04", $"SAP Leonardo IoT Connect 365 SIM card (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C6 80 31 E0 73 FE 21 1B 64 41 15 01 00 82 90 00 95", $"Telia LT prepaid Ezys USIM (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C6 80 31 E0 73 FE 21 1B 64 41 17 73 00 82 90 00 E5", $"Prixtel SIM card over OrangeF network (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C6 80 31 E0 73 FE 21 1B 64 41 19 31 00 82 90 00 A9", $"Taiwan Star Telecom Corporation Limited (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C6 80 31 E0 73 FE 21 1B 64 41 24 91 00 82 90 00 34", $"Fido Canada (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C6 80 31 E0 73 FE 21 1B 64 41 25 51 00 82 90 00 F5", $"R&S CMW-Z06 Multi Test SIM (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C6 80 31 E0 73 FE 21 1B 64 41 30 32 00 82 90 00 83", $"SFR (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C6 80 31 E0 73 FE 21 1B 64 41 34 61 00 82 90 00 D4", $"Ting X1 GSM SIM Card (4G, T-Mobile network) (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C6 80 31 E0 73 FE 21 1B 66 D0 02 06 13 12 18 03 1E", $"SIM card (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C6 80 31 E0 73 FE 21 1B 66 D0 02 06 E2 0F 18 01 F0", $"Telekom Sim card (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C6 80 31 E0 73 FE 21 1B 66 D0 02 06 E2 0F 18 03 F2", $"Vulcan 0502 T-Mobile SIM (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C6 80 31 E0 73 FE 21 1B 66 D0 02 06 E2 0F 18 04 F5", $"T-Mobile Nederlands (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C6 80 31 E0 73 FE 21 1B 66 D0 02 06 E2 0F 18 09 F8", $"Croatian Telecom SIM card (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C6 80 31 E0 73 FE 21 1B 66 D0 02 06 E2 0F 38 05 D4", $"SIM Card from Tmobile Czech Republic (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C6 80 31 E0 73 FE 21 1B 66 D0 02 21 AB 11 18 01 80", $"Telekom Germany Triple SIM issued in 2018 (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C6 80 31 E0 73 FE 21 1B 66 D0 02 21 AB 11 18 07 86", $"telekom HU nano sim card (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C6 80 31 E0 73 FE 21 1C 64 41 19 31 00 82 90 00 AE", $"SORACOM SIM (plan unknown) (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 A0 73 BE 21 13 67 43 20 07 18 00 00 01 00", $"sysmoUSIM-SJS1 (Telecommunication) (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 A0 73 BE 21 13 67 43 20 07 18 00 00 01 A5", $"sysmoUSIM-SJS1 (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 A0 73 BE 21 13 67 44 22 06 10 00 00 01 A9", $"Fairwaves test SIM card (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 F6 21 13 67 4D 45 16 00 43 01 00 8C", $"SIM From Tuenti Móvil Spain (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 F6 21 13 67 4D 45 16 00 61 01 00 AE", $"T-Mobile USA SIM Card (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 F6 21 13 67 4D 45 17 00 63 02 01 AF", $"TIM 4G LTE SIM Card (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 F6 21 13 67 4D 45 24 00 67 01 00 9A", $"Mediamarkt Mobil SIM card (Austria) (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 F6 21 13 67 4D 45 27 00 77 01 00 89", $"T-Mobile Compatible Straight Talk™ SIM Card (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 F6 21 13 67 56 03 27 00 89 01 02 28", $"TMobile Prepaid USIM (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 F6 21 13 67 56 03 27 01 01 02 03 A3", $"USIM LTE MOVISTAR (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 F6 21 13 67 56 03 27 01 02 01 00 A0", $"vivo (Other)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 .. 63 .. .. .. 83 .. 90 00 ..", $"TIM (Italy) 128KB GSM SIM{Environment.NewLine}H3G (Italy) UMTS USIM{Environment.NewLine}Vodafone (UK) SIM" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 11 63 40 72 62 83 07 90 00 9A", $"GSM SIM / LTE UICC card issued by Omnitel, Lithuania (Telecomunications)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 11 63 40 82 91 83 07 90 00 99", $"Chunghwa Telecom (Taiwan) 3G/4G PrePaid card" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 11 65 66 74 0E 11 13 91 00 57", $"XLB.LTE Test Card (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 57 4A 33 05 31 33 30 00 A6", $"AT&T eUICC (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 57 4A 33 0E 1F 33 31 00 82", $"Sysmocom SIM Card (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 57 4A 33 0E 1F 33 32 00 81", $"Lidl Connect SIM Card (Vodafone) (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 57 4A 33 0E 20 33 31 00 BD", $"T-Mobile US USIM card (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 57 4A 33 0E 20 33 32 00 BE", $"M2M2FF1-NONRUG-D - Verizon Non-Rugged M2M SIM Card (Telecommunication){Environment.NewLine}Telus Mobility SIM card (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 57 4A 33 0E 20 33 33 00 BF", $"Turk Telekom SIM card [4>5G] (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 57 4A 33 0E 22 33 32 00 BC", $"Project Fi (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 57 4A 33 0E 24 33 32 00 BA", $"GSM, Vodafone (Germany) (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 57 4A 33 0E 25 33 32 00 BB", $"Sintel hi! Tourist prepaid (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 57 4A 33 0E 26 33 32 00 B8", $"Vodafone sim card (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 57 4A 33 0E 3F 33 34 00 A7", $"SIM Card (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 57 4A 33 81 04 33 33 00 14", $"PureTalk SIM Card (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 67 91 18 02 04 06 06 06 51", $"USIM (3G PF) Orange" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 67 93 18 01 01 04 01 09 5F", $"Telstra 128K Universal Orange SIM Card (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 67 93 19 01 04 01 01 07 50", $"Telefonica m2m simcard, Movistar o2 vivo (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 67 93 21 01 07 03 01 03 6D", $"GSM SIM blau (MVNO) Germany from 2013" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 67 93 27 01 02 02 05 01 69", $"DigiMobil SIM (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 67 93 27 01 02 04 08 01 62", $"Orange USIM card used in Poland (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 67 93 30 01 03 03 01 04 7F", $"T-Mobile US SIM card (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 67 93 30 01 03 04 03 02 7C", $"Comprion test U(SIM): model 128K/J LTE Test (U)SIM - Mini-UICC, product number Prod. No.: 10432006 (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 67 93 30 01 06 02 01 02 7D", $"Morpho USIM (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 67 93 30 01 08 02 01 02 73", $"Bouygues Telecom SIM (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 67 93 30 01 11 02 01 02 6A", $"R&S CMW-Z04 Mini-UICC Test Card (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 67 93 31 01 08 01 01 01 72", $"Morpho (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 67 94 03 03 0A 02 02 02 44", $"Digi mobil Romania (old sim card version) (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 67 94 03 07 03 04 04 04 4F", $"GSM-SIM EMT (3G modem 2011, Estonia)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 67 94 03 07 04 07 07 07 4B", $"Older Vodafone SIM Card New Zealand (full-size, 64k) (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 67 94 03 11 00 00 02 03 5F", $"Simple mobile. UICC with USIM (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 67 94 04 01 07 02 02 02 4C", $"Orange Mobicarte (France)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 67 94 04 04 03 05 05 05 4A", $"Claro operator SIM" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 67 94 16 02 07 05 02 02 5A", $"CSL Mobile / PCCW SIM Card (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 67 98 01 01 02 02 03 01 42", $"Telenor SIM card (Hungary) (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 67 98 01 01 04 02 03 02 47", $"ReadySIM / T-Mobile USA USIM (2013) (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 67 98 01 01 08 03 01 03 49", $"Yesss! SIM card (Austria) (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 67 98 02 01 01 05 01 05 43", $"CMHK card. China Mobile Hong Kong. (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 67 98 02 01 07 01 01 01 45", $"Vodafone SIM card (Czech Republic) (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 67 98 04 01 01 03 01 03 45", $"Telekom Romania Mobile Communications (ex Cosmote) (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 67 98 05 02 01 03 01 03 47", $"USA T-Mobile 4G LTE GSM mobile data sim card, text, talk, and data (contract plan). Issued to/for android smart phone. (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 67 98 05 02 04 03 01 03 42", $"AuStralian telstra usim (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 67 98 05 02 12 03 01 03 54", $"Vodafone UK PAYG Data SIM (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 67 98 07 02 01 01 01 01 45", $"Chunghwa Telecom Prepaid 4G SIM (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 67 98 07 02 01 02 01 02 45", $"SIM card from the Polish telecom operator \"P4\" or \"Play\" (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 67 98 07 02 04 02 38 01 7A", $"Beeline (Russia) SIM card (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 67 98 07 02 05 06 03 01 44", $"French free.fr 2€/month sim card (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 67 98 07 02 06 01 01 01 42", $"Digi Mobil (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 67 98 07 02 10 01 01 01 54", $"SIM Card (Carrier: BOB, Country: Austria) (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 67 98 07 02 13 01 01 01 57", $"Polish MVNO \"nju mobile\" SIM card (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 13 67 98 07 02 14 02 01 03 51", $"LTE USIM (US) (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 15 57 4A 33 0E 3B 33 34 00 A5", $"O2 Spain phone SIM (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 15 57 4A 33 0E 3F 33 35 00 A0", $"Telefonica (Germany) SIM Card (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 17 57 4A 33 0E 3F 33 34 00 A3", $"Telecommunication (SIM or USIM card) T-Mobile Communications (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 17 57 4A 33 0E 3F 33 35 00 A2", $"Megafon (RUS) SIM Card (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 17 57 4A 33 0E 3F 33 36 00 A1", $"Bell Mobility MULTI SIM (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 17 57 4A 33 81 04 33 36 00 15", $"HoT Austria SIM Card (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 57 31 86 60 B2 1A 0C 0C 9F", $"SIM CARD (JavaCard)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 63 00 57 00 83 81 90 00 11", $"3 (3g microUSIM) Italian subsidiary H3G" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 63 40 41 91 83 07 90 00 50", $"giffgaff UK 3G SIM{Environment.NewLine}netzclub sponsored mobile{Environment.NewLine}o2 Loop GSM SIM Germany (PREPAID) from 2013" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 63 E2 03 94 83 0F 90 00 BD", $"USIM (3G DF) Orange" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 64 06 85 83 00 82 90 00 C1", $"ANCEL (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 64 06 97 82 00 82 90 00 D2", $"MTN IRANCELL In Iran Sim Card (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 64 07 14 81 00 82 90 00 53", $"SFR operator 3G" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 64 07 54 61 00 82 90 00 F3", $"Aero2 (Poland) - A 900Mhz HSPA+ and 2500Mhz LTE wholesale telecom operator{Environment.NewLine}USIM providing toll-free access to the Internet (\"Bezpłatny Dostęp do Internetu\" service)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 64 07 59 51 00 82 90 00 CE 00 00 00 00 00 00 00 00 00 00", $"Oberthur USIM card (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 64 08 10 21 00 82 90 00 F8", $"Telia Mobile-ID SIM card in Estonia (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 64 08 28 23 00 82 90 00 C2", $"eSIM from automotive module (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 64 40 41 11 00 82 90 00 D1", $"TEST CARD (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 64 40 41 12 00 82 90 00 D2", $"Free Mobile SIM Card{Environment.NewLine}B&YOU SIM card" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 64 40 45 11 00 82 90 00 D5", $"Orange Spain GSM SIM Card (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 64 40 61 81 00 82 90 00 61", $"tele2 (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 64 40 78 83 00 82 90 00 7A", $"Free Mobile SIM (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 64 40 82 21 00 82 90 00 22", $"Bouygues Telecom (French Mobile Provider SIM card) (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 64 40 91 22 00 82 90 00 32", $"1&1 Simcard (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 64 41 24 94 00 82 90 00 30", $"Telefonica Germany / o2 cellular USIM card (ICCID starts with 89492281945) - Card manufacturer IDEMIA Germany GmbH (code 8) - Year 19 / Week 45 (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 64 41 27 11 00 82 90 00 B6", $"Viettel LTE SIM Card (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 64 41 38 02 00 82 90 00 BA", $"SIM card operateur Free (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 64 41 44 73 00 82 90 00 B7", $"Bouygues Telecom (French Mobile Provider SIM card) (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 64 41 50 31 00 82 90 00 E1", $"telcel sim card (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 64 41 72 51 00 82 90 00 A3", $"Free Mobile (French wireless service provider) SIM card (mini-SIM with micro-SIM cutout) received in 2020-09 (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 64 41 72 52 00 82 90 00 A0", $"Woolworths Mobile Prepaid SIM (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 64 41 76 32 00 82 90 00 C4", $"T-Mobile SIM card issued April 2021 (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 65 24 01 09 01 00 81 05 7B", $"Lycamobile (UK) GSM SIM card" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 65 26 01 09 00 07 81 05 7F", $"EMT WPKI 2015 (ECC) subscription (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 65 27 01 09 01 03 81 05 7B", $"slarmy (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 65 2A 01 09 01 01 81 05 74", $"9mobile Nigeria (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 65 2A 01 0A 01 02 81 05 74", $"Thailand AIS SIM Card (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 65 2A 01 0E 02 01 81 05 70", $"gsm (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 65 2D 01 0C 04 00 81 05 72", $"Tri Indonesia Bima+ SIM Card (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 65 2F 01 09 02 0A 81 05 79", $"cellcom israel sim (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 65 2F 01 0A 03 01 81 05 70", $"SMART Prepaid SIM (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 65 2F 01 0A 03 04 81 05 75", $"Smart Telecom (PH) (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 65 2F 01 0D 01 00 81 05 74", $"vodacom_sim (Pay TV)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 65 56 54 4C 01 74 81 05 6D", $"Viettel LTE SIM (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 65 63 01 09 02 01 81 05 3E", $"2degrees Mobile SIM Card New Zealand (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 65 BA 01 09 04 04 81 00 E1", $"Blank SIM (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 6B 82 0E 18 01 FE", $"Telekom Deutschland GmbH - Xtra Data Karte (3G SIM)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 6B 82 0E 18 03 FC", $"Hofer Telekom (HoT) Austrian mobile provider SIM card (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B 66 D0 01 6B 82 0E 38 05 DA", $"GTS Czech MVNE SIM for T-Mobile (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B B3 E2 03 94 83 0F 90 00 6D", $"GemXplore 3G v2.2" },
            new List<string> () { "3B 9F 96 80 1F C7 80 31 E0 73 FE 21 1B B3 E2 04 A5 83 0F 90 00 5B", $"Tre Italia Gemplus (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 3F C3 A0 80 31 E0 73 F6 21 13 57 4A 4D 0E 1D 31 30 00 71", $"Telenor SIM card (Norway)" },
            new List<string> () { "3B 9F 96 80 3F C6 A0 80 31 E0 73 F6 21 16 57 4A 4D 02 0B 34 54 63 69", $"SIM card Wingo operator (Switzerland) (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 3F C7 00 80 31 E0 73 FE 21 1B 64 08 05 03 00 82 90 00 EF", $"Multipurpose UICC card for 2G, 3G, 4G/LTE, CDMA, ISIM & NFC (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 3F C7 00 80 31 E0 73 FE 21 1F 64 41 26 21 00 82 90 00 A3", $"Smartjac SMAOT100A234FF (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 3F C7 82 80 31 E0 73 F6 21 57 57 4A 33 05 81 05 30 00 CE", $"COMPRION M2M eUICC (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 3F C7 82 80 31 E0 73 F6 21 57 57 4A 4D 02 0B 60 01 00 69", $"eSIM GSMA Card (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 3F C7 82 80 31 E0 75 F6 21 57 21 03 55 02 0B 60 50 00 19", $"st33g1m2 (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 3F C7 A0 80 31 E0 73 F6 21 56 57 4A 4D 02 0B 34 44 00 5B", $"Norwegian telenor (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 3F C7 A0 80 31 E0 73 F6 21 57 57 4A 4D 02 0B 34 54 63 29", $"Orange FR - opa (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 3F C7 A0 80 31 E0 73 FE 21 1B 63 F1 00 E8 83 00 90 00 5E", $"UICC CARD (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 3F C7 A0 80 31 E0 73 FE 21 1B 64 07 68 9A 00 82 90 00 B4", $"Orange SIM Card (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 3F C7 A0 80 31 E0 73 FE 21 1B 64 08 05 03 00 82 90 00 4F", $"NFC-enabled SIM card of MTS Russia. (Telecommunication)" },
            new List<string> () { "3B 9F 96 80 3F C7 A0 80 31 E0 73 FE 21 1F 63 00 69 00 83 81 90 00 AB", $"GSM file system and SWP sample supplied with STMicro development kit (Other)" },
            new List<string> () { "3B 9F 96 80 3F C7 A0 80 31 E0 73 FE 21 1F 64 41 26 91 00 82 90 00 B3", $"LTE Lab SIM Ver 1.3 (Telecommunication)" },
            new List<string> () { "3B 9F 96 81 31 FE 45 80 65 54 43 12 21 08 31 C0 73 F6 21 80 81 05 9A", $"Scientific and Technological Research Council of Turkey (test card) (eID)" },
            new List<string> () { "3B 9F 96 81 31 FE 45 80 67 55 45 4B 41 45 12 12 31 80 73 B3 A1 80 EA", $"AKiS v1.2 on nxp chip" },
            new List<string> () { "3B 9F 96 81 31 FE 45 80 67 55 45 4B 41 45 12 52 31 80 73 B3 A1 80 AA", $"AKiS v1.2.1 on infineon chip" },
            new List<string> () { "3B 9F 96 81 31 FE 45 80 67 55 45 4B 41 45 12 53 31 80 73 B3 A1 80 AB", $"AKiS v1.2.1 on nxp chip" },
            new List<string> () { "3B 9F 96 81 31 FE 45 80 67 55 45 4B 41 45 12 92 31 80 73 B3 A1 80 6A", $"AKiS v1.2.2 on infineon chip" },
            new List<string> () { "3B 9F 96 81 31 FE 45 80 67 55 45 4B 41 45 12 93 31 80 73 B3 A1 80 6B", $"AKiS v1.3 on infineon chip" },
            new List<string> () { "3B 9F 96 81 31 FE 5D 00 64 04 28 01 02 31 C0 73 F7 01 D0 00 90 00 65", $"German eTicketing SAM (Transport)" },
            new List<string> () { "3B 9F 96 81 31 FE 9D 00 64 05 A0 03 04 31 C0 73 F7 01 D0 00 90 00 28", $"Deutsche Telekom AG, TeleSec PKS ECC Signature Card (PKI)" },
            new List<string> () { "3B 9F 96 81 B1 FE 45 1F 07 00 64 05 1E B2 00 31 B0 73 96 21 DB 05 90 00 5C", $"SignTrust (www.signtrust.de){Environment.NewLine}Infinion SLE66CX680PE with Starcos 3.2" },
            new List<string> () { "3B 9F 96 81 B1 FE 45 1F 07 00 64 05 1E B2 03 31 B0 73 96 21 C0 05 90 00 44", $"German Dentist ID (eID)" },
            new List<string> () { "3B 9F 96 C0 0A 1F C3 80 31 E0 73 FE 21 1B 63 F1 00 AD 83 0F 90 00 DA", $"SIM SFR Pro (French Mobile Operator)" },
            new List<string> () { "3B 9F 96 C0 0A 1F C6 80 31 E0 73 FE 21 1F 65 D0 02 33 13 1B 81 0F FA", $"Tinkoff SIM card (Telecommunication)" },
            new List<string> () { "3B 9F 96 C0 0A 1F C7 80 31 E0 73 FE 21 1B 63 F1 00 AD 83 0F 90 00 DE", $"H3G (Italy) UMTS USIM card" },
            new List<string> () { "3B 9F 96 C0 0A 1F C7 80 31 E0 73 FE 21 1B 65 D0 01 10 09 22 81 00 F3", $"Verizon 4G LTE SIM Card (Telecommunication)" },
            new List<string> () { "3B 9F 96 C0 0A 1F C7 80 31 E0 73 FE 21 1B 65 D0 01 8E 0E 32 81 00 7A", $"Rogers 3G SIM card" },
            new List<string> () { "3B 9F 96 C0 0A 1F C7 80 31 E0 73 FE 21 1F 65 D0 02 09 12 EE 81 0F 35", $"German SIM card Drillisch (Telefonica) (Telecommunication) (Telecommunication)" },
            new List<string> () { "3B 9F 96 C0 0A 1F C7 80 31 E0 73 FE 21 1F 65 D0 02 0B 11 A4 81 0F 7E", $"Telia Finland Oyj, network operator LTE (Telecommunication)" },
            new List<string> () { "3B 9F 96 C0 0A 1F C7 80 31 E0 73 FE 21 1F 65 D0 13 37 0F 3B 81 0F D2", $"Gemalto Security Element (PKI)" },
            new List<string> () { "3B 9F 96 C0 0A 31 FE 45 43 54 31 69 0B 01 00 01 00 00 00 00 00 00 00 0D", $"EU smart tachograph card (driver/company/control/workshop)" },
            new List<string> () { "3B 9F 96 C0 0A 3F C6 A0 80 31 E0 73 FE 21 1B 65 D0 01 74 0E EB 81 0F D7", $"Verizon \"4G LTE\" USIM (Telecommunication)" },
            new List<string> () { "3B 9F 96 C0 0A 3F C6 A0 80 31 E0 73 FE 21 1B 65 D0 01 74 0F 50 81 0F 6D", $"5G (Telecommunication)" },
            new List<string> () { "3B 9F 96 C0 0A 3F C6 A0 80 31 E0 73 FE 21 1F 65 D0 01 90 0F 3B 81 0F E6", $"Verizon US USIM card (Telecommunication)" },
            new List<string> () { "3B 9F 96 C0 0A 3F C6 A0 80 31 E0 73 FE 21 1F 65 D0 02 09 10 7C 81 0F 24", $"GSM SIM Vodafone NL postpaid NFC+ (Telecommunication)" },
            new List<string> () { "3B 9F 96 C0 0A 3F C6 A0 80 31 E0 73 FE 21 1F 65 D0 02 1B 12 B7 81 0F FF", $"SIM Card Fastweb IT GSM mobile network (Telecommunication)" },
            new List<string> () { "3B 9F 96 C0 0A 3F C7 A0 80 31 E0 73 FE 21 1B 65 D0 01 74 0E 8D 81 0F B0", $"USIM" },
            new List<string> () { "3B 9F 96 C0 0A 3F C7 A0 80 31 E0 73 FE 21 1B 65 D0 01 74 0E E3 81 0F DE", $"EE (UK) Mobile Phone SIM Card circa 2016 (Telecommunication)" },
            new List<string> () { "3B 9F 96 C0 0A 3F C7 A0 80 31 E0 73 FE 21 1B 65 D0 01 74 0F 13 81 0F 2F", $"Phone card sim (Telecommunication)" },
            new List<string> () { "3B 9F 96 C0 0A 3F C7 A0 80 31 E0 73 FE 21 1F 65 D0 02 1A 12 AB 81 0F E3", $"Orange SIM (Telecommunication)" },
            new List<string> () { "3B 9F 96 C0 0A 3F C7 A0 80 31 E0 73 FE 21 1F 65 D0 02 1B 12 B7 81 0F FE", $"ISPL Card (Telecommunication)" },
            new List<string> () { "3B 9F 97 80 1F C6 80 31 E0 73 FE 21 1B 64 41 44 21 00 82 90 00 E5", $"SAKURA Internet SIM (Telecommunication)" },
            new List<string> () { "3B 9F 97 80 1F C6 80 31 E0 73 FE 21 1B 65 CA 01 0E 06 0B 81 05 9E", $"rain Networks - R15 4G Sim Card (Telecommunication)" },
            new List<string> () { "3B 9F 97 80 1F C7 80 31 E0 73 FE 21 13 67 98 08 01 12 04 01 04 5B", $"Tmobile Sim card (Telecommunication)" },
            new List<string> () { "3B 9F 97 80 1F C7 80 31 E0 73 FE 21 13 67 98 14 01 02 02 01 02 57", $"Orange SIM from Egypt (Telecommunication)" },
            new List<string> () { "3B 9F 97 80 3F C7 82 80 31 E0 73 FE 21 1F 64 08 56 21 00 82 90 00 19", $"eSIM card (Telecommunication)" },
            new List<string> () { "3B 9F 97 80 3F C7 82 80 31 E0 73 FE 21 1F 64 09 06 92 00 82 90 00 FB", $"Ubigi Transatel esim (Telecommunication)" },
            new List<string> () { "3B 9F 97 81 31 FE 45 80 65 54 43 12 21 08 31 C0 73 F6 21 80 81 05", $"Republic of Turkey Identity Card (eID)" },
            new List<string> () { "3B 9F 97 81 31 FE 45 80 65 54 43 12 21 08 31 C0 73 F6 21 80 81 05 90", $"Turkish National Electronic Identity Card - TCKK (eID)" },
            new List<string> () { "3B 9F 97 81 31 FE 45 80 65 54 43 12 21 08 31 C0 73 F6 21 80 81 05 9B", $"Turkish Republic Identity Card - Türkiye Cumhuriyeti Kimlik Kartı (TCKK) (eID)" },
            new List<string> () { "3B 9F 97 81 31 FE 45 80 65 54 43 D2 21 08 31 C0 73 F6 21 80 81 05 5B", $"Turkish Republic official electronic ID card with biometric data, e-signature, authentication, secure private-key cryptographic messaging, etc. (eID)" },
            new List<string> () { "3B 9F 97 81 31 FE 45 80 65 54 43 D3 22 82 31 C0 73 F6 21 80 81 05 D3", $"Turkish eID (Türkiye Cumhuriyeti Kimlik Kartı) (eID)" },
            new List<string> () { "3B 9F 97 C0 0A 1F C7 80 31 E0 73 FE 21 1B 65 D0 01 10 09 22 81 00 F2", $"\"ultra fast card, max speed supported for telecom\"? (transport)" },
            new List<string> () { "3B 9F 97 C0 0A 1F C7 80 31 E0 73 FE 21 1B 65 D0 01 90 0F 3B 81 0F 62", $"Gemalto Multi-SIM consumer 4.2 (ST33I1M2) (Telecommunication)" },
            new List<string> () { "3B 9F 97 C0 0A 3F C6 A0 80 31 E0 73 FE 21 1B 65 D0 01 74 0E EB 81 0F D6", $"Verizon 4G LTE Micro SIM (Telecommunication)" },
            new List<string> () { "3B 9F 97 C0 0A 3F C6 A0 80 31 E0 73 FE 21 1F 65 D0 02 1B 13 F6 81 0F BE", $"Verizon SIM Card (Telecommunication)" },
            new List<string> () { "3B 9F 97 C0 0A 3F C7 A0 80 31 E0 73 FE 21 1F 65 D0 01 90 0F EE 81 0F 33", $"AT&T Mobility LLC MicroSIM Card (Telecommunication)" },
            new List<string> () { "3B 9F 97 C0 0A B1 FE 45 3F C6 82 80 31 E0 73 FE 21 1B 65 D0 02 3A 14 C9 81 0F 8B", $"SIM (Telecommunication)" },
            new List<string> () { "3B 9F 97 C0 FF 1F C7 80 31 E0 73 FE 21 1B 63 F1 00 AD 83 0F 90 00 2A", $"Gemalto Speed Enhancement 97 (Telecommunication)" },
            new List<string> () { "3B 9F B6 81 B1 FE 5D 1F 47 00 64 04 11 03 01 31 C0 73 B7 01 00 00 90 00 35", $"BOS (Telecommunication)" },
            new List<string> () { "3B 9F D6 80 B1 A0 59 1F C7 53 4C 45 38 38 5F 50 53 4C 5F 56 30 2E 35 30 01", $"Infineon SLE88CFX4000P" },
            new List<string> () { "3B A7 00 40 .. 80 65 A2 08 .. .. ..", $"Gemplus GemSAFE Smart Card (8K)" },
            new List<string> () { "3B A7 00 40 14 80 65 A2 14 01 01 37", $"Gemplus GPK4000sdo" },
            new List<string> () { "3B A7 00 40 18 80 65 A2 08 01 01 52", $"Gemplus GPK8000{Environment.NewLine}GemSAFE Smart Card (8K)" },
            new List<string> () { "3B A7 00 40 18 80 65 A2 09 01 01 52", $"Gemplus GPK16000" },
            new List<string> () { "3B A7 00 40 18 80 65 A2 09 01 02 52", $"Gemplus GPK16000" },
            new List<string> () { "3B A7 00 40 18 80 65 A2 09 01 03 52", $"Gemplus GemSAFE std (GPK16000?)" },
            new List<string> () { "3B A8 00 81 71 46 5D 00 54 43 4F 53 31 2E 32 00 65", $"Telesec TCOS 1.2" },
            new List<string> () { "3B A8 00 81 71 46 5D 00 54 43 4F 53 31 2E 32 4B 2E", $"CeloCom Card with TCOS 1.2" },
            new List<string> () { "3B AA 00 40 14 47 47 32 45 54 35 53 34 38 30", $"Old German \"D2 Privat\" sim card (Telecommunication)" },
            new List<string> () { "3B AA 00 40 14 47 47 32 47 54 35 53 34 38 30", $"GSM-SIM Libertel (900MHz)" },
            new List<string> () { "3B AA 00 40 80 53 4F 80 53 45 03 04 11 AA A3", $"\"open platform\" ATMEGA \"new Generation\"" },
            new List<string> () { "3B AB 00 81 31 40 45 80 31 C0 65 08 06 80 00 00 00 00 84", $"Reloadable Visa Cash card (Schlumberger), Bank of America" },
            new List<string> () { "3B AC 00 40 2A 00 12 25 00 64 80 00 03 10 00 90 00", $"Sesam Vitale card CPS (Carte Profesionnel de Santé)" },
            new List<string> () { "3B AC 00 40 2A 00 12 25 00 64 80 82 02 12 00 90 00", $"Sesam Vitale card CPS (Carte Profesionnel de Santé)" },
            new List<string> () { "3B AD 00 40 FF 80 31 80 65 B0 05 01 01 5E 83 00 90 00", $"Dallas Semiconductor iButton{Environment.NewLine}JIB{Environment.NewLine}Gemplus GemXpresso 2.11PK" },
            new List<string> () { "3B B0 11 00 81 31 90 73 F2", $"SamOS 2.7" },
            new List<string> () { "3B B0 33 00 91 81 31 6B 35 FC", $"SkyperfecTV HD IC Card (Pay TV)" },
            new List<string> () { "3B B0 36 00 81 31 FE 5D 95", $"Betacrypt 2 (Comvenient GmbH) Conditional Access Smart Card (Pay TV){Environment.NewLine}www.comvenient.com" },
            new List<string> () { "3B B2 11 00 10 80 00 01", $"Atmel memory card AT88SC0104C{Environment.NewLine}Plug'n'Print" },
            new List<string> () { "3B B2 11 00 10 80 00 02", $"Atmel memory card AT88SC0204C (Atmel memory card){Environment.NewLine}Card LAVAGE reloadadble from stations TOTAL" },
            new List<string> () { "3B B2 11 00 10 80 00 04", $"Atmel memory card AT88SC0404C" },
            new List<string> () { "3B B2 11 00 10 80 00 08", $"Atmel memory card AT88SC0808C{Environment.NewLine}Smart VR Card - GD Burti" },
            new List<string> () { "3B B2 11 00 10 80 00 16", $"Atmel memory card AT88SC1616C{Environment.NewLine}Rexall (Canada) - Blood Pressure Check card" },
            new List<string> () { "3B B3 11 00 00 00 00 32", $"Atmel memory card AT88SC3216C" },
            new List<string> () { "3B B3 11 00 00 00 00 64", $"Atmel memory card AT88SC6416C" },
            new List<string> () { "3B B3 11 00 00 00 01 28", $"Atmel memory card AT88SC12816C" },
            new List<string> () { "3B B3 11 00 00 00 02 56", $"Atmel memory card AT88SC25616C" },
            new List<string> () { "3B B7 11 00 81 31 90 43 A5 .. .. .. .. .. .. ..", $"Siemens CardOS/M V1.4 (SLE44C80S)" },
            new List<string> () { "3B B7 11 00 81 31 90 43 C5 17 B0 9D 19 22 1E 1F", $"CryptoTech blank access/authentication card (Other)" },
            new List<string> () { "3B B7 11 00 81 31 90 53 B5 .. .. .. .. .. .. ..", $"CardOS EM/V1.4 (SLE44CR80S)" },
            new List<string> () { "3B B7 11 00 81 31 FE 43 20 25 85 47 02 20 28 66", $"Research Institute of Applied Information Technologies (Other)" },
            new List<string> () { "3B B7 11 00 81 31 FE 43 20 28 3F B5 03 20 31 3B", $"Research Institute of Applied Information Technologies (Other)" },
            new List<string> () { "3B B7 18 00 81 31 70 43 10 43 4E 54 52 56 32 53", $"Avtor SecureToken (PKI)" },
            new List<string> () { "3B B7 18 00 81 31 FE 65 53 50 4B 32 34 90 00 5A", $"Giesecke & Devrient Starcos 2.4" },
            new List<string> () { "3B B7 18 00 C0 3E 31 FE 65 53 50 4B 32 34 90 00 25", $"G&D STARCOS SPK 2.4" },
            new List<string> () { "3B B7 94 00 81 31 FE 55 53 50 4B 32 32 90 00 E0", $"Dresdner Bank (a German Bank) Key-Card for InternetBanking" },
            new List<string> () { "3B B7 94 00 81 31 FE 65 53 50 4B 32 32 90 00 D0", $"Giesecke & Devrient STARCOS SPK2.2" },
            new List<string> () { "3B B7 94 00 81 31 FE 65 53 50 4B 32 33 90 00 D1", $"Giesecke & Devrient Starcos 2.3{Environment.NewLine}Deutsche Bank WebSign (RSA-Card){Environment.NewLine}G&D StarSign Token{Environment.NewLine}Osakidetza ONA (eID)" },
            new List<string> () { "3B B8 13 00 81 31 20 5D 00 57 69 6E 43 61 72 64 02", $"SmartCard for Windows 1.1" },
            new List<string> () { "3B B8 13 00 81 31 FA 52 43 48 54 4D 4F 49 43 41 A5", $"citizen digital certificate (PKI)" },
            new List<string> () { "3B B8 97 00 81 31 FE 45 FF FF 14 82 30 50 23 00 F1", $"UAE Emirates ID (eID)" },
            new List<string> () { "3B B9 18 00 81 31 FE 9E 80 73 FF 61 40 83 00 00 00 DF", $"Serbian Identity Card{Environment.NewLine}This is the new Serbian biometric identity card (every adult cityzen{Environment.NewLine}must have). The chip contains owners picture, name, date and place{Environment.NewLine}of birth, current address, unique ID number and fingerprint." },
            new List<string> () { "3B B9 94 00 40 14 47 47 33 4D 48 38 35 33 30", $"T D1 GSM card (Telecommunication)" },
            new List<string> () { "3B B9 94 00 40 14 47 47 33 4E 48 38 36 34 30", $"GSM-SIM card of the Austrian mobile phone provider One{Environment.NewLine}Proximus SIM - Belgium (SetCOS?){Environment.NewLine}o2 GSM-SIM card Germany 2003" },
            new List<string> () { "3B BA 11 00 10 00 43 4C 5F 53 41 4D 00 13 38 00", $"Planeta Informatica CL-SAM (Other)" },
            new List<string> () { "3B BA 11 00 81 31 FE 4D 55 45 4B 41 45 20 56 31 2E 30 AE", $"AKİS v1.0 on infineon chip" },
            new List<string> () { "3B BA 13 00 81 31 86 5D 00 64 05 0A 02 01 31 80 90 00 8B", $"Telesec TCOS 2 (SLE44){Environment.NewLine}TCOS 2.0 (on CR80S){Environment.NewLine}Cryptokarte with RSA-Controller, T=1 Protocol" },
            new List<string> () { "3B BA 14 00 81 31 86 5D 00 64 05 14 02 02 31 80 90 00 91", $"TCOS 2.0 (on CX160S){Environment.NewLine}Telesec TCOS 2 (SLE66)" },
            new List<string> () { "3B BA 14 00 81 31 86 5D 00 64 05 7B 02 03 31 80 90 00", $"PHILIPS (HealthCare)" },
            new List<string> () { "3B BA 14 00 81 31 86 5D 00 64 05 7B 02 03 31 80 90 00 FF", $"PHILIPS (HealthCare)" },
            new List<string> () { "3B BA 14 00 81 31 86 5D 00 64 05 7B 02 03 31 90 00 FF", $"JCOP CARD (Other)" },
            new List<string> () { "3B BA 94 00 40 14", $"GG3RS732S0 ?" },
            new List<string> () { "3B BA 94 00 40 14 47 47 33 52 53 37 31 36 53 00", $"Micro Sim MCP crew sim (Telecommunication)" },
            new List<string> () { "3B BA 94 00 40 14 47 47 33 52 53 37 31 36 53 20", $"GSM SIM Elisa Estonia" },
            new List<string> () { "3B BA 94 00 40 14 47 47 33 52 53 37 31 36 53 30", $"GSM-SIM Viag Interkom E2 Loop (1800MHz){Environment.NewLine}GSM-SIM card of the Austrian A1{Environment.NewLine}GSM SIM Radiolinja Estonia; 2005" },
            new List<string> () { "3B BA 94 00 40 14 47 47 33 53 53 37 31 36 53 30", $"GSM SIM Cellway (e-plus), Germany (Telecommunication)" },
            new List<string> () { "3B BA 95 00 10 80 43 4C 5F 53 41 4D 00 01 38 11", $"CLSAM (Transport)" },
            new List<string> () { "3B BA 95 00 81 B1 86 5D 1F 43 00 64 04 5C 02 03 31 80 90 00 84", $"T-Mobile Corporate ID Card" },
            new List<string> () { "3B BA 96 00 81 31 86 5D 00 64 05 60 02 03 31 80 90 00 66", $"Telesec TCOS 2 (SLE66P){Environment.NewLine}TCOS 2.0 (on CX320P){Environment.NewLine}TeleSec Netkey Card" },
            new List<string> () { "3B BA 96 00 81 31 86 5D 00 64 05 60 02 03 31 80 90 00 66 70 01 04 05 30 C9", $"TeleSec Netkey E4 Card" },
            new List<string> () { "3B BA 96 00 81 31 86 5D 00 64 05 7B 02 03 31 80 90 00 7D", $"TeleSec NetKey Card{Environment.NewLine}Deutsche Post card (tcos)" },
            new List<string> () { "3B BB 18 00 C0 10 31 FE 45 80 67 04 12 B0 03 03 00 00 81 01 38", $"Giesecke & Devrient Star Sign Card, STARCOS 3.0 DI, 72 KB, RSA2048 bit{Environment.NewLine}Giesecke & Devrient Smartc@fe Expert 32K v2.0" },
            new List<string> () { "3B BB 18 00 C0 10 31 FE 45 80 67 04 12 B0 03 03 00 00 81 05 3C", $"Philips Smart MX{Environment.NewLine}Szczecin University of Technology in Poland student identity card (Elektroniczna Legitymacja Studencka = student identity card){Environment.NewLine}CSOB bank, Czech Republic{Environment.NewLine}CATCert (Agència Catalana de Certificació) catalan government workers identity card" },
            new List<string> () { "3B BB 18 00 C0 3E 31 FE 65 47 26 44 20 54 53 4D 20 31 2E 30 B7", $"Italian Tachograph Driver Card" },
            new List<string> () { "3B BC 18 00 81 31 20 75 5A 43 33 2E 31 32 20 52 45 56 20 41 46", $"ZeitControl BasicCard Enhanced 3.7" },
            new List<string> () { "3B BC 18 00 81 31 20 75 5A 43 33 2E 31 34 20 52 45 56 20 44 45", $"ZeitControl BasicCard Enhanced 3.14 Rev D" },
            new List<string> () { "3B BC 18 00 81 31 20 75 5A 43 33 2E 33 32 20 52 45 56 20 42 47", $"ZeitControl BasicCard (Other){Environment.NewLine}https://ZeitControl" },
            new List<string> () { "3B BC 18 00 81 31 20 75 5A 43 33 2E 33 34 20 52 45 56 20 44 47", $"ZeitControl BasicCard Enhanced ZC3.34 (Other)" },
            new List<string> () { "3B BC 94 00 40 14 47 47 33 48 33 35 58 53 32 30 30 30", $"GSM-SIM Era-PL{Environment.NewLine}T-Mobile GSM SIM Card" },
            new List<string> () { "3B BC 94 00 40 14 47 47 33 48 33 35 58 56 32 30 30 30", $"GSM SIM CARD 32K, Vodafone" },
            new List<string> () { "3B BC 94 00 40 14 47 47 33 49 35 39 42 43 32 30 30 30", $"GSM SIM Vodafona NL prepaid" },
            new List<string> () { "3B BC 94 00 40 14 47 47 33 49 35 43 41 43 31 30 30 30", $"Siemens SIM card" },
            new List<string> () { "3B BC 94 00 40 14 47 47 33 49 37 31 39 43 32 30 30 20", $"Telenor SIM card (Norway)" },
            new List<string> () { "3B BC 94 00 40 14 47 47 33 49 42 31 42 43 31 30 30 20", $"Telenor SIM (Telecommunication)" },
            new List<string> () { "3B BC 94 00 40 14 47 47 33 49 42 31 42 43 31 30 30 30", $"SIM Card (Scarlet, Belgium) (Telecommunication)" },
            new List<string> () { "3B BC 94 00 40 14 47 47 33 53 30 35 31 53 31 30 31 30", $"GSM SIM (Tele2, Estonia){Environment.NewLine}GSM SIM Elisa Estonia; 2007{Environment.NewLine}GSM SIM from 'fonic' Germany" },
            new List<string> () { "3B BC 94 00 40 14 47 47 33 53 34 43 45 43 32 30 30 30", $"Era-PL SIM Card (Telecommunication)" },
            new List<string> () { "3B BD 18 00 81 31 FE 45 80 51 02 67 04 14 B1 01 01 02 00 81 05 3D", $"Austrian \"e-Card\" (=Health Card){Environment.NewLine}special Version of Starcos 3.1" },
            new List<string> () { "3B BD 18 00 81 31 FE 45 80 51 02 67 05 18 B1 02 02 02 01 81 05 31", $"Austrian health insurance card \"e-card\"" },
            new List<string> () { "3B BD 18 00 81 31 FE 45 80 51 03 67 04 14 B1 01 01 02 00 81 05 3C", $"Austrian Health insurance card \"eCard\" (HealthCare)" },
            new List<string> () { "3B BE .. 00 00 41 05 20 00 .. .. .. .. .. .. 00 00 90 00", $"CryptoMate64 USB Cryptographic token{Environment.NewLine}ACS ACOS5-64 V2.00" },
            new List<string> () { "3B BE 11 00 00 41 01 10 20 38 00 00 00 00 00 00 00 00 00", $"ACOS2" },
            new List<string> () { "3B BE 11 00 00 41 01 38 00 00 00 00 00 00 00 00 01 90 00", $"ACS (Advanced Card System) ACOS-1{Environment.NewLine}ACOS3" },
            new List<string> () { "3B BE 11 00 00 41 01 38 00 00 00 00 00 00 00 00 02 90 00", $"ACS (Advanced Card System) ACOS-1 8K" },
            new List<string> () { "3B BE 11 00 00 41 01 38 00 00 01 00 00 00 00 00 01 90 00", $"ACOS3 Microprocessor Card (Contact) (Other)" },
            new List<string> () { "3B BE 11 00 00 41 01 38 00 00 03 00 00 00 00 00 01 90 00", $"ACS ACOS3-32 (Telecommunication)" },
            new List<string> () { "3B BE 11 00 00 41 01 38 00 00 04 00 62 75 62 7A 01 90 00", $"Advanced Card Systems ACOS3 (24k) V1.7" },
            new List<string> () { "3B BE 11 00 00 41 01 38 00 00 05 00 00 00 00 00 02 90 00", $"ACS (Advanced Card System) ACOS2" },
            new List<string> () { "3B BE 11 00 00 41 01 38 01 00 03 00 00 00 00 00 02 90 00", $"ACOS2 test card from ACS reading off a ACR38U" },
            new List<string> () { "3B BE 11 00 00 41 01 38 03 00 04 00 00 00 00 00 01 90 00", $"ACOS 3 from ACS (Other)" },
            new List<string> () { "3B BE 11 00 00 41 01 38 04 00 14 00 00 00 00 00 01 90 00", $"Dekart Smartcard Logon (eID)" },
            new List<string> () { "3B BE 11 00 00 41 01 38 04 00 14 00 00 00 00 00 02 90 00", $"DEKART proprietary logon authentication solution for Windows (Other)" },
            new List<string> () { "3B BE 11 00 00 41 01 38 05 00 07 00 00 00 00 00 02 90 00", $"EEPROM card (Other)" },
            new List<string> () { "3B BE 11 00 00 41 01 38 17 CE 01 00 00 00 00 00 01 90 00", $"ACOS3 Contact Microprocessor Card (Other)" },
            new List<string> () { "3B BE 11 00 00 41 01 38 25 00 03 00 00 00 00 00 01 90 00", $"8 pin (eID)" },
            new List<string> () { "3B BE 11 00 00 41 01 38 4D 80 0A 80 50 52 4F 56 00 90 00", $"ACS (Advanced Card System) ACOS-3" },
            new List<string> () { "3B BE 11 00 00 41 01 38 FF 40 00 00 00 00 00 00 01 90 00", $"Acos3 (zend) (eID)" },
            new List<string> () { "3B BE 11 00 00 41 07 02 00 00 00 00 00 00 00 00 01 90 00", $"ACOS7 MOC Combi-Card (Other)" },
            new List<string> () { "3B BE 18 00 00 41 05 .. 00 00 00 00 00 00 00 00 00 90 00", $"Advanced Card Systems (ACS) ACOS5 Cryptographic Smart Card" },
            new List<string> () { "3B BE 18 00 00 41 05 10 00 00 00 00 00 00 00 00 00 90 00", $"ACS ACOS5 \"ACOS5-32-G\" dual card" },
            new List<string> () { "3B BE 94 00 40 14 47 47 33 53 33 45 44 41 54 4C 36 30 31 30", $"SingTel hi! Prepaid GSM SIM UICC (Telecommunication)" },
            new List<string> () { "3B BE 94 00 40 14 47 47 33 53 33 45 48 41 54 4C 39 31 30 00", $"Latvian GSM operator TELE2" },
            new List<string> () { "3B BE 94 00 40 14 47 47 33 53 33 47 48 41 54 4C 39 31 30 30", $"simCard Vip Mobile(Serbia) or Telecom Austria (Telecommunication)" },
            new List<string> () { "3B BE 94 00 81 31 FE 35 53 50 4B 32 33 20 57 45 35 30 31 36 4E 43 25", $"G&D StarCOS SPK 2.3 secure element (Bank)" },
            new List<string> () { "3B BE 95 00 00 41 03 00 00 00 00 00 00 00 00 00 02 90 00", $"touchatag SAM card{Environment.NewLine}Spanish University of Murcia smart ID card - Old version with CajaMurcia Banking card integrated (Maestro card) (M.Mar OS) - Also used by many others spanish universities{Environment.NewLine}ACOS6 C6{Environment.NewLine}ACOS6S C7 SAM" },
            new List<string> () { "3B BE 96 00 00 41 01 38 02 00 1D 00 00 00 00 00 01 90 00", $"ACOS3-32 (Other)" },
            new List<string> () { "3B BE 96 00 00 41 03 00 00 00 00 00 00 00 00 00 02 90 00", $"SAM inside the Tikitag reader from Alcatel-Lucent" },
            new List<string> () { "3B BE 96 00 00 41 05 00 4E 46 00 00 00 00 00 00 00 90 00", $"ACOS5-64 v3.00 (PKI)" },
            new List<string> () { "3B BE 96 00 00 41 05 30 00 00 00 00 00 00 00 00 00 90 00", $"CryptoMate Nano USB Cryptographic token{Environment.NewLine}ACS ACOS5-64 V3.00" },
            new List<string> () { "3B BE 96 00 00 42 06 21 00 00 00 00 00 00 00 00 00 90 00", $"ESMART Token (PKI)" },
            new List<string> () { "3B BE 96 00 80 1F C7 80 31 E0 73 FE 21 13 62 00 .. 83 81 90 00 ..", $"Vodafone (Italy) 128 kB GSM SIM card{Environment.NewLine}TIM (Italy) 128 kB GSM SIM card" },
            new List<string> () { "3B BF .. 00 81 31 FE 5D 00 64 04 0F 03 .. 31 C0 73 F7 01 D0 00 90 00 ..", $"TCOS 3.0 on Philips P5CD036" },
            new List<string> () { "3B BF .. 00 81 31 FE 5D 00 64 04 11 03 .. 31 C0 73 F7 01 D0 00 90 00 ..", $"TCOS 3.0 on Philips P5CT072" },
            new List<string> () { "3B BF .. 00 81 31 FE 5D 00 64 04 15 03 .. 31 C0 73 F7 01 D0 00 90 00 ..", $"TCOS 3.0 on Philips P5CD072" },
            new List<string> () { "3B BF .. 00 81 31 FE 5D 00 64 04 28 03 02 31 C0 73 F7 01 D0 00 90 00 ..", $"TCOS 3.0 release 2 on Philips P5CD080" },
            new List<string> () { "3B BF .. 00 81 31 FE 5D 00 64 05 6D 03 .. 31 C0 73 F7 01 D0 00 90 00 ..", $"TCOS 3.0 on Infineon SLE 66CX642P" },
            new List<string> () { "3B BF .. 00 81 31 FE 5D 00 64 05 89 03 .. 31 C0 73 F7 01 D0 00 90 00 ..", $"TCOS 3.0 on Infineon SLE 66CLX641P" },
            new List<string> () { "3B BF .. 00 81 31 FE 5D 00 64 05 8A 03 .. 31 C0 73 F7 01 D0 00 90 00 ..", $"TCOS 3.0 on Infineon SLE 66CLX640P" },
            new List<string> () { "3B BF .. 00 81 31 FE 5D 00 64 05 91 03 .. 31 C0 73 F7 01 D0 00 90 00 ..", $"TCOS 3.0 on Infineon SLE 66CX680PE" },
            new List<string> () { "3B BF 11 00 81 31 .. 45 45 50 41 00 00 00 00 .. .. .. .. 00 00 .. .. ..", $"Austrian Quick E-purse" },
            new List<string> () { "3B BF 11 00 81 31 FE 45 45 50 41 00 00 00 00 00 00 00 00 00 00 00 00 F1", $"a.sign premium signature card" },
            new List<string> () { "3B BF 11 00 81 31 FE 45 4D 43 41 00 00 01 00 01 69 71 85 00 00 00 00 77", $"Austrian \"easybank\" branded Mastercard, issued 2007" },
            new List<string> () { "3B BF 11 00 81 31 FE 45 4D 43 41 00 00 01 00 02 08 20 51 00 00 00 00 90", $"austrian combined card of a mastercard and ÖBB Vorteilscard (Austrian Federal Railways)" },
            new List<string> () { "3B BF 11 00 81 31 FE 45 4D 43 41 00 00 01 00 02 55 91 33 00 00 00 00 1E", $"Mastercard (Paylife Austria)" },
            new List<string> () { "3B BF 11 00 C0 10 31 FE 44 53 4D 40 52 54 20 43 41 46 45 20 31 2E 31 43 C1", $"Giesecke&Devrient SmartCafe 1.1" },
            new List<string> () { "3B BF 18 00 80 31 70 35 53 54 41 52 43 4F 53 20 53 32 31 20 43 90 00 9B", $"Giesecke & Devrient STARCOS S2.1" },
            new List<string> () { "3B BF 18 00 81 31 70 55 53 54 41 52 43 4F 53 20 53 32 31 20 43 90 00 FA", $"Giesecke & Devrient STARCOS S2.1" },
            new List<string> () { "3B BF 18 00 C0 20 31 70 52 53 54 41 52 43 4F 53 20 53 32 31 20 43 90 00 9C", $"Giesecke & Devrient SPK 2.1 C" },
            new List<string> () { "3B BF 94 00 81 31 FE 65 45 4C 55 20 41 75 73 74 72 69 61 20 31 2E 32 38", $"A-Trust: trust-sign (Old Version, ca. 2002) for Digital Signature etc.{Environment.NewLine}A-Trust: a-sign-premium (ca. 2004) \"Bürgerkarte\" (\"Citizen-Card\"){Environment.NewLine}for Identifikation, Digital Signature etc.{Environment.NewLine}(\"should be\" Starcos 2.3)" },
            new List<string> () { "3B BF 96 00 81 31 FE 5D 00 64 .. .. .. .. 31 C0 73 F7 01 D0 00 90 00 ..", $"TCOS 3.0 / NetKey 3.0" },
            new List<string> () { "3B BF 96 00 81 31 FE 5D 00 64 04 11 00 00 31 C0 73 F7 01 D0 00 90 00", $"DATEV eG, Nuernberg, Bavaria, Germany (PKI)" },
            new List<string> () { "3B BF 96 00 81 31 FE 5D 00 64 04 11 03 01 31 C0 73 01 D0 00 90 00 00", $"DATEV eG, Nuernberg, Bavaria, Germany (PKI)" },
            new List<string> () { "3B BF 96 00 81 31 FE 5D 00 64 04 11 03 01 31 C0 73 F7 01 D0 00 90 00", $"DATEV eG, Nuernberg, Bavaria, Germany (PKI)" },
            new List<string> () { "3B C5 FF 81 31 FB 45 80 73 C6 01 00 00", $"Japanese Individual Number Card (eID)" },
            new List<string> () { "3B C8 00 00 00 73 C8 40 00 00 00 00", $"verve (Bank)" },
            new List<string> () { "3B CD FF 80 31 FE 45 00 68 D2 76 00 00 28 04 04 81 00 90 00 CD", $"Tachograph company test card (Transport)" },
            new List<string> () { "3B D0 96 FF 81 B1 FE 45 1F 03 2E", $"New european health insurance card of the German health insurance (G2) (HealthCare)" },
            new List<string> () { "3B D0 96 FF 81 B1 FE 45 1F 07 2A", $"German public health insurance card („Gesundheitskarte“), 2nd generation (G2), issuer Techniker Krankenkasse (HealthCare)" },
            new List<string> () { "3B D0 96 FF 81 B1 FE 45 1F C7 EA", $"German public health insurance card (Elektronische Gesundheitskarte eGK), 2nd generation (G2) (HealthCare)" },
            new List<string> () { "3B D0 97 FF 81 B1 FE 45 1F 07 2B", $"German Elektronische Gesundheitskarte (eGK) (HealthCare) - From TK (HealthCare)" },
            new List<string> () { "3B D0 97 FF 81 B1 FE 45 1F C7 EB", $"German Health Professional Card (eHBA) (HealthCare){Environment.NewLine}gSMC-KT, STARCOS 3.6 (HealthCare)" },
            new List<string> () { "3B D0 A8 FF 81 F1 FB 24 00 1F C3 F4", $"Philips DESFire SAM" },
            new List<string> () { "3B D2 18 00 81 31 FE 45 01 01 C1", $"Dutch License Plate Card (RDW)" },
            new List<string> () { "3B D2 18 00 81 31 FE 58 C9 01 14", $"Atos CardOS5 (PKI)" },
            new List<string> () { "3B D2 18 00 81 31 FE 58 C9 02 17", $"Atos CardOS 5.3 (PKI)" },
            new List<string> () { "3B D2 18 00 81 31 FE 58 C9 03 16", $"Austrian \"RKS-Card\" issued by GlobalTrust (PKI)" },
            new List<string> () { "3B D2 18 00 81 31 FE 58 C9 04 11", $"Identity Card in Slovakia with security chip and e-signature issued after 2021-06-21 (eID)" },
            new List<string> () { "3B D2 18 00 81 31 FE 58 CA 60 76", $"CardOS IoT V5.4 (PKI)" },
            new List<string> () { "3B D2 18 02 C1 0A 31 FE 58 C8 0D 51", $"Siemens Card CardOS M4.4" },
            new List<string> () { "3B D3 96 FF 81 B1 FE 45 1F 07 80 81 05 2D", $"German public health insurance card (Elektronische Gesundheitskarte eGK), 2nd generation (G2) (HealthCare)" },
            new List<string> () { "3B D5 18 00 81 31 3A 7D 80 73 C8 21 10 30", $"Aladdin eToken NG-Flash with 256MB of flash memory{Environment.NewLine}Aladdin eToken PRO (72KB)" },
            new List<string> () { "3B D5 18 00 81 31 FE 7D 80 73 C8 21 10 F4", $"Bank of Lithuania Identification card{Environment.NewLine}Gemalto SafeNet eToken Java Based Cards" },
            new List<string> () { "3B D5 18 FF 80 91 FE 1F C3 80 73 C8 21 13 08", $"Athena IDProtect (JavaCard 2.2.2){Environment.NewLine}Thales nShield Security World Card - Remote Administration Ready" },
            new List<string> () { "3B D5 18 FF 81 91 FE 1F C3 80 73 C8 21 10 0A", $"ComSign digital signature card (eID)" },
            new List<string> () { "3B D5 18 FF 81 91 FE 1F C3 80 73 C8 21 13 09", $"Athena IDProtect Key (v2)" },
            new List<string> () { "3B D5 95 04 00 AE 01 02 01 01", $"Axalto Cyberflex Access 64K v2b SM 1.1" },
            new List<string> () { "3B D5 95 FF 80 91 FE 1F C3 80 73 C8 21 13 85", $"Athena IDProtect - Cryptographic Java Card" },
            new List<string> () { "3B D5 96 FF 81 91 FE 1F C3 43 32 33 30 30 CC", $"HID Global - Crescendo C2300 (PKI)" },
            new List<string> () { "3B D6 18 00 80 B1 80 6D 1F 03 80 51 00 61 10 30 9E", $"Atmel/Athena T0 PC/SC Compliance Test Card No. 1" },
            new List<string> () { "3B D6 18 00 81 31 FE 7D 41 53 50 20 4F 53 83", $"ASP FIXED CHAL1, 2, 3 and 4 (Other)" },
            new List<string> () { "3B D6 18 00 81 B1 80 7D 1F 03 80 51 00 61 10 30 8F", $"ASECard Crypto" },
            new List<string> () { "3B D6 96 00 81 B1 FE 45 1F 07 80 31 C1 52 11 18 F8", $"smart card from NASA, 2019 (PKI)" },
            new List<string> () { "3B D6 96 00 81 B1 FE 45 1F 87 80 31 C1 52 21 19 49", $"DHS CAC card (PKI)" },
            new List<string> () { "3B D6 96 00 81 B1 FE 45 1F 87 80 31 C1 52 41 1A 2A", $"Identiv SCR3310 v2.0 (eID)" },
            new List<string> () { "3B D6 97 00 81 B1 FE 45 1F 07 80 31 C1 52 11 18 F9", $"NASA Personal Identity Verification (PIV) card (eID)" },
            new List<string> () { "3B D6 97 00 81 B1 FE 45 1F 07 80 31 C1 52 11 19 F8", $"Secure badge (PKI)" },
            new List<string> () { "3B D6 97 00 81 B1 FE 45 1F 87 80 31 C1 52 21 19 48", $"DOS PIV (PKI)" },
            new List<string> () { "3B D6 97 00 81 B1 FE 45 1F 87 80 31 C1 52 21 1A 4B", $"ID-One PIV 2.4 (P/N 1501381) from IDEMIA (Other)" },
            new List<string> () { "3B D6 97 00 81 B1 FE 45 1F 87 80 31 C1 52 41 1A 2B", $"Oberthur Technologies ID-One PIV/CIV on V8 Device (eID)" },
            new List<string> () { "3B D8 18 00 80 1F 07 80 31 C1 64 08 06 92 0F DF", $"US DoD Common Access Card (IDEMIA Cosmo v8) (PKI)" },
            new List<string> () { "3B D8 18 00 80 B1 FE 45 1F 07 80 31 C1 64 08 06 92 0F D5", $"Oberthur Cosmo v8 (PKI)" },
            new List<string> () { "3B D8 18 FF 81 31 FE 45 80 64 04 1B B4 2A 81 05 D5", $"Schweizerische Krankenversicherungskarte KVG (HealthCare)" },
            new List<string> () { "3B D8 18 FF 81 B1 FE 45 1F 03 80 64 04 1A B4 03 81 05 61", $"D-Trust multicard advanced 3.1{Environment.NewLine}German public health insurance card (\"Gesundheitskarte\"), issuer SBK \"Siemens Betriebskrankenkasse\"" },
            new List<string> () { "3B D8 96 00 81 B1 FE 45 1F 07 43 48 54 47 50 4B 49 4A DD", $"Citizen Digital Certificate, Taiwan (PKI)" },
            new List<string> () { "3B D8 96 FF 81 31 FE 45 80 64 04 1B B4 2A 81 05 5B", $"Swiss LAMal health insurance card" },
            new List<string> () { "3B D9 11 00 81 31 FE 8D 00 00 46 4F 4D 53 31 2E 31 32", $"TFOMS (eID)" },
            new List<string> () { "3B D9 18 00 80 11 F0 80 54 43 4F 4C 44 82 90 00 62", $"TransaXiom Janus Card (Other)" },
            new List<string> () { "3B D9 18 00 C0 09 10 FE 54 59 46 4F 4E 45 00 00 00", $"Tyfone's SideTap Card (NFC payments)" },
            new List<string> () { "3B D9 18 FF 81 91 FE 1F C3 54 41 47 4C 49 4F 50 49 56 5B", $"Taglio PIV C2190 (NXP JCOP 3 SecID P60 CS) (eID)" },
            new List<string> () { "3B D9 94 00 00 4D 45 02 00 09 01 00 90 00", $"Moviestar. GSM SIM card (Telecommunication)" },
            new List<string> () { "3B D9 94 00 00 4D 45 45 76 35 2E 36 90 00", $"Vending Machine Card (Other)" },
            new List<string> () { "3B D9 94 00 00 4D 4D 41 52 33 31 34 90 00", $"Vodafone Spain 64kb SIM card. GSM/3G networks" },
            new List<string> () { "3B D9 95 00 00 4D 45 16 00 54 01 00 90 00", $"MTS Ukraine (Telecommunication)" },
            new List<string> () { "3B D9 96 FF 81 31 FE 45 43 52 45 53 43 45 4E 44 4F FF", $"HID Global Crescendo JCOP 21 v2.4.1 R2 64K (PKI)" },
            new List<string> () { "3B D9 96 FF 81 31 FE 45 80 31 B8 73 86 01 E0 81 05 22", $"German dentist's identity card (eID)" },
            new List<string> () { "3B D9 96 FF 81 91 FE 1F C3 43 32 33 30 30 2D 4B 45 59 BA", $"Crescendo Key (USB Type-A) (PKI)" },
            new List<string> () { "3B DA 11 FF 81 B1 FE 55 1F 03 00 31 84 73 80 01 80 00 90 00 E4", $"Gnuk OpenPGP Token (PKI)" },
            new List<string> () { "3B DA 11 FF 81 B1 FE 55 1F 03 00 31 84 73 80 01 80 05 90 00 E1", $"Nitrokey Start (Openpgp USB) (Other)" },
            new List<string> () { "3B DA 13 FF 81 31 FB 46 80 12 39 2F 31 C1 73 C6 01 C0 3B", $"My Number Card (The Social Security and Tax Number System in JAPAN) (eID)" },
            new List<string> () { "3B DA 18 02 C1 0A 31 FE 58 4B 53 77 69 73 73 53 69 67 6E A9", $"SuisseID Post - ATOS CardOS 4.x (eID)" },
            new List<string> () { "3B DA 18 FF 81 91 FE 1F C3 50 56 4A 43 4F 50 33 53 49 44 72", $"J3H145 (P6 SecID) purchased from FUTAKO Ltd., Taiwan (JavaCard)" },
            new List<string> () { "3B DA 18 FF 81 91 FE 1F C3 80 64 12 11 11 10 73 C0 C1 80 1B", $"Belarus national identity card (passport)" },
            new List<string> () { "3B DA 18 FF 81 B1 FE 45 1F C3 54 69 63 54 6F 6B 20 32 2E 30 68", $"TikTok 2.0 (PKI)" },
            new List<string> () { "3B DA 18 FF 81 B1 FE 45 1F C3 54 69 63 54 6F 6B 20 33 2E 30 69", $"TicTok 3.0 (PKI) (PKI)" },
            new List<string> () { "3B DA 18 FF 81 B1 FE 75 1F 03 00 31 C5 73 C0 01 40 00 90 00 0C", $"OpenPGP Card V2" },
            new List<string> () { "3B DA 18 FF 81 B1 FE 75 1F 03 00 31 F5 73 C0 01 60 00 90 00 1C", $"OpenPGP Card V3" },
            new List<string> () { "3B DA 94 00 00 4D 4D 41 52 4A 2B 33 39 90 00", $"SIM card from Vodafone Spain" },
            new List<string> () { "3B DA 95 00 40 0A 25 08 00 40 53 43 4F 53 54 41", $"Card used for issuing commodity to benificiary for rice, wheat and more (Other)" },
            new List<string> () { "3B DA 96 FF 81 31 FE 45 80 56 31 B8 53 49 43 41 81 05 7B", $"STARCOS 3.5 ID ECC C1R (PKI)" },
            new List<string> () { "3B DA 96 FF 81 B1 FE 45 1F 07 80 58 49 43 41 20 56 32 2E 30 E9", $"Starcos chip card from Giesecke & Devrient (PKI)" },
            new List<string> () { "3B DB 11 FF 50 00 FF 00 00 00 00 00 00 00 07 92 16 03", $"NEC V-WAY64 v2.1" },
            new List<string> () { "3B DB 18 00 80 1F 03 00 31 C0 64 77 E3 03 00 82 90 00 4F", $"Oberthur ID-One Cosmo 64K V5.2" },
            new List<string> () { "3B DB 18 00 80 B1 FE 45 1F 83 00 31 C0 64 C7 FC 10 00 01 90 00 FA", $"Oberthur Cosmo V7 64K Dual/128K" },
            new List<string> () { "3B DB 18 FF 81 91 FE 1F C3 06 09 2B 06 01 04 01 E9 10 05 03 D7", $"SafeSign Default QSCD (NXP JCOP 3 SecID P60) (PKI)" },
            new List<string> () { "3B DB 18 FF 81 B1 FE 75 1F 03 50 4B 43 61 72 64 20 56 31 2E 30 ED", $"Tecos 3 card (Other)" },
            new List<string> () { "3B DB 18 FF 81 B1 FE 75 1F 03 5A 43 37 2E 35 20 52 45 56 20 41 AE", $"BasicCard Professional ZC7.5-COMBI (Other)" },
            new List<string> () { "3B DB 18 FF 81 B1 FE 75 1F 03 5A 43 37 2E 36 20 52 45 56 20 44 A8", $"Zeitcontrol Professional BasicCard ZC 7.6 REV D (Other)" },
            new List<string> () { "3B DB 18 FF C0 80 B1 FE 75 1F 03 5A 43 37 2E 35 20 52 45 56 20 41 6F", $"ZeitControl BasicCard ZC7.5 user-programmable dual interface smart card" },
            new List<string> () { "3B DB 18 FF C0 80 B1 FE 75 1F 03 5A 43 37 2E 35 20 52 45 56 20 42 6C", $"BasicCard ZC7.5 dual-interface programmable smartcard (30K) (eID)" },
            new List<string> () { "3B DB 18 FF C0 80 B1 FE 75 1F 03 5A 43 37 2E 35 20 52 45 56 20 44 6A", $"Smart card BasicCard Professional ZC7.5, ZeitControl cardsystems GmbH" },
            new List<string> () { "3B DB 18 FF C0 80 B1 FE 75 1F 03 5A 43 37 2E 36 20 52 45 56 20 44 69", $"ZeitControl BasicCard 7.6 (Other)" },
            new List<string> () { "3B DB 96 00 80 1F 03 00 31 C0 64 77 E3 03 00 82 90 00 C1", $"Oberthur Card Systems (contactless pilot) ID-One Cosmo v5.2D 64K{Environment.NewLine}Oberthur Card Systems (PIV Transitional) ID-One Cosmo v5.2D 72K{Environment.NewLine}CAC (Common Access Card)" },
            new List<string> () { "3B DB 96 00 80 1F 03 00 31 C0 64 B0 F3 10 00 07 90 00 80", $"DoD CAC, Oberthur ID One 128 v5.5 Dual" },
            new List<string> () { "3B DB 96 00 80 1F 03 00 31 C0 64 B0 F3 10 00 0F 90 00 88", $"US Department of Veterans Affairs PIV" },
            new List<string> () { "3B DB 96 00 80 1F 83 00 31 C0 64 1D 18 01 00 01 90 00 51", $"ID0One Cosmo Development Kit (JavaCard)" },
            new List<string> () { "3B DB 96 00 80 31 FE 44 80 59 65 49 44 20 4E 41 44 52 41 8F", $"Pakistan ID card (eID)" },
            new List<string> () { "3B DB 96 00 80 B1 FE 45 1F 83 00 12 23 3F 53 65 49 44 0F 90 00 F1", $"Estonia ID-card (eID)" },
            new List<string> () { "3B DB 96 00 80 B1 FE 45 1F 83 00 12 42 8F 53 65 49 44 0F 90 00 20", $"Latvia eID (eID)" },
            new List<string> () { "3B DB 96 00 80 B1 FE 45 1F 83 00 31 C0 64 10 23 01 00 0F 90 00 63", $"Extremenian Health Service target (HealthCare)" },
            new List<string> () { "3B DB 96 00 80 B1 FE 45 1F 83 00 31 C0 64 1A 18 01 00 07 90 00 5A", $"Ercom CRYPTOSMART" },
            new List<string> () { "3B DB 96 00 80 B1 FE 45 1F 83 00 31 C0 64 1A 18 01 00 0F 90 00 52", $"Serbian Car registration ID card" },
            new List<string> () { "3B DB 96 00 80 B1 FE 45 1F 83 00 31 C0 64 1A 71 01 00 07 90 00 33", $"ChamberSign Gemalto USB Shell Token V2 - Certificat Audacio ** (eID)" },
            new List<string> () { "3B DB 96 00 80 B1 FE 45 1F 83 00 31 C0 64 B0 FC 10 00 07 90 00 05", $"Oberthur Cosmo V7 debug card (SDK)" },
            new List<string> () { "3B DB 96 00 80 B1 FE 45 1F 83 00 31 C0 64 B0 FC 10 00 0F 90 00 0D", $"ID-One PIV (that's the only non-numeric identifying mark) (PKI)" },
            new List<string> () { "3B DB 96 00 80 B1 FE 45 1F 83 00 31 C0 64 BE 1B 01 00 01 90 00 FB", $"Bank card" },
            new List<string> () { "3B DB 96 00 80 B1 FE 45 1F 83 00 31 C0 64 C3 08 01 00 0F 90 00 9B", $"SIM Aruba (Italian provider)" },
            new List<string> () { "3B DB 96 00 80 B1 FE 45 1F 83 00 31 C0 64 C7 FC 10 00 01 90 00 74", $"Oberthur Cosmo (eID)" },
            new List<string> () { "3B DB 96 00 80 B1 FE 45 1F 83 00 31 C0 64 C7 FC 10 00 0F 90 00 7A", $"Guatemalan ID Card" },
            new List<string> () { "3B DB 96 00 80 B1 FE 45 1F 83 00 31 C1 64 08 40 22 30 0F 90 00 0A", $"Oberthur v7 - in a Gemalto (was Gemplus) GemPC Key SmartCard Reader (grey USB dongle) - bought at ChamberSign (PKI)" },
            new List<string> () { "3B DB 96 00 80 B1 FE 45 1F 83 00 31 E8 54 27 E6 04 00 07 90 00 84", $"Polish encard (eID)" },
            new List<string> () { "3B DB 96 00 80 B1 FE 45 1F 83 00 31 E8 54 27 E6 04 00 0F 90 00 8C", $"Token card from iBRE CompanyNet (mbank) (Bank)" },
            new List<string> () { "3B DB 96 00 80 B1 FE 45 1F 83 45 53 54 4F 4E 49 41 2D 65 49 44 55", $"Estonian Identity Card (ID-One Cosmo v8.1) (eID)" },
            new List<string> () { "3B DB 96 00 81 B1 FE 45 1F 03 80 F9 A0 00 00 03 08 00 00 10 00 18", $"Oberthur CS PIV End Point v1.08 FIPS201 Certified" },
            new List<string> () { "3B DB 96 00 81 B1 FE 45 1F 03 80 F9 A0 00 00 03 48 00 00 00 01 49", $"Fly Clear card" },
            new List<string> () { "3B DB 96 00 81 B1 FE 45 1F 83 80 F9 A0 00 00 03 08 00 00 10 00 98", $"Oberthur Cosmo v7 128K with PIV applet" },
            new List<string> () { "3B DB 96 FF 80 B1 FE 45 1F 87 00 31 C1 64 09 37 72 13 0F 90 00 F4", $"French ID Card 2021 (eID)" },
            new List<string> () { "3B DB 96 FF 81 31 FE 45 80 67 05 34 B5 02 01 06 40 81 05 1B", $"SINA STARCOS 3.5 BX-CombiCard+HSB (Other)" },
            new List<string> () { "3B DB 96 FF C0 10 31 FE 45 80 67 15 01 B4 03 00 09 00 81 05 21", $"Digital Tachograph Card for Professional Driver{Environment.NewLine}olish driver card for digital tachograph" },
            new List<string> () { "3B DC 18 02 C1 0A 31 FE 58 80 31 A8 73 B0 01 9B 24 60 07 13 20 AA", $"Public Services Card | Ireland (Other)" },
            new List<string> () { "3B DC 18 FF 80 11 C1 80 73 C8 21 13 66 05 03 63 51 00 02 32", $"GoTrust Idem Card (Other)" },
            new List<string> () { "3B DC 18 FF 80 91 FE 1F C3 80 73 C8 21 13 66 01 0B 03 52 00 05 39", $"Digital Signature Costa Rica (eID)" },
            new List<string> () { "3B DC 18 FF 80 91 FE 1F C3 80 73 C8 21 13 66 02 04 03 55 00 02 35", $"ST security module for German smart meter gateway (JavaCard)" },
            new List<string> () { "3B DC 18 FF 81 11 C1 80 73 C8 21 13 66 05 03 63 51 00 02 33", $"GoTrust Idem Key (Other)" },
            new List<string> () { "3B DC 18 FF 81 11 FE 80 73 C8 21 13 66 01 06 01 30 80 01 8D", $"Aladdin R.D. JaCarta LT (eID)" },
            new List<string> () { "3B DC 18 FF 81 91 FE 1F C3 06 0A 2B 06 01 04 01 E9 10 05 02 03 D1", $"Caregiver card for Dutch Medical System called UZI (Unieke Zorgverlener Identificatie, Caring Unique Identification) (HealthCare)" },
            new List<string> () { "3B DC 18 FF 81 91 FE 1F C3 80 73 C8 21 13 66 01 06 01 30 04 01 55", $"Athena IDProtect Key Laser" },
            new List<string> () { "3B DC 18 FF 81 91 FE 1F C3 80 73 C8 21 13 66 01 06 11 59 00 01 28", $"JaCarta (PKI)" },
            new List<string> () { "3B DC 18 FF 81 91 FE 1F C3 80 73 C8 21 13 66 01 0B 03 52 00 05 38", $"Athena IDProtect Smart Card Logon Card" },
            new List<string> () { "3B DC 18 FF 81 91 FE 1F C3 80 73 C8 21 13 66 05 02 42 58 00 02 79", $"NXP Athena SCS (PKI)" },
            new List<string> () { "3B DC 18 FF 81 91 FE 1F C3 80 73 C8 21 13 66 05 03 60 57 00 02 55", $"NXP IDProtect (X) (JavaCard)" },
            new List<string> () { "3B DC 18 FF 81 91 FE 1F C3 80 73 C8 21 13 66 05 03 63 51 00 02 50", $"JCOP3 SecID P60 CS (JavaCard)" },
            new List<string> () { "3B DC 96 FF 81 11 FE 80 31 C8 54 43 56 30 05 73 FF A1 C0 3B", $"NXP Javacard with Athena SCS OS (JavaCard)" },
            new List<string> () { "3B DC 96 FF 81 B1 FE 43 1F C3 0B 46 41 52 45 47 4F 53 41 4D 56 32 CC", $"Multismartcard SAM (used in proprietary Scheidt&Bachmann Smartcard Reader v2)" },
            new List<string> () { "3B DD 18 00 81 31 FE 45 80 F9 A0 00 00 00 77 01 00 70 0A 90 00 8B", $"National ID Card of Peru issued by RENIEC from Oberthur" },
            new List<string> () { "3B DD 18 00 81 31 FE 45 80 F9 A0 00 00 00 77 01 08 00 07 90 00 FE", $"Oberthur Cosmo v7 IAS ECC{Environment.NewLine}Brazilian \"e-CNPJ\" card, issued by Certisign (Oberthur)" },
            new List<string> () { "3B DD 18 00 81 31 FE 45 90 4C 41 54 56 49 41 2D 65 49 44 90 00 8C", $"Identity card (eID) Republic of Latvia" },
            new List<string> () { "3B DD 18 FF C0 80 B1 FE 45 1F C3 00 68 D2 76 00 00 28 04 04 11 00 90 00 C9", $"Russian Federation driver card for the digital tachograph{Environment.NewLine}Polish driver card for digital tachograph" },
            new List<string> () { "3B DD 18 FF C0 80 B1 FE 45 1F C3 00 68 D2 76 00 00 28 04 09 71 00 90 00 A4", $"Worktime/driving style monitoring card (Transport)" },
            new List<string> () { "3B DD 96 00 80 10 FE 80 31 80 63 01 FF C0 73 B3 21 1B 81 05", $"BIFIT iBank 2 USB Key (Bank)" },
            new List<string> () { "3B DD 96 00 80 31 FE 45 00 31 B8 64 04 29 EC C1 73 94 01 80 82 48", $"Finnish Digital and Population Services Agency Organisation Card (eID)" },
            new List<string> () { "3B DD 96 00 80 B1 FE 45 1F 83 80 64 05 03 04 00 56 56 44 53 41 45 54 FC", $"VASCO DIGIPASS KEY 101 (Other)" },
            new List<string> () { "3B DD 96 00 81 31 FE 45 80 F9 A0 00 00 00 77 01 08 00 07 90 00 70", $"IDEMIA Cosmo v8.1-n (JavaCard)" },
            new List<string> () { "3B DD 96 FF 80 1F 03 4E 58 50 20 4E 53 43 4F 53 20 34 2E 30 06", $"SCOSTA (Transport)" },
            new List<string> () { "3B DD 96 FF 81 31 FE 45 80 59 5F 53 74 64 5F 49 6E 69 74 81 05 9B", $"Karta kryptograficzna cryptoCertum 3.5 (PKI)" },
            new List<string> () { "3B DD 96 FF 81 B1 FE 45 1F 03 00 64 04 05 08 03 73 96 21 D0 00 90 00 C9", $"German public health insurance card (\"Gesundheitskarte\"), issuer Techniker Krankenkasse" },
            new List<string> () { "3B DD 96 FF 81 B1 FE 45 1F 03 00 64 04 05 0A 02 73 96 21 D0 00 90 00 CA", $"German public health insurance card (\"Gesundheitskarte\"), issuer Techniker Krankenkasse, issued 02/15 (HealthCare)" },
            new List<string> () { "3B DD 96 FF 81 B1 FE 45 1F 03 00 64 05 73 10 A6 73 D6 21 C0 00 90 00 53", $"New european health insurance card of the German health insurance" },
            new List<string> () { "3B DD 96 FF 81 B1 FE 45 1F 03 80 31 B0 52 01 03 64 04 1B B4 22 81 05 1B", $"Austrian Motor Vehicle Registration Certificate (Transport)" },
            new List<string> () { "3B DD 96 FF 81 B1 FE 45 1F 03 80 31 B0 52 02 03 64 04 1B B4 22 81 05 18", $"Austrian \"e-card\" G3 (State Health Insurance Card){Environment.NewLine}(running StarCOS 3.4 by Giesecke & Devrient)" },
            new List<string> () { "3B DD 97 FF 81 B1 FE 45 1F 03 00 64 04 05 08 03 73 96 21 D0 00 90 00 C8", $"German \"eGK\" (State Health Insurance Card)" },
            new List<string> () { "3B DD 97 FF 81 B1 FE 45 1F 03 00 64 04 05 08 03 73 96 96 21 D0 00 90 C8", $"German public health insurance card (\"Gesundheitskarte\"), issuer Knappschaft" },
            new List<string> () { "3B DD 97 FF 81 B1 FE 45 1F 03 00 64 04 05 0A 02 73 96 21 D0 00 90 00 CB", $"German Elektronische Gesundheitskarte (eGK) (HealthCare)" },
            new List<string> () { "3B DE 11 00 00 49 43 4F 53 35 33 00 00 00 00 00 00 00 08", $"MyKID (eID)" },
            new List<string> () { "3B DE 13 00 00 49 43 4F 53 35 33 00 00 00 00 00 00 00 08", $"Malaysian citizens under age of 12 including newborns (non-compulsory) (eID)" },
            new List<string> () { "3B DE 18 FF 81 91 FE 1F C3 80 31 81 54 48 53 4D 31 73 80 21 40 81 07 1C", $"SmartCard-HSM 4K USB-Token (JavaCard)" },
            new List<string> () { "3B DE 18 FF 81 F1 FB 34 00 1F 07 44 45 53 46 69 72 65 53 41 4D 56 31 2E 30 D2", $"Mifare Desfire SAM Module" },
            new List<string> () { "3B DE 18 FF 81 F1 FE 43 00 3F 07 83 44 45 53 46 69 72 65 38 20 53 41 4D 2D 58 17", $"NXP SAM" },
            new List<string> () { "3B DE 18 FF C0 80 B1 FE 45 1F 03 45 73 74 45 49 44 20 76 65 72 20 31 2E 30 2B", $"Estonian Identity Card (EstEID v1.0 2006 cold)" },
            new List<string> () { "3B DE 86 FF 91 01 F1 FB 34 00 1F 07 44 45 53 46 69 72 65 53 41 4D 56 31 2E 30 5D", $"Mifare Desfire SAM Module (after warm reset) (Other)" },
            new List<string> () { "3B DE 96 FF 81 91 FE 1F C3 80 31 81 54 48 53 4D 31 73 80 21 40 81 07 92", $"SmartCard HSM (PKI)" },
            new List<string> () { "3B DF 18 00 81 31 FE 58 00 31 B9 64 05 0E 01 00 73 B4 01 D3 00 00 00 22", $"Identity Card in Slovakia with security chip and e-signature" },
            new List<string> () { "3B DF 18 00 81 31 FE 58 80 31 90 52 41 01 64 05 C9 03 AC 73 B7 B1 D4 44", $"a.sign RK CHIP with certificate" },
            new List<string> () { "3B DF 18 00 81 31 FE 58 80 31 B0 52 02 04 64 05 C9 03 AC 73 B7 B1 D4 22", $"Austrian \"e-Card\" (=Health Card) of the 4th generation. (HealthCare)" },
            new List<string> () { "3B DF 18 00 81 31 FE 58 AC 31 B0 52 02 04 64 05 C9 03 AC 73 B7 B1 D4 22", $"e-Card Austria (HealthCare)" },
            new List<string> () { "3B DF 18 00 81 31 FE 67 00 5C 49 43 4D D4 91 47 D2 76 00 00 38 33 00 58", $"Infineon SICRYPT Card Module D4 PC/SC Compliance Test Card" },
            new List<string> () { "3B DF 18 00 81 31 FE 7D 00 6B 02 0C 01 82 01 11 01 43 4E 53 10 31 80 FC", $"Italian healthcare card (TS) National Service Card (CNS) (HealthCare)" },
            new List<string> () { "3B DF 18 00 81 31 FE 7D 00 6B 04 0C 01 84 01 11 01 43 4E 53 10 31 80 FC", $"Italian healthcare card (TS) National Service Card (CNS) (HealthCare)" },
            new List<string> () { "3B DF 18 00 81 31 FE 7D 00 6B 15 0C 01 80 01 11 01 43 4E 53 10 31 80 E9", $"Provider: Actalis S.p.A.{Environment.NewLine}code: AT00006181" },
            new List<string> () { "3B DF 18 00 81 31 FE 7D 00 6B 15 0C 01 81 01 11 01 43 4E 53 10 31 80 E8", $"Italian healthcare card (TS) National Service Card (CNS){Environment.NewLine}Carta Regionale dei Servizi - Regione Lombardia{Environment.NewLine}Tuscany TS-CNS" },
            new List<string> () { "3B DF 18 FF 80 91 FE 1F C3 00 31 38 64 47 90 EC C2 73 14 01 50 82 90 00 BB", $"Ministry of Interior - France \"Agent Card\" (Other)" },
            new List<string> () { "3B DF 18 FF 81 31 FE 45 80 59 01 80 48 49 44 43 37 30 30 73 00 01 1B 33", $"Crescendo C700 + MiFare 4K" },
            new List<string> () { "3B DF 18 FF 81 91 FE 1F C3 00 31 38 64 47 90 EC C2 73 14 01 50 82 90 00 BA", $"Card store authentication and signature keys (JavaCard)" },
            new List<string> () { "3B DF 18 FF 81 91 FE 1F C3 00 31 B8 64 00 00 EC 00 73 94 00 00 82 90 00 FE", $"NXP Jcop3 P60 ChipDoc v7b4 (JavaCard)" },
            new List<string> () { "3B DF 18 FF 81 91 FE 1F C3 00 31 B8 64 04 21 60 10 73 94 01 C0 05 90 00 01", $"Dutch Governement Identity Card using physical (eID)" },
            new List<string> () { "3B DF 18 FF 81 91 FE 1F C3 00 31 B8 64 0C 01 EC C1 73 94 01 80 82 90 00 B3", $"ebee card{Environment.NewLine}Digital Signature Costa Rica (issued since 09/2019) (eID)" },
            new List<string> () { "3B DF 18 FF 81 F1 FE 43 00 1F 03 4D 49 46 41 52 45 20 50 6C 75 73 20 53 41 4D 98", $"Mifare SAM AV2" },
            new List<string> () { "3B DF 18 FF 81 F1 FE 43 00 3F 03 83 4D 49 46 41 52 45 20 50 6C 75 73 20 53 41 4D 3B", $"NXP SAM AV2 module" },
            new List<string> () { "3B DF 18 FF 81 F1 FE 43 00 3F 03 83 4D 49 46 50 6C 75 73 20 53 41 4D 3B 53 41 4D 3B", $"Mifare SAM -AV2 (PKI)" },
            new List<string> () { "3B DF 18 FF 81 F1 FE 43 00 3F 07 83 4D 49 46 41 52 45 20 53 41 4D 20 41 56 33 30 11", $"NXP SAM AV3 module" },
            new List<string> () { "3B DF 94 FF C0 80 B1 FE 45 1F 03 00 6A D2 76 00 00 28 04 15 FA 10 04 00 90 00 6B", $"UK Digital Tacho card (Other)" },
            new List<string> () { "3B DF 94 FF C0 80 B1 FE 45 1F 03 00 6A D2 76 00 00 28 04 15 FA 40 04 00 90 00 3B", $"DVLA Company Card (Transport)" },
            new List<string> () { "3B DF 95 00 80 1F 87 80 31 A0 73 FF 21 00 63 45 B1 05 83 0F 90 00 60", $"FUTURE CARD Normal ISO SIM (Telecommunication)" },
            new List<string> () { "3B DF 95 00 80 1F 87 80 31 A0 73 FF 21 00 63 45 B3 09 83 0F 90 00 6E", $"Card Mobilis Algeria telecom (Telecommunication)" },
            new List<string> () { "3B DF 95 00 80 1F C3 80 31 E0 73 FE 21 1B 67 4C 45 54 41 32 31 35 BD", $"SK Telecom SIM card (in Korea) (Telecommunication)" },
            new List<string> () { "3B DF 95 FF 80 91 FE 1F C3 49 44 50 44 55 4F 33 47 50 49 54 43 56 00 80 29", $"Generic Card NFC (eID)" },
            new List<string> () { "3B DF 95 FF 80 91 FE 1F C3 80 25 A0 00 00 00 68 53 19 00 01 73 C8 21 13 29", $"CardLogix Credensys-J Contacted Java Card 2.2.1 Global Platform 2.1.1 (Atmel AT90SC12872RCFT){Environment.NewLine}(bank)" },
            new List<string> () { "3B DF 96 00 80 31 FE 45 00 31 B8 64 04 1F EC C1 73 94 01 80 82 90 00 EC", $"Ministry of Interior - France \"Agent Card\"{Environment.NewLine}(Carte Agent du Ministère de l'Intérieur Français)" },
            new List<string> () { "3B DF 96 00 80 31 FE 45 00 31 B8 64 04 29 EC C1 73 94 01 80 82 90 00 DA", $"Finnish identity card given by the City of Helsinki to all members of city council, board and commitees" },
            new List<string> () { "3B DF 96 00 80 B1 FE 45 1F 83 00 12 27 6F 57 41 49 52 42 55 53 31 07 90 00 EA", $"IDEMIA ID-One Cosmo V8.2 IAS ECC card (eID)" },
            new List<string> () { "3B DF 96 00 80 B1 FE 45 1F 83 80 73 BC 91 80 F9 A0 00 00 00 77 80 08 02 01 A4", $"Latvian eSignature card (eID)" },
            new List<string> () { "3B DF 96 00 80 B1 FE 45 1F 87 00 31 C1 64 08 92 32 01 73 84 21 E0 05 90 00 C5", $"Company Card for Transport companies (Transport)" },
            new List<string> () { "3B DF 96 00 81 31 FE 45 41 43 4F 53 2D 49 44 30 30 32 38 2E 30 31 36 6F", $"Sri Lankan driving license [ web: motortraffic.gov.lk ] (eID)" },
            new List<string> () { "3B DF 96 00 81 B1 FE 45 1F 83 80 73 CC 91 CB F9 A0 00 00 03 08 00 00 10 00 79", $"Test PIV Cards available for sale from NIST" },
            new List<string> () { "3B DF 96 FF 81 31 FE 45 5A 01 80 48 49 44 43 31 31 58 58 73 00 01 1B 09", $"HID Crescendo iCLASS Px G8H" },
            new List<string> () { "3B DF 96 FF 81 31 FE 45 80 59 01 80 50 49 56 43 4C 41 53 73 00 01 1B DE", $"HID Global pivCLASS v1.0 (PKI)" },
            new List<string> () { "3B DF 96 FF 81 31 FE 45 80 5B 44 45 2E 42 41 5F 53 43 33 35 32 81 05 B5", $"Employee ID card from the Federal Employment Agency (Germany) (PKI)" },
            new List<string> () { "3B DF 96 FF 81 31 FE 45 80 5B 44 45 2E 42 4E 4F 54 4B 31 30 30 81 05 A0", $"BeA - Certification Card for German Solicitors (Other)" },
            new List<string> () { "3B DF 97 00 81 31 FE 58 80 31 B0 52 02 05 64 05 A1 00 AC 73 D6 22 C0 21", $"Austrian healthcare insurance identification card (HealthCare)" },
            new List<string> () { "3B DF 97 00 81 B1 FE 45 1F 83 80 73 CC 91 CB F9 A0 00 00 03 08 00 00 10 00 78", $"NASA PIV Card (Other)" },
            new List<string> () { "3B E0 00 00 81 31 20 40 30", $"SmarTEC" },
            new List<string> () { "3B E0 00 FF 81 31 FE 45 14", $"\"JUKICARD\", digitally sign tax documents in Japan" },
            new List<string> () { "3B E2 00 00 40 20 49 ..", $"Schlumberger Cryptoflex 4k" },
            new List<string> () { "3B E2 00 00 40 20 49 05", $"Schlumberger Cryptoflex DES" },
            new List<string> () { "3B E2 00 00 40 20 49 06", $"Schlumberger Cryptoflex" },
            new List<string> () { "3B E2 00 00 40 20 49 07", $"Schlumberger Cryptoflex Key Generation" },
            new List<string> () { "3B E2 00 FF C1 10 31 FE 55 C8 02 9C", $"Aladdin eToken PRO (USB token){Environment.NewLine}Siemens CardOS M4.0" },
            new List<string> () { "3B E3 00 FF 91 81 71 26 44 00 01 13 20 2D", $"Metrebus Card{Environment.NewLine}(used in Rome to store personal information and Atac subscription.{Environment.NewLine}Atac is the public transport company of the city of Rome.)" },
            new List<string> () { "3B E5 00 00 81 21 45 9C 10 01 00 80 0D", $"BIN 470132 -- BANK OF AMERICA VISA DEBIT -- GEMALTO MGY 0 U1090788B - 12/14 F8 00 89 (Bank)" },
            new List<string> () { "3B E5 00 00 81 31 FE 45 D0 00 37 00 80 89", $"ATM card for Standard Chartered, Taiwan" },
            new List<string> () { "3B E5 00 FF 81 31 FE 45 80 73 C6 01 08 2D", $"MUFG (.jp) (Bank)" },
            new List<string> () { "3B E6 00 00 80 31 80 66 B1 A3 04 01 11 0B 83", $"Java Jcop J2A040 (JavaCard)" },
            new List<string> () { "3B E6 00 00 80 31 80 66 B1 A3 04 01 11 0B 83 00 90 00", $"VISA Credit Card (Bank)" },
            new List<string> () { "3B E6 00 00 81 21 45 32 4B 01 01 01 01 7A", $"Axalto Cyberflex Palmera V5" },
            new List<string> () { "3B E6 00 FF 81 31 FE 45 44 49 20 30 32 4D 70", $"Alior Sync (Poland) - MasterCard Debit Card with PayPass (Bank){Environment.NewLine}MasterCard Contactless Debit Card issued by Raiffeisen Bank in Czech Republic{Environment.NewLine}Debit MasterCard with paypass issued by Bank Zachodni WBK (Poland){Environment.NewLine}Debit MasterCard with paypass issued by AliorSync" },
            new List<string> () { "3B E6 00 FF 81 31 FE 45 44 49 20 30 32 56 6B", $"VISA credit card (DKB)" },
            new List<string> () { "3B E6 00 FF 81 31 FE 45 4A 43 4F 50 30 33 07", $"IBM JCOP 30/16" },
            new List<string> () { "3B E6 00 FF 81 31 FE 45 4A 43 4F 50 31 30 05", $"IBM JCOP 10/16{Environment.NewLine}Rental card for Blockbuster, Taiwan" },
            new List<string> () { "3B E6 00 FF 81 31 FE 45 4A 43 4F 50 32 30 06", $"IBM JCOP 20/16{Environment.NewLine}IBM JCOP20 with MIFARE{Environment.NewLine}or Datakey Smart Card Model 330J" },
            new List<string> () { "3B E6 00 FF 81 31 FE 45 4A 43 4F 50 32 31 07", $"IBM JCOP ID21" },
            new List<string> () { "3B E6 00 FF 81 31 FE 45 4A 43 4F 50 33 30 07", $"Mifare ProX T=1" },
            new List<string> () { "3B E6 00 FF 81 31 FE 45 4A 43 4F 50 33 31 06", $"IBM JCOP 30/31bio (contact interface)" },
            new List<string> () { "3B E7 00 00 81 31 FE 42 00 63 95 31 05 90 00 B9", $"Chunghwa Post Co., Ltd. Visa Debit Card (Bank)" },
            new List<string> () { "3B E7 00 00 91 81 31 FE 41 01 10 30 01 00 90 80 49", $"\"FirmenTicket\" from the \"Rheinbahn\" for the \"VRR\"{Environment.NewLine}its a ticket corporates can buy for their employees. so its called{Environment.NewLine}\"FirmenTicket\". \"Rheinbahn\" is the local service operator for the{Environment.NewLine}mass traffic in and around duesseldorf/germany. \"VRR\" is traffic{Environment.NewLine}network spanning over at least a big part of north rhine westphalia{Environment.NewLine}(Verkehrsverbund Rhein-Ruhr)" },
            new List<string> () { "3B E7 00 FF 81 31 FE 45 44 30 38 2E 30 20 36 57", $"EMV (MasterCard) card, issued by Raiffeisen Bank in Russia{Environment.NewLine}\"Deutsche Kreditbank AG\" Visa Card produced by AustriaCard GNC{Environment.NewLine}All cards (MasterCard, Maestro, VISA Electron) issued by Raiffeisen Bank in Romania{Environment.NewLine}EMV (MasterCard) Card, issued by Raiffeisen Bank in Czech Republic" },
            new List<string> () { "3B E7 00 FF 81 31 FE 45 44 30 38 2E 31 20 36 56", $"WinWin Austria Player-ID-Card (Other)" },
            new List<string> () { "3B E7 00 FF 81 31 FE 45 44 30 38 2E 32 20 36 55", $"Mastercard (Bank)" },
            new List<string> () { "3B E7 00 FF 81 31 FE 45 4D 43 41 20 38 20 36 52", $"Mastercard credit card issued by \"PayLife Bank GmbH\".{Environment.NewLine}Bank number is \"5266\" - Bawag PSK." },
            new List<string> () { "3B E7 00 FF 81 31 FE 45 80 31 C0 73 C6 21 48 BE", $"Japanese ETC (Electronic Toll Collection System) card (Transport) and Credit card (Issuer: Toyota) (Transport)" },
            new List<string> () { "3B E7 00 FF 81 B1 FE 45 1F 01 80 31 C0 73 C6 21 48 20", $"Japanese ETC (Electronic Toll Collection System) card (Transport)" },
            new List<string> () { "3B E8 00 00 40 FA 00 73 C8 40 11 00 90 00", $"KEBTechnology KONA USB SmartCard (Other)" },
            new List<string> () { "3B E8 00 00 81 31 20 45 00 73 C8 40 00 00 90 00 56", $"Visa credit card for Standard Chartered, Taiwan" },
            new List<string> () { "3B E8 00 00 81 31 FE 00 50 65 72 73 6F 53 69 6D AA", $"Simulated virtual smartcard, from project PersoSim (eID)" },
            new List<string> () { "3B E8 00 00 81 31 FE 45 00 73 C8 40 00 00 90 00 88", $"VISA Card (Skandinaviska Enskilda Banken) with Swedish BankID{Environment.NewLine}VISA card (Chinatrust Bank (Taiwan), dual-interface card with a Taipei Metro e-purse function)" },
            new List<string> () { "3B E8 00 00 81 31 FE 45 4A 43 4F 50 76 32 34 .. ..", $"NXP JCOP v2.4.x (see hist bytes for more info)" },
            new List<string> () { "3B E8 00 00 81 31 FE 45 4A 43 4F 50 76 32 34 31 B4", $"VISA Debit card for NAB, Australia" },
            new List<string> () { "3B E8 00 FF 81 31 FE 43 AA 00 00 00 00 00 00 00 B0", $"Secure Signing Token (eID)" },
            new List<string> () { "3B E8 00 FF 81 31 FE 45 43 4C 61 69 72 65 20 36 1A", $"DKB Visa card with PayWave" },
            new List<string> () { "3B E9 00 00 81 21 45 45 4D 56 5F 41 54 52 20 06 6C", $"VISA card, issued by HVB Bank Czech Republic or austrian BankAustria" },
            new List<string> () { "3B E9 00 00 81 21 45 4D 43 5F 5F 49 4E 46 20 06 65", $"MasterCard Credit card issued by SpareBank1 in Norway" },
            new List<string> () { "3B E9 00 00 81 21 45 56 49 53 5F 49 4E 46 20 06 78", $"VISA card, issued by the Austrian \"Raiffeisen\" bank{Environment.NewLine}Visa Card - Maximum - Oyak Bank / Turkey{Environment.NewLine}VISA, issued by Austrian bank \"Erste Bank\"{Environment.NewLine}VISA card, issued by the Latvian bank \"Latvijas Krajbanka\"" },
            new List<string> () { "3B E9 00 00 81 31 C3 45 99 63 74 69 19 99 12 56 10 EC", $"Compunicate Technologies Inc. (Pay TV)" },
            new List<string> () { "3B E9 00 00 81 31 FE 00 FF 50 65 72 73 6F 53 69 6D 54", $"German PersoSim (eID)" },
            new List<string> () { "3B E9 00 00 81 31 FE 45 43 44 31 69 A9 00 00 00 00 14", $"Mastercard credit card, UBS Switzerland (Bank)" },
            new List<string> () { "3B E9 00 00 81 31 FE 45 43 44 32 69 09 00 00 00 00 B7", $"Swiss UBS MasterCard Creditcard" },
            new List<string> () { "3B E9 00 00 81 31 FE 45 45 4D 56 20 30 33 20 20 06 99", $"Visa credit card{Environment.NewLine}MasterCard credit card" },
            new List<string> () { "3B E9 00 00 81 31 FE 45 45 4D 56 30 32 5F 34 53 06 80", $"Maestro Card issued by \"First Investment Bank\" in Bulgaria{Environment.NewLine}Visa Electron card: TATRA BANKA, a.s." },
            new List<string> () { "3B E9 00 00 81 31 FE 45 4A 43 4F 50 31 30 56 32 32 A3", $"ORGA Open Platform DES 16k V2.0 / JCOP10" },
            new List<string> () { "3B E9 00 00 81 31 FE 45 4A 43 4F 50 32 34 32 52 32 A0", $"NXP J3D081 (JavaCard)" },
            new List<string> () { "3B E9 00 00 81 31 FE 45 4A 43 4F 50 33 31 56 32 32 A0", $"JCOP 31 / 72k" },
            new List<string> () { "3B E9 00 00 81 31 FE 45 4A 43 4F 50 34 31 56 32 32 A7", $"IBM JCOP v2.2 41" },
            new List<string> () { "3B E9 00 00 81 31 FE 45 4D 43 41 20 30 33 20 20 06 88", $"PayLife Gold MasterCard -- an unbranded version of the master card" },
            new List<string> () { "3B E9 00 FF 81 31 FE 45 43 4C 61 69 72 65 32 20 36 29", $"UB(SK) Visa Vusiness card with PayWave (Bank)" },
            new List<string> () { "3B E9 00 FF 81 31 FE 45 43 4C 61 69 72 65 33 20 36 28", $"BZ WBK Mastercard (Bank)" },
            new List<string> () { "3B E9 00 FF C1 10 31 FE 55 00 64 05 00 C8 02 31 80 00 47", $"Identity card of Italian Republic" },
            new List<string> () { "3B E9 00 FF C1 10 31 FE 55 C8 01 20 50 4E 34 30 31 32 AD", $"Siemens CardOS/M 3.0 (SLE66CX160S)" },
            new List<string> () { "3B EA 00 00 81 31 20 43 80 65 A2 .. .. .. .. 72 D6 .. ..", $"IDClassic 3XX Cards (with MPCOS Applet)" },
            new List<string> () { "3B EA 00 00 81 31 20 43 80 65 A2 01 01 01 3D 72 D6 43 A5", $"GemXpresso Pro R3 32PK (MPCOS, T=1) (warn reset)" },
            new List<string> () { "3B EA 00 00 81 31 FE 45 00 31 C1 73 C8 40 00 00 90 00 7A", $"Nigerian eID Card (cold reset){Environment.NewLine}Chip is NXP JCOP 2.4.1R3" },
            new List<string> () { "3B EA 00 00 81 31 FE 45 43 6F 6D 62 4F 53 20 49 49 00 FE", $"UBS VISA Gold Card{Environment.NewLine}MasterCard from lhv.ee{Environment.NewLine}Nordea Bank Finland PLC Estonian Branch (ABnote)" },
            new List<string> () { "3B EA 00 00 81 31 FE 45 4A 43 4F 50 33 31 56 32 33 32 90", $"NAB VISA Debit card" },
            new List<string> () { "3B EA 00 00 81 31 FE 45 4A 43 4F 50 34 31 56 32 32 31 95", $"HID Crescendo C700" },
            new List<string> () { "3B EA 00 FF 81 31 20 75 00 64 05 14 01 02 31 00 90 00 27", $"GCOS-MDK" },
            new List<string> () { "3B EA 00 FF 81 31 FE 45 54 55 42 2D 43 4B 01 03 01 00 7B", $"Technische Universität Berlin - Campus Karte{Environment.NewLine}Maybe Sm@rtCafé Expert 2.0 (Giesecke & Devrient){Environment.NewLine}or GemXpresso 211 PK (Gemplus){Environment.NewLine}Includes a Mifare-Chip (1 KB - Memory-Chip)" },
            new List<string> () { "3B EB 00 00 81 31 20 45 4A 43 4F 50 33 31 33 36 47 44 54 78", $"card for testing (eID)" },
            new List<string> () { "3B EB 00 00 81 31 42 45 4E 4C 43 68 53 43 4B 30 34 30 31 2B", $"Dutch University accesscard & Electronic purse & telphone card" },
            new List<string> () { "3B EB 00 00 81 31 42 45 4E 4C 43 68 69 70 70 65 72 30 31 0A", $"Dutch Post (Chipper)" },
            new List<string> () { "3B EB 00 00 81 31 FE 45 00 31 C0 64 3F 68 01 02 07 90 00 B6", $"Chris firstbank (Bank)" },
            new List<string> () { "3B EB 00 00 81 31 FE 45 00 31 C0 64 3F 68 01 02 0F 90 00 BE", $"VISA Debit card for Taishin International Bank, Taiwan (Bank)" },
            new List<string> () { "3B EB 00 00 81 31 FE 45 00 31 C0 64 3F 68 01 08 07 90 00 BC", $"Debit Mastercard of Mega ICBC, Taiwan (Bank)" },
            new List<string> () { "3B EB 00 00 81 31 FE 45 00 31 C0 64 A9 EC 01 00 82 90 00 23", $"Junta de Extremadura (Spain) public healthcare card (HealthCare)" },
            new List<string> () { "3B EB 00 00 81 31 FE 45 43 6F 6D 62 4F 53 20 31 2E 30 15 C5", $"Reka Card - Swiss Holiday Member Card (Loyalty)" },
            new List<string> () { "3B EC 00 00 40 32 42 4C 55 45 20 44 52 41 47 4F 4E 20 43 00 01", $"Pay TV" },
            new List<string> () { "3B EC 00 00 40 32 54 49 54 41 4E 49 55 4D 00 11 01 06", $"Titanium high security access smartcard (the back says something about \"DoorCard\") (Other)" },
            new List<string> () { "3B EC 00 00 40 32 54 49 54 41 4E 49 55 4D 00 13 02 02", $"Titanium 2 Card Pirat Card for Seca 2 / Viaccess 2004 (Pay TV)" },
            new List<string> () { "3B EC 00 FF 81 31 FE 45 A0 00 00 00 56 33 33 30 4A 33 06 00 A1", $"Datakey model 330J card, www.datakey.com{Environment.NewLine}Model 330J JavaCard v2.1.1{Environment.NewLine}Global Platform v2.0.1 specifications.{Environment.NewLine}JCCOS operating system applet (Java-based Cryptographic Card Operating System)" },
            new List<string> () { "3B ED 00 00 80 31 80 65 B0 84 01 00 C8 83 00 90 00", $"Optelio Cards (D38-D72 R6) T=1 Normal Speed" },
            new List<string> () { "3B ED 00 00 81 31 20 43 80 31 80 65 B0 83 .. .. .. 83 00 90 .. ..", $"IDClassic 3XX / Classic TPC (IXS, IS, IS V2, IS CC, IM, IM CC, IM CC V3) / MultiApp ID Cards" },
            new List<string> () { "3B ED 00 00 81 31 20 43 80 31 80 65 B0 83 02 04 7E 83 00 90 00 32", $"Latvian Digital Signature Card (warm)" },
            new List<string> () { "3B ED 00 00 81 31 80 42 80 31 80 65 B0 87 27 01 BC 83 08 90 00 7D", $"EMV (V PAY) Issued by UniCredit Bulbank Bulgaria{Environment.NewLine}GXP7 T=1" },
            new List<string> () { "3B ED 00 00 81 31 80 42 80 31 80 65 B0 89 40 01 F2 83 00 90 00 52", $"VISA Debit card for Taishin International Bank, Taiwan" },
            new List<string> () { "3B ED 00 00 81 31 FE 45 00 31 C0 71 C6 64 4D 35 33 56 0F 90 00 46", $"Kostadin (Bank)" },
            new List<string> () { "3B ED 00 00 81 31 FE 45 00 31 C0 71 C6 64 4D 35 35 4D 0F 90 00", $"ING Credit Card (Bank)" },
            new List<string> () { "3B ED 00 FF 81 31 20 75 4D 42 43 20 53 4D 50 20 56 31 2E 31 30 BD", $"Used to Control a Laser Device" },
            new List<string> () { "3B EE 00 00 81 31 80 42 80 31 80 66 B0 84 0C 01 6E 01 83 00 90 00 8E", $"MultiApp Cards (Easy 72K Type B and Combi 72K Type B){Environment.NewLine}E.SUN Commercial bank debit master card (Bank){Environment.NewLine}Taiwan EasyCard (Transport)" },
            new List<string> () { "3B EE 00 00 81 31 80 43 80 31 80 66 B1 A1 11 01 00 F6 83 00 90 00", $"Optelio/Desineo Cards (D72 FXR1)" },
            new List<string> () { "3B EE 00 00 81 31 80 43 80 31 80 66 B1 A1 11 01 A0 F6 83 00 90 00", $"Optelio D72 FXR1 (MD) T=1" },
            new List<string> () { "3B EE 00 00 81 31 FE 45 00 31 80 71 86 65 01 67 02 A0 0A 83 90 00 1B", $"IBM JCOP \"Java Card 2.1.1\" et \"Open Platform 2.0.1\"" },
            new List<string> () { "3B EE 00 00 81 31 FE 45 80 31 80 66 40 90 93 06 0F 17 83 01 90 00 FD", $"Health insurance (HealthCare)" },
            new List<string> () { "3B EE 00 00 81 31 FE 45 80 31 80 66 40 90 93 06 0F 17 83 0F 90 00 F3", $"IC card for the National Health Insurance, Taiwan" },
            new List<string> () { "3B EF .. 00 40 14 80 25 43 45 52 45 53 57 .. .. 01 01 03 90 00", $"Electronic Identification Card from the FNMT, the Spanish Official{Environment.NewLine}Certification Authority (Fábrica Nacional de Moneda y Timbre){Environment.NewLine}FNMT-Ceres Siemens Infineon SLE 19" },
            new List<string> () { "3B EF .. 00 40 14 80 25 43 45 52 45 53 57 .. .. 01 02 03 90 00", $"FNMT-Ceres Siemens Infineon SLE 20{Environment.NewLine}Fábrica Nacional de Moneda y Timbre" },
            new List<string> () { "3B EF 00 00 81 31 20 49 00 5C 50 43 54 10 27 F8 D2 76 00 00 38 33 00 4D", $"Infineon Technologies PC/SC Compliance Test Card V1.0" },
            new List<string> () { "3B EF 00 00 81 31 40 69 00 5C 50 43 53 35 C5 3A D2 76 00 00 38 33 00 0F", $"Siemens Nixdorf Sicrypt" },
            new List<string> () { "3B EF 00 00 81 31 FC 45 80 31 80 65 11 01 13 00 01 53 41 43 45 81 04 21", $"Slovenska sporitelna (SLSP) Bank card, Maestro Card with chip" },
            new List<string> () { "3B EF 00 00 81 31 FC 45 80 31 80 65 11 11 23 10 02 53 41 43 45 81 04 12", $"VISA card issued by UBS, Switzerland" },
            new List<string> () { "3B EF 00 00 81 31 FE 45 00 31 C1 73 C8 21 10 64 47 4D 31 36 00 90 00 67", $"ING Gold Credit Card (Italy) (Bank)" },
            new List<string> () { "3B EF 00 00 81 31 FE 45 41 74 41 43 4F 53 32 2E 34 53 45 20 4C 63 37 C9", $"Maestro Polish Alior debit card (Bank)" },
            new List<string> () { "3B EF 00 00 81 31 FE 45 43 44 32 69 A9 81 00 00 20 20 20 20 20 20 00 90", $"UBS Switzerland Mastercard credit card (Bank)" },
            new List<string> () { "3B EF 00 00 81 31 FE 45 43 44 33 69 09 80 00 00 20 20 20 20 20 20 00 30", $"Nordea Credit Gold MasterCard (Bank)" },
            new List<string> () { "3B EF 00 00 81 31 FE 45 43 4D 42 5F 43 6F 6D 44 44 41 30 30 35 35 00 F7", $"Master Card (emitted by bank Nordea - Lithuania)" },
            new List<string> () { "3B EF 00 00 81 31 FE 45 43 4D 42 5F 43 6F 6D 53 44 41 30 30 34 30 00 E4", $"VISA (Danske Bank Eesti / www.sampopank.ee)" },
            new List<string> () { "3B EF 00 00 81 31 FE 45 43 4D 42 5F 43 6F 6D 53 44 41 30 30 35 31 00 E4", $"Visa (Sampo Estonia, 2010)" },
            new List<string> () { "3B EF 00 00 81 31 FE 45 43 6F 6D 62 4F 53 20 56 20 20 20 20 20 20 00 AD", $"Corporate Credit Card - SIEMENS MasterCard issued by Degussa Bank (Bank)" },
            new List<string> () { "3B EF 00 00 81 31 FE 45 43 6F 6D 62 4F 53 20 56 49 20 20 20 20 20 00 C4", $"VfB Stuttgart Fankarte (pay card for the football stadium of the german club VfB Stuttgart)" },
            new List<string> () { "3B EF 00 00 81 31 FE 45 44 4C 41 5A 46 54 56 32 44 49 44 31 30 30 FF 06", $"Lufthansa ID Card (eID)" },
            new List<string> () { "3B EF 00 00 81 31 FE 45 46 49 4F 4D 4B 5F 30 30 31 20 30 31 30 41 00 9C", $"MasterCard/PayPass Card issued by Czech FIO Banka a.s. (contact chip){Environment.NewLine}note the ASCII string ' FIOMK_001 010A' embedded in ATR" },
            new List<string> () { "3B EF 00 00 81 31 FE 65 00 5C 50 43 53 D1 91 47 D2 76 00 00 38 33 00 70", $"Siemens/Infineon Sicrypt S26381-F252-V1 GS:03" },
            new List<string> () { "3B EF 00 00 81 31 FE 67 00 5C 49 43 4D DB C9 7E D2 76 00 00 38 33 00 1E", $"Infineon SICRYPT CardModule Card" },
            new List<string> () { "3B EF 00 FF 81 31 .. 45 65 63", $"Debit card (Germany): ec-cash, GeldKarte(DEM), Maestro, Cirrus" },
            new List<string> () { "3B EF 00 FF 81 31 20 45 42 61 73 69 63 43 61 72 64 20 5A 43 32 2E 33 BD", $"ZeitControl BasicCard Enhanced 2.3" },
            new List<string> () { "3B EF 00 FF 81 31 20 45 42 61 73 69 63 43 61 72 64 20 5A 43 33 2E 33 BC", $"Electronic Purse (Elton Senegal)" },
            new List<string> () { "3B EF 00 FF 81 31 20 75 42 61 73 69 63 43 61 72 64 20 5A 43 33 2E 33 8C", $"ZeitControl BasicCard Enhanced 3.3" },
            new List<string> () { "3B EF 00 FF 81 31 20 75 42 61 73 69 63 43 61 72 64 20 5A 43 33 2E 37 88", $"ZeitControl BasicCard Enhanced 3.7" },
            new List<string> () { "3B EF 00 FF 81 31 20 75 42 61 73 69 63 43 61 72 64 20 5A 43 33 2E 39 86", $"ZeitControl BasicCard Enhanced 3.9" },
            new List<string> () { "3B EF 00 FF 81 31 42 45 .* 38", $"UNI-Card" },
            new List<string> () { "3B EF 00 FF 81 31 42 45 65 63 03 02 03 02 80 00 22 40 48 95 96 00 20 28", $"Scard Sparkasse Detmold, Deutschland BLZ 47650130" },
            new List<string> () { "3B EF 00 FF 81 31 50 45 42 61 73 69 63 43 61 72 64 20 5A 43 31 2E 31 CC", $"ZeitControl BasicCard Compact 1.1" },
            new List<string> () { "3B EF 00 FF 81 31 50 45 65 63 .. .. .. .. .. .. .. .. .. .. .. .. .. ..", $"GeldKarte v2 (Germany)" },
            new List<string> () { "3B EF 00 FF 81 31 50 45 65 63 00 00 00 00 00 00 00 00 00 00 00 00 00 00", $"Geldkarte v2" },
            new List<string> () { "3B EF 00 FF 81 31 50 45 65 63 08 0B 40 02 80 00 08 15 20 03 36 04 00 7E", $"old banking card (electronic-card / Maestro / Geldkarte) of the{Environment.NewLine}Stadt-Sparkasse Duesseldorf (like the above, but old - around 2002)." },
            new List<string> () { "3B EF 00 FF 81 31 50 45 65 63 0D 24 20 02 80 00 05 08 33 56 10 01 02 43", $"German ec card" },
            new List<string> () { "3B EF 00 FF 81 31 52 45 4D 46 43 20 49 42 4D 20 34 30 48 39 36 30 31 FB", $"IBM MFC 3.5 file system smart card{Environment.NewLine}(Card from the book \"Smart Card Application Development Using Java\")" },
            new List<string> () { "3B EF 00 FF 81 31 60 45 65 63 04 02 11 00 00 00 00 00 A5 32 A5 01 11 B6", $"GledKarte{Environment.NewLine}Siemens M3-Module with a Motorola SC-28.{Environment.NewLine}G&D (Giesecke&Devrient) Geldkarten-OS mit der Version 11" },
            new List<string> () { "3B EF 00 FF 81 31 60 45 65 63 06 03 14 02 50 00 06 51 08 11 5E 01 41 90", $"Geldkarte from Deutsche Bank, Thomson-Chip" },
            new List<string> () { "3B EF 00 FF 81 31 66 45 49 42 4D 20 4D 46 43 34 30 30 32 30 38 33 31 A1", $"IBM MFC 4.1 file system smart card{Environment.NewLine}Card from the book \"Smart Card Application Development Using Java\"{Environment.NewLine}authors: Uwe Hansmann, Martin. S. Nicklous, Thomas Schäck, Achim Schneider, Frank Seliger" },
            new List<string> () { "3B EF 00 FF 81 31 66 45 65 63 20 20 49 42 4D 20 33 2E 31 20 20 20 20", $"IBM eCash" },
            new List<string> () { "3B EF 00 FF 81 31 66 45 65 63 20 20 49 42 4D 20 33 2E 31 20 20 20 20 CF", $"IBM eCash" },
            new List<string> () { "3B EF 00 FF 81 31 86 45 49 42 4D 20 4D 46 43 34 30 30 30 30 38 33 31 43", $"ComCard MFC 4.1" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 41 43 4F 53 20 44 49 61 6E 61 31 20 4C 63 36 4E", $"comdirect VISA card (Bank)" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 41 43 4F 53 20 44 49 61 6E 61 32 20 4C 63 36 4D", $"Alior Bank SA (Bank)" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 65 63 0D 12 81 01 56 00 1F 00 00 66 86 08 01 22", $"Commerzbank signature card SECCOS (6 or 7) providing RAH security profile (Bank)" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 65 63 11 04 01 02 80 00 0F 27 40 00 03 01 00 E1", $"Postbank Geldkarte" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 65 63 11 04 01 02 80 00 0F 46 20 04 23 01 00 C4", $"Postbank ec/Maestro (Germany)" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 65 63 11 08 43 02 50 00 10 21 20 03 24 05 30 16", $"Bank (Bank)" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 65 63 11 12 61 02 50 00 10 0A 07 27 22 07 10 22", $"DKB Online Banking Card (Bank)" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 65 63 11 12 61 02 50 00 10 0A 07 81 1C 07 10 BA", $"German Sparkasse HBCI card (Bank)" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 65 63 11 13 71 05 28 00 1F 00 01 02 28 37 20 60", $"MasterCard of SpardaBank Hamburg in Germany (Bank)" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 65 63 11 13 71 05 28 00 1F 00 06 12 41 37 20 1E", $"BankCard Sparda-Bank Baden-Württemberg eG (Bank)" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 65 63 11 13 71 05 28 00 1F 00 07 24 1A 37 20 72", $"Commerzbank Maestro Card (Bank)" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 65 63 11 13 71 05 28 00 1F 00 08 3B 3C 37 20 44", $"Comdirect Debit Card Germany - AustriaCard 55616 (Bank)" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 65 63 11 13 71 05 28 00 1F 00 0A 1B 18 37 20 42", $"German debit card (girocard, V-Pay) (Bank)" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 65 63 11 13 71 05 28 00 1F 00 0B 16 1C 37 20 4A", $"Commerzbank / girocard /maestro (Bank)" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 65 63 11 13 71 05 28 00 1F 00 0D 16 3A 37 20 6A", $"BankCard Sparda-Bank West eG (Bank)" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 65 63 11 13 71 05 28 00 1F 00 12 0F 24 37 20 72", $"Debit card (Germany): Postbank - GeldKarte (EUR), girocard, V-PAY (Bank)" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 65 63 11 13 71 05 28 00 1F 00 15 3D 47 37 20 24", $"Girocard issued by Comdirect bank AG (Bank)" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 65 63 11 13 71 05 28 00 1F 00 19 35 16 37 20 71", $"Commerzbank Germany (Bank)" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 65 63 11 14 71 05 28 00 1F 00 02 4D 36 37 10 05", $"comdirect girocard (Bank)" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 65 63 11 14 71 05 28 00 1F 00 03 44 31 37 10 0A", $"DKB Banking Card (Bank) (Bank)" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 65 63 11 14 71 05 28 00 1F 00 03 4A 36 37 10 03", $"German Sparkasse, Girocard, GeldCard, girogo, EUROSERV (Bank)" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 65 63 11 14 71 05 28 00 1F 00 05 21 0F 37 10 57", $"girocard maestro Bank (Bank)" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 65 63 11 14 71 05 28 00 1F 00 06 30 2F 37 10 65", $"MasterCard German Sparkasse (Bank)" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 65 63 11 14 71 05 28 00 1F 00 06 54 31 37 10 1F", $"Sparkasse (Bank)" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 65 63 11 14 71 05 28 00 1F 00 07 1D 46 37 10 20", $"DKB (Deutsche Kreditbank) debit card (V-PAY) (Bank)" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 65 63 11 14 71 05 28 00 1F 00 0A 1E 13 37 10 7B", $"girocard (Bank)" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 65 63 11 14 71 05 28 00 1F 00 0B 36 1B 37 10 5A", $"Kreissparkasse bank Girocard (Germany) (Bank)" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 65 63 11 14 71 05 28 00 1F 00 0C 1A 17 37 10 7D", $"Bank card issued by Sparkasse (Bank)" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 65 63 11 14 71 05 28 00 1F 00 0C 20 24 37 10 74", $"Debit card (Germany): ec-cash, GeldKarte(EUR), Maestro, Cirrus, ... (Bank)" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 65 63 11 14 71 05 28 00 1F 00 0C 3D 35 37 10 78", $"Sparkasse KölnBonn Bank (Bank)" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 65 63 11 14 71 05 28 00 1F 00 10 14 24 37 10 5C", $"Deutsche Kreditbank AG (Bank)" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 65 63 11 14 71 05 28 00 1F 00 11 2D 4F 37 10 0F", $"Bank card (Bank)" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 65 63 11 14 71 05 28 00 1F 00 11 3B 32 37 10 64", $"DKB GiroCard (Bank)" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 65 63 11 14 71 05 28 00 1F 00 17 28 46 37 10 05", $"Sparkasse Zwickau Maestro card (Bank)" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 65 63 11 14 71 05 28 00 1F 00 18 0F 48 37 10 23", $"SparkassenCard (Bank)" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 65 63 11 14 71 05 28 00 1F 00 18 24 2A 37 10 6A", $"Sparkasse girocard (Bank)" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 65 63 11 14 71 05 28 00 1F 00 18 2D 1C 37 10 55", $"Debit card (Germany): ec-cash, GeldKarte(EUR) (Bank)" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 65 63 11 15 62 02 50 00 10 0A 00 2B 21 07 20 1E", $"EC Card Sparkasse Mittelfranken Sued (Bank)" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 65 63 11 15 62 02 50 00 10 0A 00 2E FC 07 20 C6", $"maestro BankCard (Bank)" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 65 63 11 15 62 02 50 00 10 0A 09 AC 03 07 20 B2", $"Girocard Sparkasse Darmstadt (Bank)" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 65 63 19 01 62 02 80 00 0F 00 35 00 42 06 20 BB", $"Credit card (Germany, Postbank AG): VISA" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 65 63 1D 02 84 02 50 00 23 05 09 A0 D9 01 01 82", $"Debit card (Bank)" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 65 63 1D 02 84 02 50 00 23 18 09 20 E7 01 01 21", $"Deutsche Kreditbank AG (DKB AG) bank card (Bank)" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 80 31 C0 6B 49 42 4D 20 4A 65 74 5A 20 4D 32 39", $"UBS Internet Card (IBM JetZ M2)" },
            new List<string> () { "3B EF 00 FF 81 31 FE 45 80 31 E0 6B 04 21 05 02 6B 55 55 55 55 55 55 68", $"MasterCard credit card for Mega International Commercial Bank, Taiwan (Bank)" },
            new List<string> () { "3B EF 00 FF 81 31 FF 65 49 42 4D 20 4D 46 43 39 32 32 39 32 38 39 30 17", $"IBM MFC 4.22 (University of Cambridge smartchip card)" },
            new List<string> () { "3B F0 12 00 FF 91 81 B1 7C 45 1F 01 9B", $"Japanese Chijou Digital B-CAS Card (pay TV) (Pay TV)" },
            new List<string> () { "3B F0 12 00 FF 91 81 B1 7C 45 1F 03 99", $"Japanese Chijou Digital B-CAS Card (pay TV)" },
            new List<string> () { "3B F0 12 00 FF 91 81 B1 EF 45 1F 03 0A", $"Japanese Digital CATV C-CAS card" },
            new List<string> () { "3B F0 13 00 00 10 00", $"MasterCard ETEC InterOp 27. This is an dual-app Maestro/MasterCard Credit EMV test card" },
            new List<string> () { "3B F0 13 00 00 81 31 FE 45 E8", $"Healthcare card Romania (HealthCare)" },
            new List<string> () { "3B F0 13 00 FF 91 81 B1 FE 46 1F 03 19", $"Japan BS/CS 4K Satellite Broadcasting A-CAS Card (Pay TV)" },
            new List<string> () { "3B F2 18 00 00 C1 0A 31 FE 55 C8 06 75", $"HID iCLASS P16K C4H{Environment.NewLine}proximity card used for both door locks and keystore" },
            new List<string> () { "3B F2 18 00 02 C1 0A 31 FE 55 C8 07 76", $"Siemens CardOS V4.3" },
            new List<string> () { "3B F2 18 00 02 C1 0A 31 FE 58 C8 08 74", $"Siemens CardOS V4.3B{Environment.NewLine}D-Trust multicard 2.1 (may only be the testcard for it)" },
            new List<string> () { "3B F2 18 00 02 C1 0A 31 FE 58 C8 09 75", $"Siemens CardOS V4.2B" },
            new List<string> () { "3B F2 18 00 02 C1 0A 31 FE 58 C8 0B 77", $"CardOS V4.2C (SLE66CX360PE dual interface)" },
            new List<string> () { "3B F2 18 00 FF C1 0A 31 FE 55 C8 06 8A", $"Siemens CardOS M 4.2 (SLE66CX642P)" },
            new List<string> () { "3B F2 96 00 00 81 31 80 43 80 31 A6", $"Card of Justice (Other)" },
            new List<string> () { "3B F2 98 00 FF C1 10 31 FE 55 C8 03 15", $"Siemens CardOS M 4.01 (SLE66CX320P)" },
            new List<string> () { "3B F2 98 00 FF C1 10 31 FE 55 C8 04 12", $"CardOS M4.01a (SLE66CX322P)" },
            new List<string> () { "3B F3 96 00 FF C0 0A 31 FE 4D 80 31 E0 83", $"MARX Cryptoken (supported by RaakSign)" },
            new List<string> () { "3B F4 13 00 00 81 31 FE 45 52 46 5A 4F ED", $"Serbian Health Care electronic card (HealthCare)" },
            new List<string> () { "3B F4 18 00 02 C1 0A 31 FE 58 56 34 63 76 C5", $"Eutron CryptoIdentity (reader + card token)" },
            new List<string> () { "3B F4 18 00 FF 81 31 80 55 00 31 80 00 C7", $"Identity card of Italian Republic" },
            new List<string> () { "3B F4 98 00 FF C1 10 31 FE 55 4D 34 63 76 B4", $"Eutron Digipass 860 (reader + card token)" },
            new List<string> () { "3B F5 13 00 00 81 31 FE 45 73 74 64 31 30 8F", $"card for NF-e in Brazil (PKI)" },
            new List<string> () { "3B F5 18 00 00 81 31 FE 45 4D 79 45 49 44 9A", $"Aventra ActiveSecurity MyEID(2p)%20EN.pdf" },
            new List<string> () { "3B F5 18 00 02 10 80 4F 73 45 49 44", $"Atmega 128 microcontroller based open source EID smartcard with RSA and ECC. (eID)" },
            new List<string> () { "3B F5 71 00 FF FE 24 00 01 1E 0F 33 39 32 01 03", $"Mydo IC Card from Japan, based on NTTDATA CARD (Loyalty)" },
            new List<string> () { "3B F5 91 00 FF 91 81 71 FE 40 00 0A 08 6E 77 3A 65", $"iCLASS Card (Other)" },
            new List<string> () { "3B F5 91 00 FF 91 81 71 FE 40 00 41 00 00 00 00 05", $"Contactless Mifare Ultralight" },
            new List<string> () { "3B F5 91 00 FF 91 81 71 FE 40 00 41 08 00 00 00 0D", $"Contactless Mifare" },
            new List<string> () { "3B F5 91 00 FF 91 81 71 FE 40 00 41 18 00 00 00 1D", $"Contactless Mifare 4k" },
            new List<string> () { "3B F5 91 00 FF 91 81 71 FE 40 00 41 88 00 00 00 8D", $"Contactless Mifare 1k or 4k" },
            new List<string> () { "3B F5 91 00 FF 91 81 71 FE 40 00 42 00 01 00 81 86", $"American Express Blue RFID" },
            new List<string> () { "3B F5 91 00 FF 91 81 71 FE 40 00 42 00 01 00 D1 D6", $"Japanese Public Key Infrastructure (PKI){Environment.NewLine}My Number Card (The Social Security and Tax Number System in JAPAN) (eID)" },
            new List<string> () { "3B F5 91 00 FF 91 81 71 FE 40 00 42 00 01 77 D1 A1", $"German Passport (ePass) (issued May 2008)" },
            new List<string> () { "3B F5 91 00 FF 91 81 71 FE 40 00 42 00 01 B3 A1 15", $"Individual Number Card (eID)" },
            new List<string> () { "3B F5 96 00 00 8. 31 FE 45 4D 79 45 49 44 1.", $"MyEID card (Infineon chip) (PKI)" },
            new List<string> () { "3B F6 18 00 FF 81 31 FE 45 4A 32 41 30 38 30 1B", $"NXP J2A080 - 80K (blank)" },
            new List<string> () { "3B F6 18 00 FF 81 31 FE 45 4A 43 4F 50 32 30 0E", $"IBM JCOP20" },
            new List<string> () { "3B F6 18 00 FF 81 31 FE 45 4A 43 4F 50 33 30 0F", $"Philips P8RF5016 running IBM JCOP 30 (contact interface)" },
            new List<string> () { "3B F6 18 00 FF 81 31 FE 45 4A 43 4F 50 33 31 0E", $"IBM JCOP BIO31{Environment.NewLine}IBM JCOP BIO31 Java card" },
            new List<string> () { "3B F7 11 00 00 81 31 FE 65 43 61 6E 6F 6B 65 79 99", $"Canokey (Other)" },
            new List<string> () { "3B F7 11 00 00 81 71 80 42 00 00 63 95 0A 01 90 00 B9", $"ATM Card for Chunghwa Post Inc., Taiwan" },
            new List<string> () { "3B F7 11 00 00 81 71 FE 42 00 00 63 95 01 01 90 00 CC", $"ATM Card for Mega International Commercial Bank, Taiwan{Environment.NewLine}ATM card for HSBC Direct, Taiwan{Environment.NewLine}ATM card for TaChong Bank, Taiwan{Environment.NewLine}ATM card for Chunghwa Post, Taiwan{Environment.NewLine}VISA card for Taipei Fubon Bank, Taiwan{Environment.NewLine}ATM card for Cathay United Bank, Taiwan (Bank)" },
            new List<string> () { "3B F7 11 00 00 81 71 FE 42 00 00 63 95 31 02 90 00 FF", $"VISA card for Taipei Fubon Bank, Taiwan" },
            new List<string> () { "3B F7 11 00 00 81 71 FE 42 00 00 63 95 31 04 90 00 F9", $"E.SUN Bank, Taiwan (Bank)" },
            new List<string> () { "3B F7 11 00 00 81 71 FE 42 00 00 63 95 31 05 90 00 F8", $"ATM card for Chunghwa Post, Taiwan{Environment.NewLine}ATM card for E.Sun Commercial Bank, Taiwan{Environment.NewLine}ATM card for Taishin International Bank, Taiwan{Environment.NewLine}ATM card for Bank of Taiwan, Taiwan{Environment.NewLine}ATM card for Land Bank of Taiwan, Taiwan" },
            new List<string> () { "3B F7 11 00 01 40 96 54 30 04 0E 6C B6 D6", $"Atmel (FunCard) Smart Card with AT90S8515 and 24LC64 chip on it (Other)" },
            new List<string> () { "3B F7 11 00 01 40 96 54 30 04 0E 6C B6 D6 90 00", $"PIC16F876-04/SP (PICCard2) or{Environment.NewLine}PIC16F84A-04/P + 24LC16B (PICCard1) or{Environment.NewLine}Canal + Canal Digital Spain year 2000/2001 or{Environment.NewLine}PIC Silver Card 2 (PIC16F876/7 + 24C64)" },
            new List<string> () { "3B F7 11 00 01 40 96 57 60 14 0E 6C B6 D6", $"old SECA of D+ Italian sat pay tv" },
            new List<string> () { "3B F7 11 00 01 40 96 58 42 14 0E 6C B6 D6", $"UK on digital (terrestrial digital TV card)" },
            new List<string> () { "3B F7 11 00 01 40 96 60 60 06 0E 6C B6 D6", $"CANAL+ CANALSATELLITE SmartCard (possibly from 2005) (Pay TV)" },
            new List<string> () { "3B F7 11 00 01 40 96 70 70 07 0E 6C B6 D6", $"Cyfra+ SECA Card" },
            new List<string> () { "3B F7 11 00 01 40 96 70 70 07 0E 6C B6 D6 90 00", $"M-II (a.k.a. M-2, a.k.a. Platinum Card), AT90SC6464C based{Environment.NewLine}KnotCard II{Environment.NewLine}TitaniumElite" },
            new List<string> () { "3B F7 11 00 01 40 96 70 70 0A 0E 6C B6 D6", $"TopUp TV NagraVision viewing card" },
            new List<string> () { "3B F7 11 00 01 40 96 70 70 0A 0E 6C B6 D6 90 00", $"Canal Digitaal (Pay TV)" },
            new List<string> () { "3B F7 11 00 01 40 96 70 70 17 0E 6C B6 D6", $"Canal Satellite card (VERSION 7.1 SYSTEM / SECA2)" },
            new List<string> () { "3B F7 11 00 01 40 96 70 70 37 0E 6C B6 D6", $"Carte pour decodeur cable numérique (fourni par www.voo.be et{Environment.NewLine}www.ledecodeur.be)" },
            new List<string> () { "3B F7 11 00 01 40 96 70 70 67 0E 6C B6 D6", $"UK TopUp TV" },
            new List<string> () { "3B F7 11 00 01 40 96 70 71 09 0E 6C B6 D6", $"Carte pour décodeur télé de Neuf Telecom TV" },
            new List<string> () { "3B F7 13 00 00 81 31 FE 45 46 4F 4D 53 4F 4D 53 A9", $"Health card Russian Federation" },
            new List<string> () { "3B F7 13 00 00 81 31 FE 45 4A 43 4F 50 32 34 .. ..", $"NXP JCOP v2.4.x (see hist bytes for more info)" },
            new List<string> () { "3B F7 13 00 00 81 31 FE 45 80 65 4A 50 30 31 04 15", $"Nichizeiren Denshi-shomei (eID)" },
            new List<string> () { "3B F7 18 00 00 80 31 FE 45 73 66 74 65 2D 6E 66 C4", $"SmartCafe Expert 3.2 72K" },
            new List<string> () { "3B F7 18 00 00 80 31 FE 45 FE 42 47 52 65 49 44 24", $"Bulgarian eID PKI card pilot on IFX SLE78 jTOP (PKI)" },
            new List<string> () { "3B F7 18 00 00 81 31 FE 45 80 55 43 37 76 70 6B 28", $"Only labeled \"J35110\", dual interface (JavaCard)" },
            new List<string> () { "3B F7 18 00 00 81 71 80 42 00 00 63 84 0C 01 90 00 A7", $"Citibank Taiwan ATM Card (Bank)" },
            new List<string> () { "3B F7 18 00 00 81 71 80 42 00 00 63 95 0A 01 90 00 B0", $"7-Eleven icash card, Taiwan" },
            new List<string> () { "3B F7 91 00 FF 91 81 71 FE 40 00 0A 02 60 CF 51 04 CB 7F", $"UK Metro Bank Mastercard Debit (Bank)" },
            new List<string> () { "3B F7 91 00 FF 91 81 71 FE 40 00 41 20 00 11 77 81 80 40", $"Contactless Mifare DESFire" },
            new List<string> () { "3B F8 11 00 00 81 71 FE 42 00 54 4E 05 19 00 00 00 02 A1", $"Taiwan EasyCard (Transport)" },
            new List<string> () { "3B F8 11 20 03 40 FF 03 03 03 03 12 10 90 00", $"Bar Ilan KesefCard from Bezeq (Other)" },
            new List<string> () { "3B F8 11 20 03 40 FF FF FF FF FF 12 10 90 00", $"G&D (STARCOS SV 1.1)" },
            new List<string> () { "3B F8 13 00 00 10 00 00 73 C8 40 11 00 90 00", $"Vivid Money Visa Debit (Bank)" },
            new List<string> () { "3B F8 13 00 00 81 31 FE 15 59 75 62 69 6B 65 79 34 D4", $"Yubico Yubikey 4 OTP+CCID" },
            new List<string> () { "3B F8 13 00 00 81 31 FE 45 46 49 44 45 53 4D 4F 31 8E", $"Fidesmo Card with Dual Interface (JavaCard)" },
            new List<string> () { "3B F8 13 00 00 81 31 FE 45 4A 43 4F 50 76 32 34 .. ..", $"NXP JCOP v2.4.x (see hist bytes for more info)" },
            new List<string> () { "3B F8 13 00 00 81 31 FE 45 4A 43 4F 50 76 32 34 31 B7", $"Nigerian eID Card (blank card){Environment.NewLine}Chip is NXP JCOP 2.4.1R3" },
            new List<string> () { "3B F8 13 00 00 81 31 FE 45 4A 4F 50 76 32 34 31 B7", $"Nigerian eID card (eID)" },
            new List<string> () { "3B F8 13 00 00 81 31 FE 45 50 49 56 4B 45 59 37 30 FF", $"PIVKey CP70 (PKI)" },
            new List<string> () { "3B F8 13 00 00 81 31 FE 45 52 41 41 4B 43 32 76 35 CB", $"Raak C2 Smart Card (PKI)" },
            new List<string> () { "3B F8 13 00 00 81 31 FE 45 53 4B 55 50 01 00 00 00 FC", $"Silesian Card of Public Services (Transport)" },
            new List<string> () { "3B F8 13 00 00 81 31 FE 45 53 6D 61 72 74 41 70 70 F8", $"national Lithuania ID card" },
            new List<string> () { "3B F8 13 00 00 81 31 FE 45 FF 4A 32 41 30 34 30 00 12", $"MIDAS Card Diversification Key JavaCard (J2A040) (Bank)" },
            new List<string> () { "3B F8 13 00 FF 10 80 53 43 06 63 01 0F 90 00 00", $"Affinity CUIA Debit (JavaCard)" },
            new List<string> () { "3B F8 18 00 00 80 31 FE 45 00 73 C8 40 13 00 90 00 92", $"G&D StarSign Token" },
            new List<string> () { "3B F8 18 00 00 81 31 FE 45 00 73 C8 40 00 00 90 00 80", $"NXP JCOP 31 V2.2 36K - S/C I/F" },
            new List<string> () { "3B F8 18 00 00 81 31 FE 45 00 73 C8 40 13 00 90 00 93", $"Giesecke & Devrient Sm@rtCafé Expert 3.0" },
            new List<string> () { "3B F8 18 00 00 81 31 FE 45 4A 43 4F 50 56 32 34 31 9C", $"NXP JCOP2.4.1{Environment.NewLine}J3A080 80KB T=1 GP2.1.1 JC2.2.2 SCP02" },
            new List<string> () { "3B F8 18 00 00 81 31 FE 45 4A 43 4F 50 76 32 34 31 BC", $"NXP J2A080 JavaCard" },
            new List<string> () { "3B F8 18 00 FF 81 31 FE 45 00 73 C8 40 00 00 90 00 7F", $"NXP JCOP 10{Environment.NewLine}NXP JCOP 31 (contact interface)" },
            new List<string> () { "3B F8 18 00 FF 81 31 FE 45 4A 43 4F 50 76 32 34 31 43", $"VIVOtech SAM{Environment.NewLine}NXP JCOP V241{Environment.NewLine}NXP J3A081 JavaCard (contact interface)" },
            new List<string> () { "3B F8 96 00 00 80 31 FE 47 00 73 C8 40 00 00 90 00 0D", $"Italian driver tachograph smartcard (Transport)" },
            new List<string> () { "3B F8 96 00 00 81 31 FE 44 00 73 94 01 C0 0F 90 00 DD", $"fourth-generation Hong Kong permanent identity card (Other)" },
            new List<string> () { "3B F8 96 00 00 81 31 FE 45 4A 43 4F 50 76 32 34 31 32", $"NXP JCOP 2.4.1 (JavaCard)" },
            new List<string> () { "3B F9 11 00 00 81 31 FE 45 43 6F 6D 62 4F 53 20 56 00 AA", $"VISA Card (Bank)" },
            new List<string> () { "3B F9 13 00 00 81 31 F0 45 4E 42 55 02 00 03 20 00 00 97", $"Bank" },
            new List<string> () { "3B F9 13 00 00 81 31 FE 45 45 4F 4E 43 61 72 64 56 31 F6", $"NXP J2A080 (PKI)" },
            new List<string> () { "3B F9 13 00 00 81 31 FE 45 4A 43 4F 50 32 34 .. .. .. ..", $"NXP JCOP v2.4.x (see hist bytes for more info)" },
            new List<string> () { "3B F9 13 00 00 81 31 FE 45 4A 43 4F 50 34 31 56 32 34 A2", $"JCOP41 v2.4" },
            new List<string> () { "3B F9 13 00 00 81 31 FE 45 4A 43 4F 50 76 32 34 31 B7 01", $"J2A040 NXP (JavaCard)" },
            new List<string> () { "3B F9 13 00 00 81 31 FE 45 53 50 49 56 4B 45 59 37 30 AD", $"PIVKey T840 (Other)" },
            new List<string> () { "3B F9 13 00 FF 10 80 80 31 E0 55 42 45 52 47 53", $"Banrisul bank" },
            new List<string> () { "3B F9 15 00 FF 91 01 31 FE 43 80 64 48 65 72 61 82 90 00 C7", $"RC-S500 card (FeliCa SAM for reader?) (Other)" },
            new List<string> () { "3B F9 18 00 00 00 53 43 45 37 20 03 00 20 46", $"G+D FIPS 201 SCE 7.0 (PKI)" },
            new List<string> () { "3B F9 18 00 00 80 31 FE 45 80 57 4E 45 4F 57 41 56 45 7D", $"Neowave Weneo" },
            new List<string> () { "3B F9 18 00 00 81 31 FE 45 39 35 32 38 35 30 31 33 31 DA", $"JCOP31 / 72B1 V2.2 (4096 RSA key support){Environment.NewLine}Smartcard Dual Interface JCOP31 with 72KB EEPROM and V2.2 Java Card Open Platform" },
            new List<string> () { "3B F9 18 00 00 81 31 FE 45 4A 32 44 30 38 31 5F 50 56 B6", $"NXP J2D081 Java Card 80KB JCOP 2.4.2 R2 GP 2.2.1 JC 3.0.1 (JavaCard)" },
            new List<string> () { "3B F9 18 00 00 81 31 FE 45 4A 43 4F 50 32 31 56 32 32 A9", $"NXP JCOP 21 V2.2 36K" },
            new List<string> () { "3B F9 18 00 00 81 31 FE 45 4A 43 4F 50 33 31 56 32 32 A8", $"JCOP31 / 72B1 V2.2{Environment.NewLine}Smartcard Dual Interface JCOP31 with 72KB EEPROM and V2.2 Java Card Open Platform" },
            new List<string> () { "3B F9 18 00 00 81 31 FE 45 4A 43 4F 50 34 31 56 32 32 AF", $"JCOP41 Cards (not supported, but recognized by Classic Client){Environment.NewLine}NHS Care Identity Service (CIS) smartcard (HealthCare)" },
            new List<string> () { "3B F9 18 00 00 81 31 FE 45 50 56 5F 4A 32 44 30 38 31 B6", $"Taiwanese Health Professional Card(TW HPC) (HealthCare)" },
            new List<string> () { "3B F9 18 00 FF 81 31 FE 45 50 56 5F 4A 33 41 30 34 30 40", $"Yubico Yubikey NEO OTP+U2F+CCID (PKI)" },
            new List<string> () { "3B F9 18 00 FF 81 31 FE 45 50 56 5F 4A 33 41 30 38 31 4D", $"NXP JCOP J3A081 (JavaCard)" },
            new List<string> () { "3B F9 91 00 FF 91 81 71 40 40 00 41 80 04 5B 89 BA B3 52 80 3A", $"mifare desfire 2k (eID)" },
            new List<string> () { "3B F9 91 00 FF 91 81 71 FC 40 00 0A 09 51 61 90 00 58 C2 90 D2", $"NFC PASS card (eID)" },
            new List<string> () { "3B F9 94 00 00 81 31 FE 65 46 54 20 56 31 30 30 90 00 83", $"ePass 2000" },
            new List<string> () { "3B F9 96 00 00 80 31 FE 45 4A 54 61 78 43 6F 72 65 56 0F", $"Secure element for fiscal system in Serbia (PKI)" },
            new List<string> () { "3B F9 96 00 00 80 31 FE 45 53 43 45 37 20 00 00 20 20 27", $"G&D SmartCafe Expert 7 (JavaCard)" },
            new List<string> () { "3B F9 96 00 00 80 31 FE 45 53 43 45 37 20 03 00 20 46 42", $"ActivIdentity Activkey Sim (PKI)" },
            new List<string> () { "3B F9 96 00 00 80 31 FE 45 53 43 45 37 20 0F 00 20 46 4E", $"Giesecke & Devrient (DoD Alternate Token) G+D Sm@rtCafe Expert v7.0 144K DI #3 (PKI)" },
            new List<string> () { "3B F9 96 00 00 81 31 FE 45 45 4F 4E 43 61 72 64 56 31 73", $"eONCard V1 (PKI)" },
            new List<string> () { "3B F9 96 00 00 81 31 FE 45 53 43 45 37 20 0E 00 20 20 28", $"Giesecke & Devrient GmbH StarSign CUT S" },
            new List<string> () { "3B F9 96 00 00 81 31 FE 45 53 50 49 56 4B 45 59 37 30 28", $"Taglio PIVKey C980 (PKI)" },
            new List<string> () { "3B F9 98 00 FF C1 10 31 FE 55 41 4D 20 43 4D 44 31 31 30 83", $"Service card of the Ministry of Defense of Italy - Military Aviation" },
            new List<string> () { "3B F9 98 00 FF C1 10 31 FE 55 45 49 20 43 4D 44 31 31 30 83", $"Service card of the Ministry of Defense of Italy - Italian Army" },
            new List<string> () { "3B F9 98 00 FF C1 10 31 FE 55 4D 4D 20 43 4D 44 31 31 30 8F", $"Service card of the Ministry of Defense of Italy - Navy" },
            new List<string> () { "3B F9 98 00 FF C1 10 31 FE 55 50 43 20 43 4D 44 31 31 30 9C", $"Service card of the Ministry of Defense of Italy - Civil personnel" },
            new List<string> () { "3B FA .. 00 00 81 31 .. 43 80 65 A2 .. .. .. .. 72 D6 .. ..", $"IDClassic 3XX Cards (with MPCOS Applet)" },
            new List<string> () { "3B FA 11 00 00 81 31 FE 45 43 6F 6D 62 4F 53 20 49 56 00 E0", $"MyWireCard 2go Prepaid VISA Card" },
            new List<string> () { "3B FA 11 00 02 40 60 43 C6 02 F8 03 03 00 00 90 00", $"DeLaRue DX(?)" },
            new List<string> () { "3B FA 13 00 00 81 31 FE 15 59 75 62 69 6B 65 79 4E 45 4F A6", $"Yubikey NEO" },
            new List<string> () { "3B FA 13 00 00 81 31 FE 45 00 31 C1 73 C8 40 00 00 90 00 79", $"Nigerian eID Card (warm reset){Environment.NewLine}Chip is NXP JCOP 2.4.1R3" },
            new List<string> () { "3B FA 13 00 00 81 31 FE 45 44 65 78 61 20 43 46 20 76 31 98", $"Dexa Systems Crossfire Card (PKI)" },
            new List<string> () { "3B FA 13 00 00 81 31 FE 45 4A 43 4F 50 3. 3. 56 32 33 32 ..", $"JCOPxx/yy v2.3.2 (see hist bytes for more info)" },
            new List<string> () { "3B FA 13 00 00 81 31 FE 45 4A 43 4F 50 32 31 56 32 33 31 91", $"NXP JCOP 21 V2.3.1 36K" },
            new List<string> () { "3B FA 13 00 00 81 31 FE 45 4A 43 4F 50 32 31 56 32 34 31 96", $"NXP JCOP 2.1 V 2.4.1 (JavaCard)" },
            new List<string> () { "3B FA 13 00 00 81 31 FE 45 4A 43 4F 50 34 31 56", $"JCOP41 V221" },
            new List<string> () { "3B FA 13 00 00 81 31 FE 45 4A 43 4F 50 34 31 56 32 33 31 97", $"JCOP41 /72K (eID)" },
            new List<string> () { "3B FA 13 00 00 81 31 FE 45 4A 43 4F 50 76 32 34 .. .. .. ..", $"NXP JCOP v2.4.x (see hist bytes for more info)" },
            new List<string> () { "3B FA 13 00 FF 81 31 80 45 00 31 C1 73 C0 01 00 00 90 00 B1", $"OpenPGP" },
            new List<string> () { "3B FA 18 00 00 80 31 FE 45 FE 65 49 44 20 2F 20 50 4B 49 03", $"Estonian Identity Card (EstEID v3.5 (10.2014) cold) (eID)" },
            new List<string> () { "3B FA 18 00 00 81 31 FE 45 06 08 2A 84 10 01 87 6E 08 05 BC", $"Dutch Rijkspas (eID)" },
            new List<string> () { "3B FA 18 00 00 81 31 FE 45 06 08 2A 84 10 01 87 6E 08 07 BE", $"Rijkspas (identification card dutch government employees) (eID){Environment.NewLine}Dutch goverment multifunctional smartcard (Other)" },
            new List<string> () { "3B FA 18 00 00 81 31 FE 45 06 08 60 84 10 01 87 6F 06 02 FE", $"Card used by the Dutch health insurers to give medical personell access to patient insurance information" },
            new List<string> () { "3B FA 18 00 00 81 31 FE 45 46 53 4A 43 4F 50 34 53 49 44 80", $"NXP Java Card JCOP4 P71 GP2.3 JC3.0.5 (JavaCard)" },
            new List<string> () { "3B FA 18 00 00 81 31 FE 45 4A 33 41 30 34 30 56 32 34 31 84", $"NXP J3A 40K{Environment.NewLine}Java Card v2.2.2 - Global Platform v2.2.1{Environment.NewLine}Dual-interface functionality (features 1K Mifare emulation)" },
            new List<string> () { "3B FA 18 00 00 81 31 FE 45 4A 33 41 30 38 31 56 32 34 31 89", $"NXP JCOP CJ3A081" },
            new List<string> () { "3B FA 18 00 00 81 31 FE 45 4A 43 4F 50 34 31 56 32 32 31 9D", $"NXP JCOP 41 v2.2.1 72k SmartCard I/F" },
            new List<string> () { "3B FA 18 00 00 81 31 FE 45 4A 54 61 78 43 6F 72 65 56 31 B2", $"Taxpayer Portal Authentication for Fiji Revenue & Customs Service taxpayer portal (PKI)" },
            new List<string> () { "3B FA 18 00 00 81 31 FE 45 4D 4F 54 49 4F 4E 00 00 90 07 60", $"SIM card (Telecommunication)" },
            new List<string> () { "3B FA 18 00 00 81 31 FE 45 50 56 4A 43 4F 50 33 45 4D 56 94", $"NXP JCOP3 J3H082 Java Card 3.0.4 Dual-Interface (JavaCard)" },
            new List<string> () { "3B FA 18 00 00 91 01 31 FE 45 50 56 4A 43 4F 50 34 53 49 44 82", $"Supposed P71 SecID purchased from a Chinese manufacturer (JavaCard)" },
            new List<string> () { "3B FA 18 00 02 C1 0A 31 FE 58 4B 53 77 69 73 73 53 69 67 6E 89", $"SuisseId card (used for qualified signatures)" },
            new List<string> () { "3B FA 18 00 FF 10 00 4A 54 61 78 43 6F 72 65 56 31", $"NXP JCOP4 J3R200 P71 (JavaCard)" },
            new List<string> () { "3B FA 18 00 FF 81 31 FE 45 4A 43 4F 50 32 31 56 32 33 31 65", $"TrubDemax healthcare card{Environment.NewLine}JCOP 21 / 72k" },
            new List<string> () { "3B FA 18 00 FF 81 31 FE 45 4A 43 4F 50 34 31 43 32 30 30 74", $"HID Crescendo C200" },
            new List<string> () { "3B FA 18 00 FF 81 31 FE 45 4A 43 4F 50 34 31 56 32 32 31 62", $"JCOP41{Environment.NewLine}HID Crescendo C700{Environment.NewLine}Should be compatible to RAAK{Environment.NewLine}Marx CrypToken MX2048-JCOP USB Token" },
            new List<string> () { "3B FA 18 00 FF 81 31 FE 45 4A 43 4F 50 34 31 56 32 33 31 63", $"JCOP41 V2.3.1 Dual Interface, Mifare emulation, 72K (NXP SmartMX P5CT072)" },
            new List<string> () { "3B FA 94 00 00 81 31 20 43 80 65 A2 01 01 01 3D 72 D6 43 21", $"GemXpresso Pro R3 32PK (MPCOS, T=1)" },
            new List<string> () { "3B FA 96 00 00 80 31 FE 45 00 31 C8 23 97 52 27 0F 90 00 C1", $"Swedish ID card (eID)" },
            new List<string> () { "3B FA 96 00 00 81 31 80 43 80 65 A2 01 01 01 3D 72 D6 43 83", $"Malta identity card delivered by the Identity Management Office (eID)" },
            new List<string> () { "3B FA 98 00 FF C1 10 31 FE 55 C8 03 53 41 47 5F 50 4B 49 32 77", $"Siemens corporate ID card (access to the building / rooms etc,{Environment.NewLine}stores PKI private keys/certificates)" },
            new List<string> () { "3B FA 98 00 FF C1 10 31 FE 55 C8 04 53 41 47 5F 50 4B 49 32 70", $"Siemens Corporate Card (Belgium , Germany)" },
            new List<string> () { "3B FB 11 00 00 40 28 80 59 53 50 59 52 55 53 AE 00 02", $"Spyrus Rosetta Basic" },
            new List<string> () { "3B FB 11 00 00 40 78 80 59 53 50 59 52 55 53 AE 02 02", $"Rosetta® Series II Smart Card manufactured by Spyrus" },
            new List<string> () { "3B FB 11 00 00 81 31 FE 45 00 31 C0 64 77 E9 10 00 00 90 00 6A", $"OCS ID-One Cosmo Card USB Token" },
            new List<string> () { "3B FB 11 00 FF 81 31 80 55 00 68 02 00 10 10 53 49 41 45 00 04", $"Italian Society of Authors and Publishers ticket and report signing smart card (PKI)" },
            new List<string> () { "3B FB 13 00 00 81 31 FE 45 4A 43 4F 50 53 3. 3. 56 32 33 32 ..", $"JCOP-Sxx/yy v2.3.2 (see hist bytes for more info)" },
            new List<string> () { "3B FB 13 00 00 81 31 FE 45 63 68 61 72 69 73 6D 61 74 65 78 84", $"Charismathics smart card JCOP and Qualified electronic signature CHJCOP-xxx (PKI)" },
            new List<string> () { "3B FB 13 00 FF 10 80 00 31 C1 64 08 60 32 06 0F 90 00", $"Stripe Issuing Card (Bank)" },
            new List<string> () { "3B FB 13 00 FF 10 80 00 31 C1 64 08 60 32 10 0F 90 00", $"Varo (Bank)" },
            new List<string> () { "3B FB 13 00 FF 10 80 00 31 C1 64 08 98 62 21 0F 90 00", $"Visa Debit (Bank)" },
            new List<string> () { "3B FB 13 00 FF 10 80 00 31 C1 64 08 98 62 29 0F 90 00", $"Bank Card (Bank)" },
            new List<string> () { "3B FB 13 00 FF 81 31 80 75 5A 43 35 2E 35 20 52 45 56 20 47 63", $"ZeitControl BasicCard 5.5" },
            new List<string> () { "3B FB 13 00 FF 81 31 80 75 5A 43 35 2E 36 20 52 45 56 20 4D 6A", $"ZeitControl BasicCard ZC5.6 user-programmable smart card" },
            new List<string> () { "3B FB 13 00 FF 81 31 80 75 5A 43 36 2E 35 20 52 45 56 20 43 64", $"ZeitControl BasicCard 6.5, multiapplication with 30 kByte EEPROM" },
            new List<string> () { "3B FB 13 00 FF C0 80 31 80 75 5A 43 35 2E 34 20 52 45 56 20 41 A5", $"ZeitControl BasicCard Professional 5.4 Revision A" },
            new List<string> () { "3B FB 13 00 FF C0 80 31 80 75 5A 43 35 2E 34 20 52 45 56 20 48 AC", $"ZeitControl BasicCard Professional 5.4" },
            new List<string> () { "3B FB 13 00 FF C0 80 31 80 75 5A 43 35 2E 34 20 52 45 56 20 4D A9", $"Basiccard ZC5.4 revision M (Other)" },
            new List<string> () { "3B FB 13 00 FF C0 80 75 53 54 4F 4C 4C 4D 31 50 4C 55 53 BD", $"Stoll M1PLUS (Other)" },
            new List<string> () { "3B FB 18 00 00 40 78 80 59 53 50 59 52 55 53 0B 00 03", $"Spyrus, Inc. Rosetta USB (PKI)" },
            new List<string> () { "3B FB 18 00 00 40 78 80 59 53 50 59 52 55 53 0B 04 02", $"SPYRUS Rosetta Series 2 (eID)" },
            new List<string> () { "3B FB 18 00 00 40 78 80 59 53 50 59 52 55 53 AE 04 02", $"Spyrus Rosetta Series II" },
            new List<string> () { "3B FB 18 00 00 81 31 FE 45 00 31 C0 64 77 E9 10 00 01 90 00 62", $"ID card for personal of \"Govern Illes Balears\"" },
            new List<string> () { "3B FB 18 00 00 81 31 FE 45 4A 33 48 31 34 35 43 37 58 33 30 C6", $"COTECH OpenPGP Card - ECC (PKI)" },
            new List<string> () { "3B FB 91 00 FF 91 81 71 FE 40 00 41 20 00 01 00 81 20 63 CB A0 80 03", $"C*******r, MasterCard credit card, Pass Banque, Oberthur - contactless/PayPass" },
            new List<string> () { "3B FB 96 00 00 80 31 FE 45 00 31 C0 64 77 E3 02 00 82 90 00 76", $"Oberthur ID-One Cosmo" },
            new List<string> () { "3B FB 96 00 00 80 31 FE 45 00 31 C0 64 77 E3 03 00 81 90 00 74", $"D.O.D. Eid Passport rapidgate card (eID)" },
            new List<string> () { "3B FB 96 00 00 81 31 FE 45 00 31 C0 64 77 E9 10 00 01 90 00 EC", $"Oberthur ID-ONE v5.4" },
            new List<string> () { "3B FB 96 00 00 81 31 FE 45 00 31 C0 64 77 E9 10 00 0F 90 00 E2", $"Elektroniczna Legitymacja Studencka - Polish Student's ID Issued in Poznan in 2007" },
            new List<string> () { "3B FB 96 00 00 81 31 FE 45 00 31 E8 54 27 E6 01 00 07 90 00 BC", $"Gemalto (PKI)" },
            new List<string> () { "3B FB 96 00 00 81 31 FE 45 56 44 53 49 35 40 01 00 04 00 01 1F", $"Vasco DIGIPASS KEY 200 usb token{Environment.NewLine}Should contain a 'Oberthur cosmo v 5.4 or V7.0D' smartcard" },
            new List<string> () { "3B FB 98 00 FF C1 10 31 FE 55 00 64 05 20 47 03 31 80 00 90 00 F3", $"Gemplus GemGate 32K{Environment.NewLine}distributed by Postecert (www.postecert.it) to legally sign documents" },
            new List<string> () { "3B FC 13 00 00 81 31 FE 15 59 75 62 69 6B 65 79 4E 45 4F 72 33 E1", $"YubiKey NEO (PKI)" },
            new List<string> () { "3B FC 13 00 00 81 31 FE 45 59 75 62 69 6B 65 79 4E 45 4F 72 33 B1", $"Yubikey Neo" },
            new List<string> () { "3B FC 18 00 00 81 31 80 45 90 67 46 4A 00 64 16 06 F2 72 7E 00 E0", $"PIVKey C910 PKI Smart Card (eID)" },
            new List<string> () { "3B FC 18 00 00 81 31 80 45 90 67 46 4A 00 64 2D 70 C1 72 FE E0 FE", $"pivkey token (JavaCard)" },
            new List<string> () { "3B FC 18 00 00 81 31 80 45 90 67 46 4A 00 68 08 0. 00 00 00 00 0.", $"Feitian A22 JavaCard (150K) (JavaCard){Environment.NewLine}Feitian A40 JavaCard (64K) (JavaCard)" },
            new List<string> () { "3B FC 18 00 00 81 31 80 45 90 67 46 4A 01 00 20 05 00 00 00 00 4E", $"Feitian A40 (JavaCard)" },
            new List<string> () { "3B FC 18 00 00 81 31 80 45 90 67 46 4A 01 00 25 04 00 00 00 00 4A", $"Feitian JavaCOS A22CR ()" },
            new List<string> () { "3B FC 18 00 00 81 31 80 45 90 67 46 4A 01 00 87 06 00 00 00 00 EA", $"Feitian FTJCOS (JavaCard)" },
            new List<string> () { "3B FC 18 00 00 81 31 80 45 90 67 46 4A 01 64 2F 70 C1 72 FE E0 FD", $"Feitian eJavaToken (JavaCard)" },
            new List<string> () { "3B FC 18 00 00 81 31 FE 45 80 73 C8 21 13 66 02 04 03 55 00 02 D2", $"National Health Insurance Card, Taiwan" },
            new List<string> () { "3B FC 98 00 FF C1 10 31 FE 55 C8 03 49 6E 66 6F 63 61 6D 65 72 65 28", $"New Card Infocamere (Italy) series 1402...{Environment.NewLine}Siemens Informatica - Siemens M4.01a{Environment.NewLine}chip Infineon SLE66CX322P (CC EAL5){Environment.NewLine}Memory EEPROM: 32KB{Environment.NewLine}Operating system CARDOS{Environment.NewLine}Max numero dei tentativi PIN: 3{Environment.NewLine}Pin: da 5 a 8 digit{Environment.NewLine}Unblocked by tool CARDOS API 2.2" },
            new List<string> () { "3B FD .. 00 00 81 31 .. 43 80 31 80 65 B0 .. .. .. .. 83 .. 90 .. ..", $"IDClassic 3XX / Classic TPC (IXS, IS, IS V2, IS CC, IM, IM CC, IM CC V3) / MultiApp ID Cards" },
            new List<string> () { "3B FD 13 00 00 81 31 FE 15 80 73 C0 21 C0 57 59 75 62 69 4B 65 79 40", $"Yubico YubiKey 5 NFC (PKI)" },
            new List<string> () { "3B FD 13 00 00 81 31 FE 45 00 12 55 53 55 4D 49 44 41 53 00 00 00 F6", $"Midas key diversification card (Other)" },
            new List<string> () { "3B FD 13 00 00 81 31 FE 45 41 37 30 30 35 43 47 20 32 34 32 52 31 D5", $"Feitian ePass FIDO NFC (Other)" },
            new List<string> () { "3B FD 13 00 00 81 31 FE 45 41 37 30 30 36 43 47 20 32 34 32 52 31 D6", $"YubiKey NEO (token)" },
            new List<string> () { "3B FD 13 00 00 81 31 FE 45 4A 43 4F 50 32 31 76 32 33 31 47 44 54 E1", $"National Health Insurance Card, Taiwan" },
            new List<string> () { "3B FD 13 00 00 81 31 FE 45 54 3D 31 4A 32 31 33 36 4B 56 32 33 31 DC", $"ic Card (JavaCard)" },
            new List<string> () { "3B FD 13 00 00 81 31 FE 45 80 31 81 53 53 44 31 73 84 21 C0 81 07 30", $"Personal Info Card (eID)" },
            new List<string> () { "3B FD 13 00 FF 10 00 00 31 C1 73 C8 40 00 52 A1 C5 00 90 00", $"IBKR Prepaid MasterCard, Issued by Peoples Trust Company (Bank)" },
            new List<string> () { "3B FD 18 00 00 80 31 FE 45 00 31 80 71 8E 64 52 D9 04 00 81 90 00 5B", $"Oberthur Card Systems, authentIC" },
            new List<string> () { "3B FD 18 00 00 80 31 FE 45 53 43 45 36 30 2D 43 44 30 38 31 2D 46 C4", $"Panama Electronic Signature (JavaCard)" },
            new List<string> () { "3B FD 18 00 00 80 31 FE 45 73 66 74 65 20 63 64 31 34 34 2D 6E 66 D8", $"SmartCafe Expert 3.2 144K Dual is a contact and contactless technology Java card from G&D with 144K on-board EEPROM for application and data storage. Certified to FIPS 140-2 Level 3 and Common Criteria EAL 5+. Supports specifications ISO 14443A T=CL and ISO 7816 T=1/0. (PKI)" },
            new List<string> () { "3B FD 18 00 00 80 31 FE 45 73 66 74 65 2D 63 64 30 38 30 2D 6E 66 DC", $"G&D Sm@Cafe 3.1 (eID)" },
            new List<string> () { "3B FD 18 00 00 81 31 FE 45 53 43 45 36 30 2D 43 43 30 38 31 2D 46 C2", $"Giesecke & Devrient StarSign USB Token" },
            new List<string> () { "3B FD 18 00 00 81 31 FE 45 53 4C 4A 35 32 47 78 78 79 79 79 7A 52 AA", $"The National Health Insurance Card issued by the National Health Insurance Administration Ministy of Health and Welfare in Taiwan (HealthCare)" },
            new List<string> () { "3B FD 18 00 00 81 31 FE 45 80 31 80 65 40 90 7B 01 51 83 07 90 00 55", $"Croatian Health Care card" },
            new List<string> () { "3B FD 18 00 00 81 31 FE 45 80 31 81 53 47 45 31 73 84 21 C0 81 07 2E", $"Georgian ID Card" },
            new List<string> () { "3B FD 18 00 FF 80 B1 FE 45 1F 07 80 73 00 21 13 57 4A 54 48 61 31 47 00 5F", $"Activkey Sim" },
            new List<string> () { "3B FD 18 00 FF 80 B1 FE 45 1F 07 80 73 00 21 13 57 4A 54 48 61 31 48 00 50", $"G&D Sm@rtCafe Expert 64 v2" },
            new List<string> () { "3B FD 18 00 FF 80 B1 FE 45 1F 07 80 73 00 21 13 57 4A 54 48 61 31 4A 00 52", $"e-CPF issued by AASP (Lawyers Association of São Paulo, Brazil)" },
            new List<string> () { "3B FD 18 00 FF 81 31 FE 45 43 49 42 47 55 5A 49 4A 32 41 30 38 31 58", $"Caregiver card for Dutch Medical System called UZI{Environment.NewLine}(Unieke Zorgverlener Identificatie, Caring Unique Identification)" },
            new List<string> () { "3B FD 91 00 FF 91 81 71 FE 40 00 41 20 00 41 00 81 80 31 C0 73 D6 21 C0 D8", $"Sparkasse Hanau - German contactless GeldKarte (PPSE, girogo)" },
            new List<string> () { "3B FD 94 00 00 81 31 20 43 80 31 80 65 B0 83 02 04 7E 83 00 90 00 B6", $"GXPPRo-R3.x STD PTS T=1{Environment.NewLine}Latvian Digital Signature Card (cold)" },
            new List<string> () { "3B FD 94 00 00 81 31 60 65 80 31 C0 69 4D 54 43 4F 53 73 01 01 11 E0", $"MTCOS Light" },
            new List<string> () { "3B FD 94 00 00 81 31 60 65 80 31 C0 69 4D 54 43 4F 53 73 01 01 16 E7", $"Polish student card (eID)" },
            new List<string> () { "3B FD 95 00 00 81 31 FE 41 00 8C 0F 17 BD 00 8C 00 00 00 00 00 30 F2", $"Khmer Identify Card (eID)" },
            new List<string> () { "3B FD 96 00 00 80 31 FE 45 53 4C 4A 35 32 47 78 78 79 79 79 7A 52 25", $"TIPL (Other)" },
            new List<string> () { "3B FD 96 00 00 81 31 20 43 80 31 80 65 B0 83 11 00 C8 83 00 90 00 15", $"Gemalto TOP IM GX4 MSA081, T=1 (PKI)" },
            new List<string> () { "3B FD 96 00 00 81 31 20 43 80 31 80 65 B0 83 11 48 C8 83 00 90 00", $"Pay TV" },
            new List<string> () { "3B FD 96 00 00 81 31 48 42 80 31 80 65 B0 84 01 00 C8 83 00 90 00", $"Optelio Cards (D38-D72 R6) T=1 High Speed" },
            new List<string> () { "3B FD 96 00 00 81 31 80 43 80 31 80 65 B0 85 01 00 D6 83 01 90 00 BC", $"Queensland Drivers' Licence (Australia) (eID)" },
            new List<string> () { "3B FD 96 00 00 81 31 FE 45 00 00 01 52 33 29 80 00 00 00 00 00 00 A9", $"DPI Guatemala (eID)" },
            new List<string> () { "3B FD 96 00 00 81 31 FE 45 00 00 01 52 33 67 20 00 00 00 00 00 00 47", $"DPI Guatemala (eID)" },
            new List<string> () { "3B FD 96 00 00 81 31 FE 45 00 00 01 61 63 86 20 00 00 00 00 00 00 C5", $"Renap Guatemala (eID)" },
            new List<string> () { "3B FD 96 00 00 81 31 FE 45 53 4C 4A 35 32 47 44 4C 31 32 38 43 52 57", $"Universal JCard (Contact) with Infineon SLE78 (JavaCard)" },
            new List<string> () { "3B FE 13 00 00 10 80 80 31 80 66 B0 84 0C 01 6E 01 83 00 90 00", $"Sberbank of Russia MIR debit card (Bank)" },
            new List<string> () { "3B FE 13 00 00 81 31 FE 45 4A 43 4F 50 76 32 34 31 20 4C 4F 54 20 57 B1", $"LOT test card (JavaCard){Environment.NewLine}www.lotgroup.eu" },
            new List<string> () { "3B FE 18 00 00 80 31 FE 45 45 73 74 45 49 44 20 76 65 72 20 31 2E 30 A8", $"Estonian Identity Card (EstEID 3.0 \"JavaCard\" cold)" },
            new List<string> () { "3B FE 18 00 00 80 31 FE 45 53 43 45 36 30 2D 43 44 30 38 31 2D 6E 46 A9", $"G&D Sm@rtCafé Expert 6.0 (JavaCard)" },
            new List<string> () { "3B FE 18 00 00 80 31 FE 45 53 43 45 36 30 2D 43 44 31 34 35 2D 6E 46 A0", $"Smart Cafe Expert 6.0, Java Card 3.0 (PKI)" },
            new List<string> () { "3B FE 18 00 00 80 31 FE 45 80 31 80 66 40 90 A4 16 2A 00 83 01 90 00 E1", $"Estonian Identity Card (EstEID 3.0 \"JavaCard\" warm)" },
            new List<string> () { "3B FE 18 00 00 80 31 FE 45 80 31 80 66 40 90 A4 16 2A 00 83 0F 90 00 EF", $"iEstonian Identity Card (EstEID 3.0 (18.01.2011) warm)" },
            new List<string> () { "3B FE 18 00 00 80 31 FE 45 80 31 80 66 40 90 A5 10 2E 03 83 0F 90 00 EF", $"Infineon jTOP SLE78 SLJ52GCA080CL IFX v46.03 (JavaCard) (JavaCard)" },
            new List<string> () { "3B FE 18 00 00 80 31 FE 45 80 31 80 66 40 90 A5 10 2E 03 83 81 90 00 61", $"Infineon Trust-P (JavaCard)" },
            new List<string> () { "3B FE 18 00 00 80 31 FE 45 80 31 80 66 40 90 A5 10 2E 10 83 01 90 00 F2", $"Infineon CJTOP 80K INF SLJ 52GLA080AL M8.4 (JavaCard)" },
            new List<string> () { "3B FE 18 00 00 81 31 FE 45 80 31 81 54 48 53 4D 31 73 80 21 40 81 07 FA", $"Smartcard-HSM" },
            new List<string> () { "3B FE 18 00 FF 81 31 FE 45 4A 32 31 02 41 03 47 90 49 54 43 56 00 80 44", $"Brazilian Army ID Card (eID)" },
            new List<string> () { "3B FE 18 00 FF 81 31 FE 45 63 68 61 6E 67 69 6E 67 74 65 63 4A 33 44 5E", $"xgames pki (eID)" },
            new List<string> () { "3B FE 91 00 FF 91 81 71 FE 40 00 41 20 00 11 77 C1 00 00 00 00 00 00 00 00 89", $"Tangem Tap It cryptocurrency hardware wallet (Other)" },
            new List<string> () { "3B FE 91 00 FF 91 81 71 FE 40 00 41 20 00 51 77 91 80 31 80 65 B0 85 03 00 FB", $"Italian Card Identity (CIE Comune di Parma) (eID)" },
            new List<string> () { "3B FE 91 00 FF 91 81 71 FE 40 00 41 28 00 01 80 81 00 73 C8 40 00 00 90 00 4D", $"Philips SmartMX chip (IBMs JCOP OS)" },
            new List<string> () { "3B FE 91 00 FF 91 81 71 FE 40 00 41 28 00 11 33 B0 4A 43 4F 50 33 31 56 32 C4", $"JCOP31 72K{Environment.NewLine}dual interface functionality, 1K Mifare emulation." },
            new List<string> () { "3B FE 91 00 FF 91 81 71 FE 40 00 41 38 00 11 F7 B1 4A 43 4F 50 32 34 32 52 11", $"SwissPass (Transport)" },
            new List<string> () { "3B FE 91 00 FF 91 81 71 FE 40 00 41 38 00 21 80 71 80 66 B0 07 01 01 07 07 B7", $"Java Gemalto R7 (contactless) (Bank)" },
            new List<string> () { "3B FE 91 00 FF 91 81 71 FE 40 00 41 38 00 21 80 81 80 65 A2 01 02 01 31 72 10", $"Santander TUI Brazil (Bank)" },
            new List<string> () { "3B FE 91 00 FF 91 81 71 FE 40 00 41 38 00 21 80 81 80 66 B0 07 01 01 77 07 B7", $"Java Gemalto R5 (contactless) (Bank)" },
            new List<string> () { "3B FE 94 00 00 80 1F 42 80 31 80 66 47 50 20 45 83 01 83 01 90 00 02", $"TATA Docomo UICC (Telecommunication)" },
            new List<string> () { "3B FE 94 00 FF 80 B1 FA 45 1F 03 45 73 74 45 49 44 20 76 65 72 20 31 2E 30 43", $"Estonian Identity Card (EstEID v1.0 cold){Environment.NewLine}Estonian Identity Card (EstEID v1.1 \"MULTOS\" warm)" },
            new List<string> () { "3B FE 96 00 00 80 31 FE 43 80 73 84 00 E0 65 B0 85 04 00 FB 82 90 00 4E", $"EU smart tachograph card (driver/company/control/workshop)" },
            new List<string> () { "3B FE 96 00 00 81 31 FE 45 80 31 80 66 40 90 A5 10 2E 03 83 01 90 00 6E 90 00", $"Swissbit PS-100u (JavaCard)" },
            new List<string> () { "3B FE 96 00 FF 81 31 FE 45 5D FF 6D 65 53 41 4D 20 76 31 2E 30 2E 32 0C", $"SAM module for Kharkiv E-ticket (mikroelektronika) (JavaCard)" },
            new List<string> () { "3B FE 96 00 FF C0 0A 31 FE 4D 45 73 74 45 49 44 20 76 65 72 20 31 2E 30 9B", $"Estonian Identity Card (EstEID v1.1 compatible)" },
            new List<string> () { "3B FF .. 00 00 81 31 .. 43 80 31 80 65 B0 .. .. .. .. 12 0F FE 82 90 00 ..", $"IDPrime MD 8840, 3840, 3810, 840 and 830 Cards T=1" },
            new List<string> () { "3B FF .. 00 FF 81 31 .. 45 65 63 .. .. .. .. .. .. .. .. .. .. .. .. .. ..", $"Debit card (Germany): ec-cash, GeldKarte(EUR), Maestro, Cirrus, ..." },
            new List<string> () { "3B FF 00 00 FF 81 31 FE 45 80 25 A0 00 00 00 56 57 53 43 36 35 30 00 00 00", $"SafeNet SC650" },
            new List<string> () { "3B FF 00 FF 81 31 .. 45 65 63 .. .. .. .. .. .. .. .. .. .. .. .. .. ..", $"Debit card (Germany): ec-cash, GeldKarte(EUR), Maestro, Cirrus, ..." },
            new List<string> () { "3B FF 11 00 00 81 31 FE 4D 80 25 A0 00 00 00 56 57 44 4B 33 33 30 06 00 D0", $"Datakey 32K PKI Smart Card Model 330" },
            new List<string> () { "3B FF 11 00 00 81 71 40 42 00 00 21 01 31 42 52 00 0[05] 63 .. .. .. .. 90 00.*", $"Smart Card \"The Smart Way to Login\"{Environment.NewLine}Used on Acer TravelMate to secure boot" },
            new List<string> () { "3B FF 11 00 02 40 64 80 69 A2 07 01 03 57 00 00 FF 00 83 00 90 00", $"Gemplus GemXpresso" },
            new List<string> () { "3B FF 11 00 FF 81 31 FE 95 80 F9 D2 76 00 00 25 54 44 01 00 83 00 00 00 A0", $"GiroCard Haspa Hamburger Sparkasse (Bank)" },
            new List<string> () { "3B FF 13 00 00 10 00 31 01 F1 56 40 11 00 19 00 00 00 00 00 00 00", $"BVG Guthabenkarte (Prepaid Payment Card for Berlin/Brandenburg Public Transport) (Transport){Environment.NewLine}Revolut Visa Glow-in-the-dark" },
            new List<string> () { "3B FF 13 00 00 10 00 31 01 F1 56 40 11 00 1D 00 00 00 00 00 00 00", $"albo (Bank)" },
            new List<string> () { "3B FF 13 00 00 81 31 FE 45 00 31 B9 64 04 04 EC C1 73 94 01 80 82 90 00 52", $"AKD kID (eID)" },
            new List<string> () { "3B FF 13 00 00 81 31 FE 45 00 31 B9 64 04 44 EC C1 73 94 01 80 82 90 00 12", $"Croation personal ID card (eID)" },
            new List<string> () { "3B FF 13 00 00 81 31 FE 45 43 44 32 69 A9 41 00 00 20 20 20 20 20 20 00 53", $"Visa credit card (Viseca Card Services SA, Switzerland) (Bank){Environment.NewLine}Visa credit card, UBS Switzerland (Bank)" },
            new List<string> () { "3B FF 13 00 00 81 31 FE 45 43 44 33 69 09 40 00 00 20 20 20 20 20 20 00 F3", $"VISA credit card (LBBW/Payback VISA) (Bank)" },
            new List<string> () { "3B FF 13 00 00 81 31 FE 45 4F 57 4F 4B 31 30 2D 4A .. .. .. .. .. .. .. ..", $"OWOK (One Web, One Key) login card{Environment.NewLine}Reiner SCT loginCard" },
            new List<string> () { "3B FF 13 00 00 81 31 FE 4D 80 25 A0 00 00 00 56 57 44 4B 33 33 30 06 00 D2", $"Datakey DCOS model 330 (DKCCOS 6.0 token)" },
            new List<string> () { "3B FF 13 00 FF 10 00 00 31 C1 73 C8 21 10 64 41 44 35 33 07 90 00", $"BRADESCO-CONTA SALARIO (Bank)" },
            new List<string> () { "3B FF 13 00 FF 10 00 00 31 C1 73 C8 21 10 64 41 4D 31 30 07 90 00", $"Tangerine MasterCard (Bank)" },
            new List<string> () { "3B FF 13 00 FF 10 00 00 31 C1 73 C8 21 10 64 41 4D 33 30 07 90 00", $"VISA card issued by ING-DiBa AG (Germany) (Bank)" },
            new List<string> () { "3B FF 13 00 FF 10 00 00 31 C1 73 C8 21 10 64 41 4D 33 31 07 90 00", $"NAB VISA Debit (contact interface) (Bank)" },
            new List<string> () { "3B FF 13 00 FF 10 00 00 31 C1 73 C8 21 10 64 41 4D 33 37 07 90 00", $"VISA Credit Card (Postbank), Germany (Bank)" },
            new List<string> () { "3B FF 13 00 FF 10 00 00 31 C1 73 C8 21 10 64 41 4D 33 41 07 90 00", $"BBVA debit card Uruguay. MIFRE Plus compatible. (Bank){Environment.NewLine}Scotiabank Passport Visa Infinite credit card (Bank)" },
            new List<string> () { "3B FF 13 00 FF 10 00 00 31 C1 73 C8 21 10 64 41 4D 33 43 07 90 00", $"MasterCard issued by President's Choice Bank (Canada) (Bank)" },
            new List<string> () { "3B FF 13 00 FF 10 00 00 31 C1 73 C8 21 10 64 41 4D 33 47 07 90 00", $"Chase Visa Debit Card (Bank)" },
            new List<string> () { "3B FF 13 00 FF 10 00 00 31 C1 73 C8 21 10 64 41 4D 33 48 07 90 00", $"BBVA blue VISA Debit Card (Bank){Environment.NewLine}Desjardins Bonus Visa credit card (Bank)" },
            new List<string> () { "3B FF 13 00 FF 10 80 80 31 E0 6B 04 31 05 02 AF 55 55 55 55 55 55", $"USAA EMV Visa Debit Card (Bank)" },
            new List<string> () { "3B FF 13 00 FF 10 80 80 31 E0 6B 07 14 05 02 8A 55 55 55 55 55 55", $"Tangerine Debit Card (Bank)" },
            new List<string> () { "3B FF 13 00 FF 10 80 80 31 E0 6B 08 24 05 02 B5 55 55 55 55 55 55", $"Tangerine Canada Interac debit card (Bank)" },
            new List<string> () { "3B FF 13 00 FF 80 31 FE 45 53 46 53 45 2D 43 58 33 32 32 2D 56 01 01 01 65", $"Portugal Santander Totta Universitários \"Associação Academica de Coimbra\"" },
            new List<string> () { "3B FF 13 00 FF 80 31 FE 45 53 46 53 45 2D 43 58 33 32 32 2D 56 18 02 08 76", $"SmartCafe Expert Java" },
            new List<string> () { "3B FF 13 00 FF 80 31 FE 45 53 46 53 45 2D 43 58 33 32 32 2D 56 18 03 08 77", $"Giesecke & Devrient SmartCafe Expert 32K v2.0 #2" },
            new List<string> () { "3B FF 13 00 FF 81 31 FE 45 65 63 11 04 50 02 80 00 08 39 00 04 02 05 02 E9", $"German \"Geldkarte\" supplied by the Deutsche Bank in Karlsruhe,{Environment.NewLine}Baden-Württemberg, Germany." },
            new List<string> () { "3B FF 13 00 FF 81 31 FE 45 65 63 11 04 50 02 80 00 08 54 00 04 23 05 02 A5", $"Maestrocard/Geldkarte (Stadtsparkasse Haltern, Germany)" },
            new List<string> () { "3B FF 13 00 FF 81 31 FE 5D 80 25 A0 00 00 00 56 57 44 4B 33 32 30 05 00 3F", $"Datakey DCOS model 320" },
            new List<string> () { "3B FF 13 00 FF 91 81 31 FE 41 41 43 4F 53 20 46 69 6F 6E 61 31 20 4C 63 36 F4", $"Deutsche Kreditbank Debit (Bank)" },
            new List<string> () { "3B FF 13 00 FF 91 81 31 FE 45 41 43 4F 53 20 44 49 61 6E 61 32 20 4C 63 36 DF", $"Alior Bank MasterCard debit (Bank)" },
            new List<string> () { "3B FF 14 00 FF 81 31 FE 45 80 25 A0 00 00 00 56 57 53 43 36 35 30 01 00 39", $"SafeNet SC650 (PKI)" },
            new List<string> () { "3B FF 14 00 FF 81 31 FE 45 80 25 A0 00 00 00 56 57 53 43 36 35 30 03 02 39", $"SafeNet SC650 v3.2 (PKI)" },
            new List<string> () { "3B FF 14 00 FF 81 31 FE 45 80 25 A0 00 00 00 56 57 53 43 36 35 30 04 00 3C", $"SafeNet AT SC650 V4.0 02/2018 (PKI)" },
            new List<string> () { "3B FF 18 00 00 81 31 FE 45 00 6B 04 05 01 00 01 11 01 43 4E 53 10 31 80 69", $"Sanitary Card of \"Friuli Venezia Giulia\" region (Italian Republic){Environment.NewLine}Carta Nazionale dei Servizi (Italia)" },
            new List<string> () { "3B FF 18 00 00 81 31 FE 45 00 6B 04 05 01 00 01 12 02 48 50 43 10 31 80 6C", $"Carta del Professionista Sanitario - CNS - Provincia autonoma di Trento{Environment.NewLine}Professional Health card, Autonomous Province of Trento" },
            new List<string> () { "3B FF 18 00 00 81 31 FE 45 00 6B 04 05 01 00 01 21 01 43 49 45 10 31 80 48", $"hybrid card for various health services and regional services (access to various organizations and digital signatures)" },
            new List<string> () { "3B FF 18 00 00 81 31 FE 45 00 6B 04 05 01 00 01 21 01 43 4E 53 10 31 80 59", $"CNS - Carta Nazionale dei Servizi (Italia){Environment.NewLine}PA emittente: Regione Autonoma della Sardegna{Environment.NewLine}Carta del Servizio Sanitario Regionale - Emilia Romagna" },
            new List<string> () { "3B FF 18 00 00 81 31 FE 45 00 6B 05 05 10 17 01 21 01 43 4E 53 10 31 80 5E", $"Regional Card - Regione Liguria, Veneto - Italy (eID){Environment.NewLine}Tessera Sanitaria - Carta Regionale dei Servizi" },
            new List<string> () { "3B FF 18 00 00 81 31 FE 45 00 6B 05 05 20 00 01 21 01 43 4E 53 10 31 80 79", $"health card (HealthCare)" },
            new List<string> () { "3B FF 18 00 00 81 31 FE 45 00 6B 11 05 07 00 01 11 01 43 4E 53 11 31 80 7B", $"Italian National Fire Corps -special identification card (eID)" },
            new List<string> () { "3B FF 18 00 00 81 31 FE 45 00 6B 11 05 07 00 01 21 01 43 4E 53 10 31 80 4A", $"Oberthur ID-One Cosmo V7-n it's a java card 2.2.2{Environment.NewLine}Izenpe Certificado Ciudadano (eID)" },
            new List<string> () { "3B FF 18 00 00 81 31 FE 4D 80 25 A0 00 00 00 56 57 44 4B 34 30 30 06 00 DD", $"DataKey 400 (DK400)" },
            new List<string> () { "3B FF 18 00 00 81 31 FE 55 00 6B 02 09 04 03 01 01 01 43 4E 53 10 31 80 65", $"Italian Chambers of Commerce CNS (PKI)" },
            new List<string> () { "3B FF 18 00 00 81 31 FE 55 00 6B 02 09 04 03 01 01 01 44 53 44 10 31 80 68", $"ACA (Lawyer Identifier Card) (eID)" },
            new List<string> () { "3B FF 18 00 00 81 31 FE 55 00 6B 02 09 05 03 01 01 01 43 4E 53 10 31 80 64", $"Bit4id J-SIGN 2048 (L) (PKI)" },
            new List<string> () { "3B FF 18 00 00 81 31 FE 55 00 6B 02 09 06 03 01 01 01 43 4E 53 10 31 80 67", $"ST microelettronics JSign3 (HealthCare)" },
            new List<string> () { "3B FF 18 00 00 81 31 FE 55 00 6B 02 09 14 03 01 01 01 43 4E 53 10 31 80 75", $"Smart Card INFOCERT digital key CNS from CST PADOVA (eID)" },
            new List<string> () { "3B FF 18 00 FF 80 31 FE 45 53 46 53 45 2D 43 58 33 32 32 2D 56 18 03 08 7C", $"Giesecke & Devrient Sm@rtCafé Expert 2.0" },
            new List<string> () { "3B FF 18 00 FF 80 31 FE 45 53 6D 40 72 74 43 61 66 65 45 78 70 65 72 74 65", $"Giesecke & Devrient SmartCafe 32K v1" },
            new List<string> () { "3B FF 18 00 FF 81 31 .. 45 65 63 .. .. .. .. .. .. .. .. .. .. .. .. .. ..", $"Geldkarte (generic ATR)" },
            new List<string> () { "3B FF 18 00 FF 81 31 3C 45 65 63 0D 02 31 02 50 00 10 90 00 26 00 04 10 09", $"Maestrocard/Geldkarte (Postbank, Germany)" },
            new List<string> () { "3B FF 18 00 FF 81 31 3C 45 65 63 0D 02 31 02 50 00 10 90 01 55 00 04 10 7B", $"Volksbank VR-BankCard (GeldKarte)" },
            new List<string> () { "3B FF 18 00 FF 81 31 3C 45 65 63 0D 02 31 02 50 00 10 90 05 29 00 04 10 03", $"Geldkarte/HBCI(DDV-1) (Stadtsparkasse Vorpommern, Germany)" },
            new List<string> () { "3B FF 18 00 FF 81 31 3C 45 65 63 0D 02 31 02 50 00 10 90 07 88 00 04 10 A0", $"HBCI-Karte (Berliner Sparkasse, Germany)" },
            new List<string> () { "3B FF 18 00 FF 81 31 3C 45 65 63 0D 02 31 02 50 00 10 90 13 82 00 04 10 BE", $"Bremer Karte (\"Geldkarte und BSAG-Kundenkarte in einem.\")" },
            new List<string> () { "3B FF 18 00 FF 81 31 3C 45 65 63 0D 02 31 02 50 00 10 90 14 06 00 04 10 3D", $"Geldkarte/HBCI(DDV-1) (Staedtische Sparkasse Offenbach, Germany)" },
            new List<string> () { "3B FF 18 00 FF 81 31 3C 45 65 63 0D 02 31 02 50 00 10 90 14 44 00 04 10 7F", $"Geldkarte/HBCI (Kreissparkasse Ebersberg, Deutschland)" },
            new List<string> () { "3B FF 18 00 FF 81 31 3C 45 65 63 0D 02 31 02 50 00 10 90 55 70 00 04 10 0A", $"EC-Card from DKB (Deutsche Kreditbank AG)" },
            new List<string> () { "3B FF 18 00 FF 81 31 3C 45 65 63 0D 02 31 02 80 00 12 24 30 00 20 04 10 59", $"Geldkarte (Germany)" },
            new List<string> () { "3B FF 18 00 FF 81 31 50 45 65 63 .. .. .. .. .. .. .. .. .. .. .. .. .. ..", $"GeldKarte v3 (Germany)" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 41 65 63 06 08 71 01 56 00 0F B8 60 2A A0 47 12 31", $"Debit card (Germany): Postbank - GeldKarte (EUR), girocard, V-PAY (Bank)" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 45 00 31 C5 73 C0 01 80 54 76 15 02 01 05 90 00 74", $"SIGILANCE NFC OpenPGP Smart Card (JavaCard)" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 45 54 48 43 43 31 30 54 45 43 4F 47 44 48 4E 32 24", $"National Health Insurance Card, Taiwan" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 45 54 48 43 43 31 30 54 45 43 4F 47 44 49 4E 31 26", $"National Health Insurance Card, Taiwan" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 45 65 63 0D 04 50 02 80 00 08 90 09 70 00 05 00 2A", $"Landesbank baden-Württemberg Geldkarte" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 45 65 63 0D 07 63 05 28 00 0D 90 81 06 00 06 15 58", $"Geldkarte/HBCI (Frankfurter Sparkasse, Germany)" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 45 65 63 0D 07 63 07 64 00 0D .. .. .. .. 06 15 ..", $"Giesecke & Devrient GmbH{Environment.NewLine}ROM Mask=SDP2G330.E_1 (BES0), SWP2G370.E_1 (CS0){Environment.NewLine}Init-Table=ecD6.3{Environment.NewLine}Signaturerstellungseinheit ZKA TUVIT.09397.TU.03.2005 Banking Signature Card, v6.31 NP, Type 3{Environment.NewLine}TUVIT.09397.TU.03.2005" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 45 65 63 0D 07 63 07 64 00 0D 90 58 45 00 06 15 8C", $"Stadtsparkasse München electronic cash card / Geldkarte" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 45 65 63 0D 07 63 07 64 00 0D 90 73 07 00 06 15 E5", $"Sparkasse Acchen HBCI Geld Karte" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 45 65 63 0D 07 63 07 64 00 0D 90 74 32 00 06 15 D7", $"German HBCI-Banking Card with 'Geldkarte' from the bank \"Sparkasse Marburg-Biedenkopf\"" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 45 65 63 0D 07 63 07 64 00 0D 90 92 61 00 06 15 62", $"Geldkarte (Frankfurter Sparkasse, Germany)" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 45 65 63 0D 08 65 07 64 00 0D .. .. .. .. 06 16 ..", $"Giesecke & Devrient GmbH{Environment.NewLine}ROM Mask=ecD6.5{Environment.NewLine}Init-Table=SWP3G5J0.E_1 (CS0){Environment.NewLine}Signaturerstellungseinheit ZKA Banking Signature Card, v6.51{Environment.NewLine}TUVIT.93129.TU.03.2006" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 45 65 63 0D 08 65 07 64 00 0D 91 04 90 00 06 16 0E", $"German Railway's (Deutsche Bahn AG) \"Konzernausweis\"" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 45 65 63 0D 0C 76 07 64 00 0D 95 81 20 00 07 30 0F", $"Master Card Credit Card issued by WGZ bank (all german volksbank institutes use them)" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 45 65 63 0D 0C 76 07 64 00 0D 96 03 61 00 07 30 CF", $"VR-Networld-Card with SECCOS-chip / Volksbank eG Konstanz{Environment.NewLine}for Online-Banking (FinTS / HBCI-3.0 + EBICS; RD 01/12 NetWorld)" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 45 65 63 11 03 50 02 80 00 08 27 70 02 06 05 01 8A", $"old banking card (electronic-card / Maestro / Geldkarte) of the{Environment.NewLine}\"Volksbank Gelderland eG\" (around 2003)" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 45 65 63 11 05 40 02 50 00 10 55 10 03 03 05 00 43", $"belongs to a banking card (electronic-card / Maestro / Geldkarte).{Environment.NewLine}the bank calls it \"VR-BankCard\". the banks name is \"Volksbank{Environment.NewLine}Gelderland eG\" and is part of the \"Volksbanken und Raiffeisenbanken\"" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 45 65 63 11 06 40 02 50 00 10 .. .. .. .. 05 00 ..", $"Gemplus-mids GmbH,{Environment.NewLine}ROM Mask=ZKA 322 V5A,{Environment.NewLine}Init-Table=SWI1P070.E_0 (CS0),SDI1P080.E_1 (BES0),{Environment.NewLine}Signaturerstellungseinheit ZKASignaturkarte v5.02,{Environment.NewLine}TUVIT.09385.TU.09.2004" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 45 65 63 11 06 40 02 50 00 10 05 50 03 10 05 00 43", $"HBCI-Karte (Bordesholmer Sparkasse, Germany)" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 45 65 63 11 06 40 02 50 00 10 19 10 04 20 05 00 28", $"Stadtsparkasse München HBCI card / Geldkarte" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 45 65 63 11 06 40 02 50 00 10 25 60 05 12 05 00 57", $"Geldkarte/HBCI(DDV-1) (Stadtsparkasse Vorpommern, Germany)" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 45 65 63 11 06 40 02 50 00 10 27 30 02 16 05 00 06", $"GeldKarte from Sparkasse bank" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 45 65 63 11 06 40 02 50 00 10 27 80 03 25 05 00 84", $"Volksbank VR-BankCard (GeldKarte)" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 45 65 63 11 06 40 02 50 00 10 28 50 01 11 05 00 6D", $"HBCI Bancing Card of Sparkasse Pforzheim" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 45 65 63 11 06 62 02 80 00 11 .. .. .. .. 06 13 ..", $"Giesecke & Devrient GmbH{Environment.NewLine}ROM Mask=ecD6.2,{Environment.NewLine}Init-Table=SDI1G280.E_1 (BES0),{Environment.NewLine}Signaturerstellungseinheit ZKA Banking Signature Card, v6.2b NP & 6.2f NP, Type 3{Environment.NewLine}TUVIT.09395.TU.01.2005" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 45 65 63 11 06 62 02 80 00 11 06 60 03 04 06 13 87", $"Geldkarte (Volksbank Offenburg, Germany)" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 45 65 63 11 06 62 02 80 00 11 16 50 05 17 06 13 B2", $"FinTS (BBBank Karlsruhe, Germany)" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 45 65 63 11 06 62 02 80 00 11 20 90 03 09 06 13 5C", $"Geldkarte [ec, Maestro] (1822 direkt Frankfurter Sparkasse, Germany)" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 45 65 63 11 06 62 02 80 00 11 43 50 01 17 06 13 E3", $"EC-Card of Sparkasse Pforzheim Calw" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 45 65 63 11 07 51 02 50 00 10 72 80 00 02 06 20 C6", $"Maestro Card Deutsche Kredit Bank (DKB) / Germany" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 45 65 63 11 07 64 02 80 00 11 .. .. .. .. 06 19 ..", $"Giesecke & Devrient GmbH{Environment.NewLine}ROM Mask=ecD6.4{Environment.NewLine}Init-Table=SDI2G4G0.E_4 (BES0), SWI2G4H0.E_2 (CS0){Environment.NewLine}Signaturerstellungseinheit ZKA 17.01.2006 Banking Signature Card, v6.4{Environment.NewLine}TUVIT.93123.TU.01.2006" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 45 65 63 11 08 43 02 50 00 10 .. .. .. .. 05 30 ..", $"Gemalto{Environment.NewLine}ROM Mask=ZKA 680 V5A{Environment.NewLine}Init-Table=SSI3P3M6E_1 (MS0){Environment.NewLine}Massen-Signaturerstellungseinheit ZKA Banking Signature Card, Version 5.11M{Environment.NewLine}TUVIT.93148.TU.06.2007" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 45 65 63 11 08 43 02 50 00 10 46 50 01 08 05 30 27", $"HBCI-Karte (Sparkasse Altmark-West, Salzwedel, Germany)" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 45 65 63 11 08 43 02 50 00 10 84 70 01 04 05 30 C9", $"HBCI Card (1822 direkt Frankfurter Sparkasse, Germany) Geldkarte [ec, Maestro]" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 45 65 63 11 08 66 02 80 00 11 .. .. .. .. 06 20 ..", $"Giesecke & Devrient GmbH{Environment.NewLine}ROM Mask=ecD6.6{Environment.NewLine}Init-Table=SDI3G6G0.E_3 (BES0), SSI3G6M0.E_2 (S0), SWI3G6H0.E_3 (CS0){Environment.NewLine}Signaturerstellungseinheit ZKA Banking Signature Card, Version 6.6{Environment.NewLine}TUVIT.93130.TU.05.2006 - 2. Nachbestätigung" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 45 65 63 11 08 66 02 80 00 11 40 50 03 18 06 20 D4", $"banking card (electronic-card / Maestro / Geldkarte). the bank+calls{Environment.NewLine}it \"S-Card\" or \"Sparkassen-Card\". the banks name is \"Stadtsparkasse{Environment.NewLine}Duesseldorf\" and is part of the \"Sparkassen-Finanzgruppe\" (a finance{Environment.NewLine}group, network of local banks)." },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 45 65 63 11 08 66 02 80 00 11 56 00 03 18 06 20 92", $"Geldkarte [ec, Maestro] (Sparkasse Langen-Seligenstadt, Germany)" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 45 65 63 19 01 50 02 80 00 0F .. .. .. .. 05 12 ..", $"SAGEM ORGA GmbH{Environment.NewLine}ROM Mask=SecV1.5.3{Environment.NewLine}Init-Table=SDR0O1G0.A_B (BES0), SWR0O1H0.A_5 (CS0){Environment.NewLine}Signaturerstellungseinheit ZKA SECCOS Sig v1.5.3{Environment.NewLine}BSI.02076.TE.12.2006" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 45 65 63 1A 01 41 02 50 00 10 52 09 05 67 05 10 21", $"Maestro/Geldkarte (BBBank Karlsruhe, Germany)" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 55 00 6B 02 09 02 00 01 01 01 43 4E 53 10 31 80 9F", $"Carta Nazionale dei Servizi - InfoCamere" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 55 00 6B 02 09 02 00 01 01 01 44 53 44 10 31 80 92", $"Postcom S.P.A. (digital certificate)" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 55 00 6B 02 09 02 00 01 11 01 43 4E 53 10 31 80 8F", $"Carta Regionale dei Servizi - Regione Lombardia" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 55 00 6B 02 09 02 00 01 11 01 43 4E 53 11 31 80 8E", $"Infocamere CNS" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 55 00 6B 02 09 03 00 01 11 01 43 4E 53 11 31 80 8F", $"Card description: Multiservice Card - CMCC - Arma Carabinieri (Carta Multiservizi)" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 55 00 6B 02 09 03 03 01 01 01 43 4E 53 10 31 80 9D", $"Aruba CNS for Regione Toscana (IT){Environment.NewLine}Aruba CNS for Infocamere (the Chambers of Commerce)" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 55 00 6B 02 09 03 03 01 01 01 44 53 44 10 31 80 90", $"Postecert (www.postecert.it) to legally sign documents" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 55 00 6B 02 09 03 03 01 11 01 43 4E 53 11 31 80 8C", $"Infocert 1205* smart card{Environment.NewLine}Universita' Degli Studi di Torino (Infocert)" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 55 00 6B 02 09 04 03 01 01 01 44 53 44 10 31 80 97", $"J-Sign (STMicroelectronics S.r.l. – Incard Division) (JavaCard)" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 55 00 6B 02 09 13 00 02 49 54 49 44 20 20 31 80 D3", $"electronic identity card (PKI)" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 55 00 6B 02 09 13 01 01 11 01 43 4E 53 11 31 80 9E", $"Service card of the Ministry of Defense of Italy" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 55 00 6B 02 09 13 03 01 00 01 50 53 45 10 31 80 94", $"Italian Electronic ID Card (eID)" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 55 00 6B 02 09 13 03 01 01 01 43 4E 53 10 31 80 8D", $"Aruba Digital Signature (Other)" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 55 00 6B 02 09 13 03 01 11 01 43 4E 53 11 31 80 9C", $"Politecnico di Torino Student Card (eID)" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 55 00 6B 02 09 16 17 01 11 01 43 4E 53 11 31 80 8D", $"Carta Regionale dei Servizi - Regione Autonoma Friuli Venezia Giulia (HealthCare)" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 55 00 6B 02 09 17 17 01 11 01 43 4E 53 11 31 80 8C", $"european health insurance card and Regional (ItalY - Provincia Autonoma di Trento) Service Card (CPS) (eID)" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 55 00 6B 42 49 54 34 49 44 20 31 2E 30 00 90 00 91", $"Touch&Sign 2048 (PKI)" },
            new List<string> () { "3B FF 18 00 FF 81 31 FE 55 00 6B 42 49 54 34 49 44 20 32 2E 30 00 90 00 92", $"Izenpe Green Card (Citizen Certificate) (eID)" },
            new List<string> () { "3B FF 18 00 FF C1 0A 31 FE 55 00 6B 05 08 C8 05 01 11 01 43 4E 53 10 31 80 0C", $"Carta Regionale dei Servizi - Regione Lombardia" },
            new List<string> () { "3B FF 18 00 FF C1 0A 31 FE 55 00 6B 05 08 C8 09 01 11 01 43 4E 53 10 31 80 00", $"Carta regionale dei servizi - Regione Sicilia" },
            new List<string> () { "3B FF 18 00 FF C1 0A 31 FE 55 00 6B 05 08 C8 0A 01 11 01 43 4E 53 10 31 80 03", $"Carta Regionale dei Servizi - Regione Lombardia" },
            new List<string> () { "3B FF 18 00 FF C1 0A 31 FE 55 00 6B 05 08 C8 0C 01 11 01 43 4E 53 10 31 80 05", $"Healthcare card (TS-CNS) - Provincia Autonoma di Trento{Environment.NewLine}Unified Healthcare card (TS-CNS) - Repubblica Italiana" },
            new List<string> () { "3B FF 32 00 00 10 80 80 31 E0 5B 47 42 50 00 00 00 00 00 00 02 55", $"UK NatWest BT PayToView Mondex" },
            new List<string> () { "3B FF 67 00 00 81 31 FE 45 FF 43 72 79 70 74 6E 6F 78 46 49 44 4F 32 30 5F", $"Fast Identification Online card (FIDO2) from Cryptnox manufacturer (Other)" },
            new List<string> () { "3B FF 91 00 FF 91 81 71 FC 40 00 0A 65 4B 54 50 30 44 32 65 4B 54 50 04 3D 5B 62", $"Indonesian eID (eID)" },
            new List<string> () { "3B FF 94 00 00 00 43 4D 42 5F 55 42 53 69 67 6E 30 30 30 32 15", $"UBS Access Card used for online banking with UBS in Switzerland.{Environment.NewLine}It resides in a calculator like token, that is used for a challenge{Environment.NewLine}response when logging in." },
            new List<string> () { "3B FF 94 00 00 40 0A 80 31 00 73 12 21 13 57 4A 33 0E 01 31 41 00", $"O2 Loop SIM card" },
            new List<string> () { "3B FF 94 00 00 40 0A 80 31 00 73 12 21 13 57 4A 33 0E 02 31 41 00", $"GSM-SIM Beeline RU (Telecommunication)" },
            new List<string> () { "3B FF 94 00 00 40 0A 80 31 00 73 12 21 13 57 4A 33 0E 02 32 41 00", $"Turkcell SIMPlus64 / Turkey" },
            new List<string> () { "3B FF 94 00 00 40 0A 80 31 00 73 12 21 13 57 4A 33 0E 10 31 41 00", $"GSM SIM MEDIONmobile (MVNO) the Netherlands (Telecommunication)" },
            new List<string> () { "3B FF 94 00 00 80 1F 47 80 31 E0 73 FE 21 00 00 00 00 00 83 0F 90 00 52", $"Telecommunication SIM (Telecommunication)" },
            new List<string> () { "3B FF 94 00 00 81 31 80 43 80 31 80 65 B0 85 02 01 F3 12 0F FF 82 90 00 79", $"Serbian Identity Card (eID){Environment.NewLine}Java Card (Sealys MultiApp ID v2.1) supporting Global Platform 2.1.1" },
            new List<string> () { "3B FF 94 00 00 81 31 FE 43 80 31 80 65 B0 84 61 60 FB 12 0F FD 82 90 00 0E", $"IDPrime 930 FIPS Level 3 (T=1 CT=94) (BAI4) (PKI)" },
            new List<string> () { "3B FF 94 00 00 C0 0A B1 FE 49 1F 43 80 31 E0 73 F6 21 13 57 34 36 43 41 32 30 20 68", $"Sonera UICC (Telecommunication)" },
            new List<string> () { "3B FF 94 00 FF 40 0A 80 31 00 73 12 21 13 57 4A 33 20 09 31 41 00", $"Globul GSM operator card (Bulgaria) (Telecommunication)" },
            new List<string> () { "3B FF 94 00 FF 80 B1 FE 45 1F 03 00 68 D2 76 00 00 28 FE 05 22 31 80 00 90 00 1E", $"Alice Business card (to be used in the modem supplied by an Italian provider)" },
            new List<string> () { "3B FF 94 00 FF 80 B1 FE 45 1F 03 00 68 D2 76 00 00 28 FF 05 1E 31 80 00 90 00 23", $"D-Trust Signature Card (www.d-trust.net):{Environment.NewLine}- Citizencard of the People of Ulm in Germany (Bürgerkarte){Environment.NewLine}- Qualified Electronic Signature Card (Qualifizierte Signaturkarte)" },
            new List<string> () { "3B FF 94 00 FF C0 0A 1F 43 80 31 E0 73 36 21 13 57 4A 43 49 1C 31 30 32 1C", $"Giesecke & Devrient - UniverSIM Pegasus" },
            new List<string> () { "3B FF 94 00 FF C0 0A 1F 47 80 31 E0 73 F6 21 13 57 4A 33 20 0B 31 41 41 D4", $"SIM (Telecommunication)" },
            new List<string> () { "3B FF 95 00 00 40 0A 80 31 00 73 12 21 13 57 4A 33 0E 10 31 41 00", $"Verizon GSM SIM (Telecommunication)" },
            new List<string> () { "3B FF 95 00 00 80 31 FE 43 80 31 80 67 B0 85 02 01 F3 A3 01 83 01 90 00 45", $"Swedish digital tachograph driver smart card (Other)" },
            new List<string> () { "3B FF 95 00 00 80 31 FE 43 80 31 80 67 B0 85 02 01 F3 A3 04 83 01 90 00 40", $"Company Card for authentication in tachograph applications (Other)" },
            new List<string> () { "3B FF 95 00 00 80 31 FE 43 80 31 80 67 B0 85 02 01 F3 A3 13 83 01 90 00 57", $"Driver's Card (Tachograf card) issued by pwpw Poland (Transport)" },
            new List<string> () { "3B FF 95 00 00 80 31 FE 43 80 31 80 67 B0 85 02 01 F3 A3 13 83 01 F8 3B FF", $"UK Drivers Tachograph Card (Transport)" },
            new List<string> () { "3B FF 95 00 00 C0 0A 1F 43 80 31 E0 73 36 21 13 57 4A 33 0E 02 31 41 00 88", $"\"BASE\" SIM card; BASE is a german mobile phone operator, which is a brand of E-Plus, Germany." },
            new List<string> () { "3B FF 95 00 01 50 80 1C 44 4E 41 53 50 34 32 30 20 52 65 76 53 34 30 F1", $"NC+ Polland (Pay TV)" },
            new List<string> () { "3B FF 95 00 01 50 80 1C 44 4E 41 53 50 34 32 30 20 52 65 76 53 34 30 F1 5D", $"NC+ Polland (Pay TV)" },
            new List<string> () { "3B FF 95 00 01 50 80 1C 44 4E 41 53 50 34 32 30 20 52 65 76 53 34 41", $"Platforma Canal+ Polska, cayman card (Pay TV)" },
            new List<string> () { "3B FF 95 00 FF 40 0A 80 31 00 73 1A 21 13 57 4A 50 48 60 31 41 47", $"Vodafone 64 KB SIM with Javacard" },
            new List<string> () { "3B FF 95 00 FF 40 0A 80 31 E8 73 F6 21 13 67 4A 47 48 60 31 42 00", $"Giesecke & Devrient STARSIM" },
            new List<string> () { "3B FF 95 00 FF 50 80 1C 44 4E 41 53 50 34 30 30 20 52 65 76 49 34 31", $"Pay TV card nc+ polish (seca with merlin layer) (Pay TV)" },
            new List<string> () { "3B FF 95 00 FF 50 80 1C 44 4E 41 53 50 34 30 30 20 52 65 76 49 34 35", $"Decoder card for VOO TV distributer in Belgium (Pay TV)" },
            new List<string> () { "3B FF 95 00 FF 50 80 1C 44 4E 41 53 50 34 30 30 20 52 65 76 49 34 39", $"Big TV India (Pay TV)" },
            new List<string> () { "3B FF 95 00 FF 50 80 1C 44 4E 41 53 50 34 30 30 20 52 65 76 49 34 41", $"Pay TV - NC+ in Poland (Pay TV)" },
            new List<string> () { "3B FF 95 00 FF 50 80 1C 44 4E 41 53 50 34 30 30 20 52 65 76 49 34 47", $"Platforma Canal+ Polska, cameleon card (Pay TV)" },
            new List<string> () { "3B FF 95 00 FF 50 80 1C 44 4E 41 53 50 34 30 30 20 52 65 76 49 35 48", $"Canal+ France Nagra3 (Pay TV)" },
            new List<string> () { "3B FF 95 00 FF C0 0A 1F 43 80 31 E0 73 36 21 13 57 4A 33 20 07 33 41 41 1F", $"Swisscom 3G SIM card" },
            new List<string> () { "3B FF 95 00 FF C0 0A 1F 43 80 31 E0 73 F6 21 13 57 4A 33 48 57 31 41 41 E5", $"MTNL 3G USIM (India)" },
            new List<string> () { "3B FF 95 00 FF C0 0A 1F 43 80 31 E0 73 F6 21 13 57 4A 33 48 61 32 41 47 D6", $"GSM SIM (issued by e-plus, Germany)" },
            new List<string> () { "3B FF 95 00 FF C0 0A 1F 43 80 31 E0 73 F6 21 13 57 4A 55 48 60 32 41 00 F6", $"GSM SIM from O2 Germany (UMTS ready) from 2005" },
            new List<string> () { "3B FF 95 00 FF C0 0A 1F 47 80 31 E0 73 F6 21 13 57 4A 33 20 0B 31 41 41 D5", $"Telenor SIM card (Norway)" },
            new List<string> () { "3B FF 96 00 00 80 31 FE 45 53 6D 40 72 74 43 61 66 65 20 45 78 70 2E 37 4E", $"haruka (eID)" },
            new List<string> () { "3B FF 96 00 00 81 31 80 43 80 31 80 65 B0 85 03 00 EF 12 02 6C 82 90 00 F9", $"Authorization Card (eID)" },
            new List<string> () { "3B FF 96 00 00 81 31 80 43 80 31 80 65 B0 85 03 00 EF 12 0F FF 82 90 00 67", $"Greek Academic ID (eID)" },
            new List<string> () { "3B FF 96 00 00 81 31 80 43 80 31 80 65 B0 85 03 00 EF 12 FF FE 82 90 00 96", $"Gematlo IDCore 8030 (JavaCard)" },
            new List<string> () { "3B FF 96 00 00 81 31 80 43 80 31 80 68 B0 85 03 00 EF 78 01 00 82 90 00 F1", $"Cameroon National Identity Card (eID)" },
            new List<string> () { "3B FF 96 00 00 81 31 FE 43 80 31 80 65 B0 84 56 51 10 12 01 78 82 90 00 6A", $"SafeNet eToken 5300 (PKI)" },
            new List<string> () { "3B FF 96 00 00 81 31 FE 43 80 31 80 65 B0 84 56 51 10 12 02 10 82 90 00 01", $"Nedap NexS N:Secure (eID)" },
            new List<string> () { "3B FF 96 00 00 81 31 FE 43 80 31 80 65 B0 84 61 60 FB 12 0F FD 82 90 00 0C", $"IDPrime 930 FIPS Level 2 (T=1 CT=96) (BAI3.1) (PKI)" },
            new List<string> () { "3B FF 96 00 00 81 31 FE 43 80 31 80 65 B0 85 04 00 11 12 0F FF 82 90 00 E0", $"Pakistan National identity card (eID)" },
            new List<string> () { "3B FF 96 00 00 81 31 FE 43 80 31 80 65 B0 85 04 01 20 12 0F FF 82 90 00 D0", $"Portuguese National Identity Card (eID) (eID)" },
            new List<string> () { "3B FF 96 00 00 81 31 FE 45 80 F9 A0 00 00 03 08 00 00 10 00 53 45 4E 54 AC", $"cac (eID)" },
            new List<string> () { "3B FF 96 00 00 81 31 FE 55 00 6B 02 09 04 03 01 01 01 43 4E 53 10 31 80 EB", $"Aruba PEC SpA digital signature card made by Incard (eID)" },
            new List<string> () { "3B FF 96 00 00 C0 0A 31 FE 43 80 31 80 65 B0 85 04 00 11 12 0F FF 82 90 00 AB", $"French National Identity Card (eID) (eID)" },
            new List<string> () { "3B FF 96 00 FF 81 31 FE 45 65 63 0D 09 71 07 64 00 0D 00 03 54 50 07 01 81", $"Commerzbank ServiceCard / Maestro / GeldKarte / Cirrus / girocard / CashGroup / electronic cash" },
            new List<string> () { "3B FF 96 00 FF 81 31 FE 45 65 63 19 01 50 02 80 00 0F 00 2B 00 46 50 11 72", $"Sparkasse Bremen Germany HBCI DDV" },
            new List<string> () { "3B FF 96 00 FF 81 31 FE 45 65 63 19 01 50 02 80 00 0F 00 2F 00 25 50 11 15", $"German Postbank Giro card with electronic cash, Maestro, GeldKarte features" },
            new List<string> () { "3B FF 96 00 FF 81 31 FE 4D 80 31 E0 6B 04 31 05 02 77 55 55 55 55 55 55 EA", $"IRMA card (eID)" },
            new List<string> () { "3B FF 96 00 FF 81 31 FE 55 00 6B 02 09 04 03 01 01 01 43 4E 53 10 31 80 14", $"JavaCard Bit4Id (JavaCard)" },
            new List<string> () { "3B FF 96 00 FF 91 81 31 FE 4D 80 31 E0 6B 04 31 05 02 75 55 55 55 55 55 55 79", $"algeria national identity card (eID)" },
            new List<string> () { "3B FF 96 00 FF C0 0A 1F 43 80 31 E0 73 36 21 13 57 4A 43 49 1C 31 30 32 1E", $"Giesecke & Devrient - UniverSIM Pegasus" },
            new List<string> () { "3B FF 96 00 FF C0 0A 31 FE 4D 80 31 E0 6B 04 31 05 02 A8 55 55 55 55 55 55 7E", $"Multos (Other)" },
            new List<string> () { "3B FF 97 00 00 81 31 FE 43 80 31 80 65 B0 84 61 60 FB 12 0F FD 82 90 00 0D", $"IDPrime 3930 FIPS Level 3 (T=1 CT=97) (BAI6) (PKI)" },
            new List<string> () { "3F 05 DC 20 FC 00 01", $"DigiCash Facility Card" },
            new List<string> () { "3F 28 00 00 11 14 00 03 68 90 00", $"SIMEMU - a DIY GSM SIM card" },
            new List<string> () { "3F 2D 00 27 A0 51 82 7D 00 00 00 52 00 0C 90 00", $"Porta Moedas Multibanco (Portugeese electronic purse)" },
            new List<string> () { "3F 2F 00 36 AF 69 02 04 01 80 00 00 0A 0E 83 3E 9F 16", $"SIM Card GSM (Telecommunication)" },
            new List<string> () { "3F 2F 00 80 59 AF 02 01 01 30 00 00 0A 0E 83 06 9F 12", $"Gemplus GemXplore" },
            new List<string> () { "3F 2F 00 80 59 AF 02 01 02 30 00 0C 0A 0E 83 1E 9F 16", $"GSM-SIM (900MHz) card of the carrier \"Mannesmann Mobilfunk\" for{Environment.NewLine}their network \"D2-Privat\" - now known as Vodafone Mobilfunk" },
            new List<string> () { "3F 2F 00 80 69 AE 02 02 01 36 00 00 0A 0E 83 3E 9F 16", $"GSM-SIM e-plus (1800MHz)" },
            new List<string> () { "3F 2F 00 80 69 AF 02 04 01 36 00 02 0A 0E 83 3E 9F 16", $"GSM-SIM D2 CallYa (900MHz)" },
            new List<string> () { "3F 2F 00 80 69 AF 03 07 01 59 00 00 0A 0E 83 3E 9F 16", $"Nokia SIM Ph2 16K Ver2.0" },
            new List<string> () { "3F 2F 00 80 69 AF 03 07 01 59 00 13 0A 0E 83 3E 9F 16", $"Old Spanish Telefónica Movistar GSM SIM card manufactured by Gemplus" },
            new List<string> () { "3F 2F 00 80 69 AF 03 07 01 59 00 24 0A 0E 83 3E 9F 16", $"dialog romania now orange (Telecommunication)" },
            new List<string> () { "3F 2F 00 80 69 AF 03 07 03 52 00 00 0A 0E 83 3E 9F 16", $"GemXplore 98 V1 16K" },
            new List<string> () { "3F 2F 00 80 69 AF 03 07 03 52 00 0D 0A 0E 83 3E 9F 16", $"GSM-SIM Debitel D2 (900MHz)" },
            new List<string> () { "3F 2F 00 80 69 AF 03 07 03 5A 00 15 0A 0E 83 3E 9F 16", $"Virgin Mobile SIM (Gemplus)" },
            new List<string> () { "3F 36 11 00 53 49 5B 01 51 53", $"Sodexo Pass Lunch Card. An employee benefits card to provide meal tickets to workers. (Other)" },
            new List<string> () { "3F 3D 11 00 80 67 28 50 04 02 20 00 00 83 8E 90 00", $"GSM SIM card of the Austrian provider A1" },
            new List<string> () { "3F 3E 11 00 46 52 45 43 43 49 41 52 4F 53 53 41 90 00", $"Trenitalia (Italy) fidelity card \"CartaFreccia\" (Smartcard)" },
            new List<string> () { "3F 3F 94 00 80 69 AF 03 07 01 59 00 00 0A 0E 83 3E 9F 16", $"Finnish SIM card from \"Radiolinja\" now \"Elisa\"" },
            new List<string> () { "3F 65 25 .. .. 04 6C 90 .0", $"Carte Bancaire (French banking card)" },
            new List<string> () { "3F 65 25 00 24 09 6B 90 00", $"Old Postgirot/Plusgirot SmartSec bank ID card (Bank)" },
            new List<string> () { "3F 65 25 00 24 09 6E 90 00", $"Oberthur Bull CP8 smart card. Russian \"Pochtovyj Bank\" (Bank)" },
            new List<string> () { "3F 65 25 00 2B 09 62 90 00", $"Coinamatic SmartyCity smartcard" },
            new List<string> () { "3F 65 25 00 2B 09 69 90 00", $"Municipal parking meter card for the City of St. John's, NL, Canada." },
            new List<string> () { "3F 65 25 00 2B 09 EB 90 00", $"Bull Scot 5" },
            new List<string> () { "3F 65 25 00 2[2C] 09 [F6]9 90 00", $"Sesam Vitale (French health card)" },
            new List<string> () { "3F 65 25 00 52 09 6A 90 00", $"French carte Vitale" },
            new List<string> () { "3F 65 25 00 53 43 68 90 00", $"\"Flying Cow\"- russian pirate CAM-card. (Pay TV)" },
            new List<string> () { "3F 65 25 00 A[34] 09 6A 90 00", $"Sesam Vitale (French health card)" },
            new List<string> () { "3F 65 25 08 22 04 68 90 00", $"France Telecom card (ex Pastel card)" },
            new List<string> () { "3F 65 25 08 23 04 68 90 00", $"France Telecom card" },
            new List<string> () { "3F 65 25 08 33 04 20 90 00", $"D-Trust card" },
            new List<string> () { "3F 65 25 08 43 04 6C 90 00", $"CB visa La Poste France (Oberthur){Environment.NewLine}CB visa Societe Generale France (Oberthur)" },
            new List<string> () { "3F 65 25 08 63 04 6C 90 00", $"CB visa La Poste France (Oberthur){Environment.NewLine}CB Master Carte du Crédit Mutuel" },
            new List<string> () { "3F 65 25 08 65 04 6C 90 00", $"CB visa Boursorama France (Axalto)" },
            new List<string> () { "3F 65 35 10 0. 04 [6,E]C 90 00", $"Postcard (Switzerland)" },
            new List<string> () { "3F 65 35 10 01 04 EC 90 00", $"Old Swiss Postbank card (Bank)" },
            new List<string> () { "3F 65 35 64 01 04 68 90 40", $"Bull AFNOR-positioned microprocessor chip card \"Carte Pastel Internationale\" by France Telecom (Other)" },
            new List<string> () { "3F 65 35 64 02 04 68 90 40", $"Carte Pastel Nationale - nominal France Telecom service card with Bull CP8 chip in AFNOR position (Other)" },
            new List<string> () { "3F 65 35 64 02 04 6C 90 40", $"Postcard (Switzerland)" },
            new List<string> () { "3F 67 25 00 21 20 00 0F 68 90 00", $"Smart Builder \"your kit for PC/SC applications\" and Bull" },
            new List<string> () { "3F 67 25 00 21 20 00 0F 78 90 00", $"Bank Nederlandse Gemeenten, BNG Data Services" },
            new List<string> () { "3F 67 25 00 26 14 00 20 68 90 00", $"Pay-TV card from Casema Cable Television, Netherland" },
            new List<string> () { "3F 67 25 00 2A 20 00 0F 68 90 00", $"Carte Grand Voyageur (SNCF: French train company)" },
            new List<string> () { "3F 67 25 00 2A 20 00 40 68 9F 00", $"Swiss Cash card{Environment.NewLine}Chipknip SNS Bank (banking card)" },
            new List<string> () { "3F 67 25 00 2A 20 00 41 68 90 00", $"ChipKnip" },
            new List<string> () { "3F 67 25 00 2A 20 00 4[01] 68 90 00", $"Dutch ChipKnip, Proton{Environment.NewLine}(chip Bull CC 60 V1, Bull CC 60 V2 or Bull CC 1000)" },
            new List<string> () { "3F 67 25 04 21 20 00 07 68 90 00", $"Philips TB100 (C-MOS chip)" },
            new List<string> () { "3F 67 2F 00 11 14 00 01 68 90 00", $"FilmNet(Sweden, 1984-1997) (Pay TV)" },
            new List<string> () { "3F 67 2F 00 11 14 00 03 68 90 00", $"D2MAC/Eurocrypt (Pay TV)" },
            new List<string> () { "3F 67 2F 04 11 20 00 00 68 90 00", $"BULL HN ITALIA 06/92 - 100.000 - 64MP{Environment.NewLine}La Sapienza - Universita' di Roma" },
            new List<string> () { "3F 69 00 00 24 AF 01 70 01 01 FF 90 00", $"French GSM SIM card (900MHz)" },
            new List<string> () { "3F 6A 00 00 00 64 01 50 01 0C 82 01 01 A9", $"Credit Card café Selecta" },
            new List<string> () { "3F 6B 15 00 02 A0 07 90 6F 4D 59 00 0C 90 00", $"Sky Viewing Card (Gen 1) from 1990s (Pay TV)" },
            new List<string> () { "3F 6C 00 00 24 A0 30 00 FF 00 00 01 00 04 90 00", $"Gemplus MCOS 16K DES Sample Card" },
            new List<string> () { "3F 6C 00 00 25 A0 30 89 76 00 00 01 03 0C 90 00", $"MCOS 24Ko Gemplus (eID)" },
            new List<string> () { "3F 6C 00 00 25 A0 30 89 76 00 00 04 01 0C 90 00", $"MCOS 24k EEPROM" },
            new List<string> () { "3F 6C 00 00 25 A0 31 00 FF 00 00 01 80 04 90 00", $"Motorola Clone Card (Telecommunication)" },
            new List<string> () { "3F 6C 00 00 3C A0 30 9E 61 00 00 01 00 04 90 00", $"Gemplus - British Gas - Gascard" },
            new List<string> () { "3F 6C 00 00 3C A0 30 A7 58 00 00 01 01 8C 90 00", $"Rendezvous Series 7 (D2-Mac satellite TV card)" },
            new List<string> () { "3F 6C 00 00 3D A0 30 BE 41 00 37 01 00 04 90 00", $"Sberbank (Bank)" },
            new List<string> () { "3F 6D 00 00 80 31 80 65 B0 05 01 02 5E 83 00 90 00", $"Gemplus GemXpresso 211PK or 211PK-IS" },
            new List<string> () { "3F 6D 00 00 80 31 80 65 B0 05 01 02 5E 92 00 90 00", $"Gemplus GemXpresso 32K" },
            new List<string> () { "3F 77 13 00 00 C1 14 00 A2 68 90 00", $"Boxer DTV Sweden (Pay TV)" },
            new List<string> () { "3F 77 18 00 00 C1 14 00 A2 68 90 00", $"Viacess card HRT (Hrvatska Radio Televizija)" },
            new List<string> () { "3F 77 18 00 00 C1 14 01 A2 68 90 00", $"VIA 2.6 XXX (Pay TV)" },
            new List<string> () { "3F 77 18 00 00 C2 14 00 C1 68 90 00", $"Viaccess Sexview" },
            new List<string> () { "3F 77 18 00 00 C2 47 40 00 68 90 00", $"Viacces card: SRG SSR idèe suisse" },
            new List<string> () { "3F 77 18 00 00 C2 7A 41 02 68 90 00", $"Viacces card: SRG SSR idée suisse" },
            new List<string> () { "3F 77 18 00 00 C2 7A 42 02 68 90 00", $"SCT (Via Access)" },
            new List<string> () { "3F 77 18 00 00 C2 7A 43 02 68 90 00", $"DORCEL (Via Access)" },
            new List<string> () { "3F 77 18 00 00 C2 7A 44 02 68 90 00", $"XXX Redlight_HD (Viaccess)" },
            new List<string> () { "3F 77 18 00 00 C2 EB 41 02 6C 90 00", $"Elite HD10+ (Pay TV){Environment.NewLine}Sattelite cryptoworks card - Smart card Viaccess (Telesat - belgium) (Pay TV)" },
            new List<string> () { "3F 77 18 00 00 C2 EB 45 02 6C 90 00", $"facetv (Other)" },
            new List<string> () { "3F 77 18 00 00 D3 8A 40 01 64 90 00", $"Skylink Viaccess 5.0 (Pay TV)" },
            new List<string> () { "3F 77 18 00 00 D3 8A 42 01 64 90 00", $"Satellite decoder card for TV Vlaanderen (Other)" },
            new List<string> () { "3F 77 18 25 00 29 14 00 62 68 90 00", $"Viaccess card" },
            new List<string> () { "3F 78 12 25 01 40 B0 03 4A 50 20 48 55", $"DSS/DTV H" },
            new List<string> () { "3F 78 13 25 03 40 B0 20 FF FF 4A 50 00", $"DSS/DTV P4" },
            new List<string> () { "3F 7D 11 25 02 41 B0 03 69 FF 4A 50 F0 80 00 56 54 03", $"Viasat Baltics Videoguard card (Pay TV)" },
            new List<string> () { "3F 7E 11 25 05 21 B0 12 00 00 4D 59 00 00 00 53 4B 09 00", $"Sky Viewing Card (Gen 9) (Pay TV)" },
            new List<string> () { "3F 7E 11 25 05 40 B0 08 00 00 4D 59 00 00 00 53 4B 0B 07", $"BSkyB Series 11 (DSS satellite TV card)" },
            new List<string> () { "3F 7E 11 25 05 40 B0 08 00 00 4D 59 00 00 00 53 4B 0B 08", $"Sky Series 11 (DSS satellite TV card)" },
            new List<string> () { "3F 7E 11 25 09 40 B0 01 00 00 4D 59 00 00 03 53 4B 0A 01", $"Sky Series 10 (DSS satellite TV card)" },
            new List<string> () { "3F 7F 11 25 03 33 B0 09 69 FF 4A 50 70 00 00 56 54 01 00 00", $"Viasat Baltic (satellite card, NDS)" },
            new List<string> () { "3F 7F 11 25 05 40 B0 0F 69 FF 4D 59 00 00 00 53 4B 0C 06 00", $"Sky Series 12 (DSS satellite TV card)" },
            new List<string> () { "3F 7F 13 25 01 40 B0 10 69 FF 4A 50 01 47 4C 00 00 00 00 00", $"NDS Smartcard (Pay TV)" },
            new List<string> () { "3F 7F 13 25 02 40 B0 0C 69 FF 4A 50 C0 00 00 52 53 00 00 00", $"Stream Italy NDS 1 (Pay TV)" },
            new List<string> () { "3F 7F 13 25 02 40 B0 12 69 FF 4A 50 90 47 4C 00 00 00 00 00", $"NDS VideoGuard GL23 Card (Sky Brazil) (Pay TV)" },
            new List<string> () { "3F 7F 13 25 02 40 B0 12 69 FF 4A 50 90 54 56 00 00 00 00 00", $"NDS Smartcard (Pay TV)" },
            new List<string> () { "3F 7F 13 25 02 41 B0 04 FF FF 4A 50 80 80 00 00 00 47 58 06", $"NDS card DIRECTV (Other)" },
            new List<string> () { "3F 7F 13 25 02 41 B0 0E FF FF 4A 50 80 80 00 00 00 47 4C 07", $"SKY BRASIL (Pay TV)" },
            new List<string> () { "3F 7F 13 25 03 33 B0 06 69 FF 4A 50 D0 00 00 53 59 00 00 00", $"Sky 2005/6 (DSS satellite TV card)" },
            new List<string> () { "3F 7F 13 25 03 33 B0 11 69 FF 4A 50 50 00 00 49 56 01 00 00", $"Indonesia Videoguard 2 card" },
            new List<string> () { "3F 7F 13 25 03 38 B0 04 FF FF 4A 50 00 00 29 48 55 .. .. ..", $"DSS/DTV HU" },
            new List<string> () { "3F 7F 13 25 03 40 B0 0B 69 4C 4A 50 C0 00 00 53 59 00 00 00", $"Sky Digital (DSS satellite TV card)" },
            new List<string> () { "3F 7F 13 25 05 40 B0 11 69 FF 4A 50 00 00 00 47 54 00 0C 00", $"YES DBS Israel Videoguard 090C,090D" },
            new List<string> () { "3F 7F 15 25 03 33 B0 11 69 FF 4A 50 50 00 00 49 56 01 00 00", $"Sky Germany V13 Smartcard (Pay TV)" },
            new List<string> () { "3F 96 18 80 01 80 51 00 61 10 30 9F", $"Atmel/Athena T0 Inverse Convention PC/SC Compliance Test Card No. 2" },
            new List<string> () { "3F EF 00 FF 81 31 .. 45 65 63", $"Debit card (Germany): ec-cash, GeldKarte(DEM), Maestro, Cirrus" },
            new List<string> () { "3F FA 11 25 04 00 01 B0 02 00 00 4D 59 00 81 80", $"Sky Viewing Card (Gen 1) from 1990s (Pay TV)" },
            new List<string> () { "3F FA 11 25 05 00 01 B0 02 3B 36 4D 59 02 80 90", $"HackTV SKY11 PIC16F84 card (Other)" },
            new List<string> () { "3F FA 11 25 05 00 01 B0 02 3B 40 4D 59 00 81 80", $"Sky Viewing Card (Gen 7) (Pay TV)" },
            new List<string> () { "3F FA 11 25 05 00 01 B0 02 3B D0 4D 59 00 81 80", $"Sky Viewing Card (Gen 7) (Pay TV)" },
            new List<string> () { "3F FD 11 25 02 50 00 03 33 B0 15 69 FF 4A 50 F0 80 03 4B 4C 03", $"Kabel Deutschland G02 (Pay TV)" },
            new List<string> () { "3F FD 11 25 02 50 80 0F 41 B0 0A 69 FF 4A 50 70 80 00 5A 45 03", $"Buypass smart card (Bank)" },
            new List<string> () { "3F FD 11 25 02 50 80 0F 41 B0 0D 69 FF 4A 50 F0 80 00 56 54 03", $"Viasat (Pay TV)" },
            new List<string> () { "3F FD 11 25 02 50 80 0F 41 B0 0F 69 FF 4A 50 F0 80 00 5A 4A 03", $"Telekom Romania Communications (DVB-C) (Pay TV)" },
            new List<string> () { "3F FD 13 25 02 50 00 0F 33 B0 0F 69 FF 4A 50 D0 00 00 53 59 02", $"Sky Digital (DSS satellite TV card) 2009 issue" },
            new List<string> () { "3F FD 13 25 02 50 00 0F 33 B0 16 69 FF 4A 50 D0 80 00 53 59 03", $"Sky TV Multiroom (Pay TV)" },
            new List<string> () { "3F FD 13 25 02 50 80 0F .. B0 .. 69 FF 4A 50 D0 80 00 49 54 03", $"Sky (Italy) VideoGuard CAM card" },
            new List<string> () { "3F FD 13 25 02 50 80 0F 33 B0 08 FF FF 4A 50 90 00 00 47 4C 01", $"Sky (Brasil) VideoGuard CAM card" },
            new List<string> () { "3F FD 13 25 02 50 80 0F 33 B0 08 FF FF 4A 50 90 00 00 54 56 01", $"NDS Videoguard TV CAM card (Sky Mexico 0905) (Pay TV)" },
            new List<string> () { "3F FD 13 25 02 50 80 0F 41 B0 0A 69 FF 4A 50 F0 00 00 50 31 03", $"Sky Germany V14 NDS card (Pay TV)" },
            new List<string> () { "3F FD 13 25 02 50 80 0F 55 B0 02 69 FF 4A 50 F0 80 00 50 31 03", $"SKY DE V15 (Pay TV)" },
            new List<string> () { "3F FD 14 25 01 50 00 0F 33 B0 0B FF FF 4A 50 80 00 00 47 58 01", $"DirecTV card" },
            new List<string> () { "3F FD 14 25 02 50 80 0F 41 B0 0A 69 FF 4A 50 70 80 00 4E 5A 03", $"Sky Network Televisiton Limited (New Zealand) card for new (2016) decoder. Reportedly, this is a Kaon NS1120-500 box. (Pay TV)" },
            new List<string> () { "3F FD 14 25 02 50 80 0F 41 B0 0D 69 FF 4A 50 F0 80 00 42 52 03", $"Airtel Digital TV (Pay TV)" },
            new List<string> () { "3F FD 15 25 02 50 00 03 33 B0 15 69 FF 4A 50 F0 80 03 4B 4C 03", $"Kabel Deutschland (G02) (Pay TV)" },
            new List<string> () { "3F FD 15 25 02 50 80 0F 41 B0 05 69 FF 4A 50 F0 00 00 41 5A 03", $"astro Pay TV Measat 91.5 E Caid: 0910 Provider: 000000" },
            new List<string> () { "3F FD 15 25 02 50 80 0F 41 B0 0A 69 FF 4A 50 F0 00 00 50 31 03", $"Sky Germany [NDS|V14] (098C:000000) (Pay TV)" },
            new List<string> () { "3F FD 15 25 02 50 80 0F 41 B0 0D 69 FF 4A 50 F0 80 00 41 4A 03", $"beIN Sports Arabia NDS (09B5:000000) (Pay TV)" },
            new List<string> () { "3F FD 15 25 02 50 80 0F 41 B0 0D 69 FF 4A 50 F0 80 00 56 54 03", $"TVPLAY HOME (Pay TV)" },
            new List<string> () { "3F FD 15 25 02 50 80 0F 55 B0 02 69 FF 4A 50 F0 80 00 50 31 03", $"Sky Germany [NDS|V15] (098D:000000) (Pay TV) (Pay TV)" },
            new List<string> () { "3F FD FF 25 02 50 80 0F 54 B0 04 69 FF 4A 50 D0 80 00 49 54 03", $"SKy italia (Pay TV)" },
            new List<string> () { "3F FE 14 25 03 10 80 41 B0 07 69 FF 4A 50 70 80 42 45 54 41 14", $"OSN (Pay TV)" },
            new List<string> () { "3F FF 11 25 03 10 80 41 B0 06 69 FF 4A 50 70 00 00 41 5A 01 00 11", $"Astro (Pay TV)" },
            new List<string> () { "3F FF 11 25 03 10 80 41 B0 07 69 FF 4A 50 70 00 00 50 31 01 00 11", $"Sky (Germany) VideoGuard CAM card (www.sky.de)" },
            new List<string> () { "3F FF 13 25 02 50 80 0F 54 B0 03 FF FF 4A 50 80 00 00 00 00 47 4C 05", $"Sky (Brasil) VideoGuard CAM card" },
            new List<string> () { "3F FF 13 25 03 10 80 33 B0 0E 69 FF 4A 50 70 00 00 49 54 02 00 00", $"Sky entitlement card" },
            new List<string> () { "3F FF 13 25 03 10 80 33 B0 10 69 FF 4A 50 70 00 00 4E 5A 01 00 00", $"NDS SKY NZ (Pay TV)" },
            new List<string> () { "3F FF 13 25 0B 50 00 0F 33 B0 04 69 FF 4A 50 E0 00 00 53 35 00 00 00", $"Stream TV (IP television) decoder card, provided by stream.ru ISP in Moscow" },
            new List<string> () { "3F FF 13 25 0B 50 00 0F 33 B0 04 69 FF 4A 50 E0 00 00 54 38 00 00 00", $"Stream TV (IP television) decoder card, provided by aon (Telekom Austria) TV card, contains Incorporated NDS Videoguard (TM) security system" },
            new List<string> () { "3F FF 14 25 03 10 80 33 B0 10 69 FF 4A 50 70 00 00 43 52 01 00 00", $"Russian cable TV AKADO NDS Card (Pay TV)" },
            new List<string> () { "3F FF 14 25 03 10 80 33 B0 10 69 FF 4A 50 70 00 00 5A 45 01 00 00", $"Norwegian DVB-C provider Get (www.get.no). NDS Videoguard security card." },
            new List<string> () { "3F FF 14 25 03 10 80 41 B0 01 69 FF 4A 50 70 00 00 53 56 01 00 00", $"Tata Sky India Card (Telecommunication)" },
            new List<string> () { "3F FF 14 25 03 10 80 41 B0 01 69 FF 4A 50 70 00 00 5A 48 01 00 00", $"\"D-Smart\" NDS from Turkie" },
            new List<string> () { "3F FF 14 25 03 10 80 41 B0 01 69 FF 4A 50 70 00 00 5A 4A 01 00 00", $"Dolce by RomTelecom (Pay TV)" },
            new List<string> () { "3F FF 14 25 03 10 80 41 B0 01 69 FF 4A 50 70 00 00 5A 4B 01 00 00", $"Pay TV, Viasat Ukraine" },
            new List<string> () { "3F FF 14 25 03 10 80 41 B0 02 69 FF 4A 50 70 00 00 42 52 01 00 00", $"airtel (Pay TV)" },
            new List<string> () { "3F FF 14 25 03 10 80 41 B0 02 69 FF 4A 50 70 80 00 41 4F 01 00 14", $"Pay TV" },
            new List<string> () { "3F FF 14 25 03 10 80 41 B0 07 69 FF 4A 50 70 80 00 58 44 01 00 14", $"NDS vivacom Bulgaria card (Pay TV)" },
            new List<string> () { "3F FF 14 25 03 10 80 41 B0 07 69 FF 4A 50 70 80 00 58 44 01 00 FF", $"Provider Vivacom Bulgaria NDS (Pay TV)" },
            new List<string> () { "3F FF 14 25 03 10 80 41 B0 07 69 FF 4A 50 70 80 00 58 45 01 00 14", $"Sat TV (Other)" },
            new List<string> () { "3F FF 14 25 03 10 80 54 B0 01 69 FF 4A 50 70 00 00 4B 57 01 00 00", $"PayTV Card Kabel BW (www.kabelbw.de), Encryption: NDS by Videoguard, Distribution Standard: DVB-C" },
            new List<string> () { "3F FF 15 25 03 10 80 41 B0 07 69 FF 4A 50 70 00 00 50 31 01 00 15", $"Sky (Germany) VideoGuard CAM card (www.sky.de) in Fast Mode (ins7e11=15) (Pay TV)" },
            new List<string> () { "3F FF 3F 3F 3F 3F 00 3F 3F FF 3F 3F 3F 3F 3F FF 3F FF 95 3F FF 95 3F FF", $"Premium joker card to see Spanish TDT premium (goltv)" },
            new List<string> () { "3F FF 95 00 FF 91 81 71 .. 47 00 .. 4. 4. .. .. 3. 3. 3. 20 .. 65 7. .. .. .. ..", $"Nagravision TV CAM card" },
            new List<string> () { "3F FF 95 00 FF 91 81 71 .. 47 00 4E 43 4D 45 44 3. 30 3. 20 52 65 76 .. 3. 3. ..", $"Mediaset Premium (Italy) CAM card" },
            new List<string> () { "3F FF 95 00 FF 91 81 71 64 47 00 44 4E 41 53 50 30 30 33 20 52 65 76 33 32 33 FF", $"Satellite TV Card \"Via Digital\" (Nagra)" },
            new List<string> () { "3F FF 95 00 FF 91 81 71 A0 47 00 44 4E 41 53 50 30 31 30 20 52 65 76 41 32 30 48", $"DSS/DISH ROM10" },
            new List<string> () { "3F FF 95 00 FF 91 81 71 A0 47 00 44 4E 41 53 50 30 31 30 20 52 65 76 41 32 31 49", $"PayTV card for DishNetwork Sat receiver" },
            new List<string> () { "3F FF 95 00 FF 91 81 71 A0 47 00 44 4E 41 53 50 30 31 31 20 52 65 76 42", $"NTL digial TV card (Nagravision)" },
            new List<string> () { "3F FF 95 00 FF 91 81 71 A0 47 00 44 4E 41 53 50 30 31 31 20 52 65 76 42 30 36 4E", $"Telewest Broadband (Nagravision)" },
            new List<string> () { "3F FF 95 00 FF 91 81 71 A0 47 00 44 4E 41 53 50 30 31 31 20 52 65 76 42 30 42 3A", $"NagraVision card for StarHub Digital Cable DVB-C Singapore" },
            new List<string> () { "3F FF 95 00 FF 91 81 71 A0 47 00 44 4E 41 53 50 30 31 31 20 52 65 76 42 30 44 3C", $"NagraVision card for Virgin Media in the UK" },
            new List<string> () { "3F FF 95 00 FF 91 81 71 A0 47 00 44 4E 41 53 50 31 38 30 20 4D 65 72 30 30 30 28", $"NagraVision (VG04) for Virgin Media (UK){Environment.NewLine}NagraVision 3 for DigiTV (Romania)" },
            new List<string> () { "3F FF 95 00 FF 91 81 71 FE 47 00 44 4E 41 53 50 31 31 30 20 52 65 76 41 30 31 14", $"TVA Digital - Nagra Vision ID TV-01" },
            new List<string> () { "3F FF 95 00 FF 91 81 71 FE 47 00 44 4E 41 53 50 31 31 30 20 52 65 76 41 30 37 12", $"UPC Austria/UPC-Cablecom Switzerland, digital television encryption card" },
            new List<string> () { "3F FF 95 00 FF 91 81 71 FE 47 00 44 4E 41 53 50 31 31 30 20 52 65 76 41 32 32 15", $"UM01 card from German Unitymedia cable TV provider" },
            new List<string> () { "3F FF 95 00 FF 91 81 71 FE 47 00 44 4E 41 53 50 31 31 30 20 52 65 76 41 34 35 14", $"Telenet N.V. HDTV Decoder Card Belgium" },
            new List<string> () { "3F FF 95 00 FF 91 81 71 FE 47 00 44 4E 41 53 50 31 31 30 20 52 65 76 41 43 33 65", $"Brazilian NET Digital (Cable TV provider) - Nagra Vision \"NASP110 RevA01\"" },
            new List<string> () { "3F FF 95 00 FF 91 81 71 FE 47 00 44 4E 41 53 50 31 34 32 20 52 65 76 47 30 32 16", $"Polsat Nagra3{Environment.NewLine}Brazil - Claro TV Nagra3 Red" },
            new List<string> () { "3F FF 95 00 FF 91 81 71 FE 47 00 44 4E 41 53 50 31 34 32 20 52 65 76 47 30 34 10", $"Nagra 3 Card - Telefonica Brazil Green" },
            new List<string> () { "3F FF 95 00 FF 91 81 71 FE 47 00 44 4E 41 53 50 31 34 32 20 52 65 76 47 30 36 12", $"UM02 card from German Unitymedia cable TV provider" },
            new List<string> () { "3F FF 95 00 FF 91 81 71 FE 47 00 44 4E 41 53 50 31 34 32 20 52 65 76 47 43 34 63", $"HD+ card used by the satelite company astra for decryption of the HDTV channels of RTL, VOX, Sat1 and ProSieben. Nagravision V3 is used for the encryption." },
            new List<string> () { "3F FF 95 00 FF 91 81 71 FE 47 00 44 4E 41 53 50 31 38 30 20 4D 65 72 4A 30 32 0E", $"Nagra 3 Digital Plus Spain" },
            new List<string> () { "3F FF 95 00 FF 91 81 71 FE 47 00 44 4E 41 53 50 32 34 31 20 44 73 68", $"DISH Network G3 (Pay TV)" },
            new List<string> () { "3F FF 95 00 FF 91 81 71 FE 47 00 44 4E 41 53 50 32 34 31 20 44 73 68 48 30 39 0C", $"Dish Network Smart Card (Pay TV)" },
            new List<string> () { "3F FF 95 00 FF 91 81 71 FE 47 00 4E 43 4D 45 44 30 30 41 20 52 65 76 41 30 31 6C", $"Mediaset Premium (Italy) 2013" },
            new List<string> () { "3F FF 95 00 FF 91 81 71 FE 47 00 4E 43 4D 45 44 30 30 43 20 52 65 76 43 30 30 6D", $"Mediaset Premium rechargeable (Pay TV)" },
            new List<string> () { "3F FF 95 00 FF 91 81 71 FE 47 00 54 49 47 45 52 36 30 31 20 52 65 76 4D 38 30 13", $"Spanish pay TV card for GOLTV" },
            new List<string> () { "3F FF 95 00 FF 91 81 71 FE 57 00 44 4E 41 53 50 31 42 30 20 4D 65 72 57 32 30 79", $"Vodafone HUNGARY (Pay TV)" },
            new List<string> () { "3F FF 95 00 FF 91 81 71 FE 57 00 44 4E 41 53 50 34 31 30 20 52 65 76 51 32 32 10", $"Telenet CI+ card Belgium (Pay TV)" },
            new List<string> () { "3F FF 95 00 FF 91 81 71 FE 57 00 44 4E 41 53 50 34 31 30 20 52 65 76 51 32 35 17", $"New ROM of Nagra PayTV Card DNASP410 (Pay TV)" },
            new List<string> () { "3F FF 95 00 FF 91 81 71 FE 57 00 44 4E 41 53 50 34 31 30 20 52 65 76 51 32 37 15", $"New Digi Slovakia (Pay TV)" },
            new List<string> () { "3F FF 95 00 FF 91 81 71 FE 57 00 44 4E 41 53 50 34 31 30 20 52 65 76 51 32 42 60", $"Nagravision Kudelski Generation 7 card Rom410 MerQ2B  (Pay TV)" },
            new List<string> () { "3F FF 95 00 FF 91 81 71 FE 57 00 44 4E 41 53 50 34 31 30 20 52 65 76 51 32 53 71", $"Slovak and Czech pay TV provider Slovak Telecom (Pay TV)" },
            new List<string> () { "3F FF 95 00 FF 91 81 71 FE 57 00 44 4E 41 53 50 34 32 30 20 52 65 76 53 36 30 17", $"HD+ HD04b Card (Pay TV)" },
            new List<string> () { "3F FF 95 00 FF 91 81 71 FE 57 00 44 4E 41 53 50 34 32 30 20 52 65 76 53 36 42 65", $"Nagra Kudelski / Canalsat Reunion (Pay TV)" },
            new List<string> () { "3F FF 95 00 FF 91 81 71 FE 57 00 44 4E 41 53 50 34 35 30 20 52 65 76 57 36 30 14", $"HD+ HD05 Paytv smartcard (Pay TV)" },
            new List<string> () { "3F FF 95 00 FF 91 81 71 FE 57 00 44 4E 41 53 50 34 38 32 20 52 65 76 52 32 36 1C", $"Max Tv Croatia (Pay TV)" },
            new List<string> () { "3F FF 95 00 FF 91 81 71 FE 57 00 44 4E 41 53 50 35 35 32 20 44 73 68 4E 30 39 1F", $"Dish Network ROM552 (Pay TV)" },
            new List<string> () { "3F FF 95 00 FF 91 81 71 FE 57 00 44 4E 41 53 50 35 35 32 20 44 73 68 4E 30 42 64", $"Dish Network (Satellite Pay TV) NASP 552 (Pay TV)" },
            new List<string> () { "3F FF 95 00 FF 91 81 71 FE 57 00 44 4E 41 53 50 35 35 33 20 52 65 76 4E 30 41 78", $"BELL CA EXPRESS VU CARD (Pay TV)" },
            new List<string> () { "3F FF 95 00 FF 91 81 71 FF 47 00 44 4E 41 53 50 53 30 31 20 44 73 68 36 30 39 16", $"PayTV card for DishNetwork Sat receiver" },
            new List<string> () { "3F FF 95 00 FF 91 81 71 FF 47 00 44 4E 41 53 50 53 30 31 20 52 65 76 36 34 37 02", $"BELL EXPRESSVU (Pay TV)" },
            new List<string> () { "3F FF 95 00 FF 91 81 71 FF 47 00 54 49 47 45 52 30 30 33 20 52 65 76 32 35 30 64", $"Tivu' Sat (Italy) CAM card www.tivu.tv" }
        };
    }
}
